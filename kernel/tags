!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDR_FETCH_TYPE	trace/trace_probe.h	178;"	kind:macro
ASSIGN_FETCH_TYPE	trace/trace_probe.h	190;"	kind:macro
ASSIGN_FETCH_TYPE_ALIAS	trace/trace_probe.h	194;"	kind:macro
ASSIGN_FETCH_TYPE_END	trace/trace_probe.h	197;"	kind:macro
AUDIT_BUILD_CONTEXT	audit.h	/^	AUDIT_BUILD_CONTEXT,	\/* Create the per-task audit_context,$/;"	kind:enumerator	enum:audit_state
AUDIT_DISABLED	audit.h	/^	AUDIT_DISABLED,		\/* Do not create per-task audit_context.$/;"	kind:enumerator	enum:audit_state
AUDIT_INODE_BUCKETS	audit.h	205;"	kind:macro
AUDIT_NAMES	audit.h	18;"	kind:macro
AUDIT_NAME_FULL	audit.h	214;"	kind:macro
AUDIT_RECORD_CONTEXT	audit.h	/^	AUDIT_RECORD_CONTEXT	\/* Create the per-task audit_context,$/;"	kind:enumerator	enum:audit_state
BENCHMARK_EVENT_STRLEN	trace/trace_benchmark.h	13;"	kind:macro
BPF_LOCAL_LIST_T_OFFSET	bpf/bpf_lru_list.h	13;"	kind:macro
BPF_LRU_LIST_T_ACTIVE	bpf/bpf_lru_list.h	/^	BPF_LRU_LIST_T_ACTIVE,$/;"	kind:enumerator	enum:bpf_lru_list_type
BPF_LRU_LIST_T_FREE	bpf/bpf_lru_list.h	/^	BPF_LRU_LIST_T_FREE,$/;"	kind:enumerator	enum:bpf_lru_list_type
BPF_LRU_LIST_T_INACTIVE	bpf/bpf_lru_list.h	/^	BPF_LRU_LIST_T_INACTIVE,$/;"	kind:enumerator	enum:bpf_lru_list_type
BPF_LRU_LOCAL_LIST_T_FREE	bpf/bpf_lru_list.h	/^	BPF_LRU_LOCAL_LIST_T_FREE,$/;"	kind:enumerator	enum:bpf_lru_list_type
BPF_LRU_LOCAL_LIST_T_PENDING	bpf/bpf_lru_list.h	/^	BPF_LRU_LOCAL_LIST_T_PENDING,$/;"	kind:enumerator	enum:bpf_lru_list_type
BRANCH_FLAGS	trace/trace.h	1201;"	kind:macro
BRANCH_FLAGS	trace/trace.h	1204;"	kind:macro
BW_SHIFT	sched/sched.h	1883;"	kind:macro
BW_UNIT	sched/sched.h	1884;"	kind:macro
C	trace/trace.h	1264;"	kind:macro
C	trace/trace.h	1265;"	kind:macro
C	trace/trace.h	1277;"	kind:macro
C	trace/trace.h	1278;"	kind:macro
C	trace/trace_probe.h	442;"	kind:macro
C	trace/trace_probe.h	443;"	kind:macro
CGROUP_MGCTX_INIT	cgroup/cgroup-internal.h	139;"	kind:macro
CGROUP_TASKSET_INIT	cgroup/cgroup-internal.h	132;"	kind:macro
CPUPRI_IDLE	sched/cpupri.h	6;"	kind:macro
CPUPRI_INVALID	sched/cpupri.h	5;"	kind:macro
CPUPRI_NORMAL	sched/cpupri.h	7;"	kind:macro
CPUPRI_NR_PRIORITIES	sched/cpupri.h	3;"	kind:macro
CS_NAME_LEN	time/timekeeping.h	30;"	kind:macro
DBG_PASS_EVENT	debug/debug_core.h	61;"	kind:macro
DBG_SWITCH_CPU_EVENT	debug/debug_core.h	63;"	kind:macro
DCPU_IS_SLAVE	debug/debug_core.h	35;"	kind:macro
DCPU_NEXT_MASTER	debug/debug_core.h	34;"	kind:macro
DCPU_SSTEP	debug/debug_core.h	36;"	kind:macro
DCPU_WANT_MASTER	debug/debug_core.h	33;"	kind:macro
DECLARE_BASIC_PRINT_TYPE_FUNC	trace/trace_probe.h	150;"	kind:macro
DECLARE_BITMAP	sched/sched.h	/^	DECLARE_BITMAP(bitmap, MAX_RT_PRIO+1); \/* include 1 bit for delimiter *\/$/;"	kind:prototype	struct:rt_prio_array	access:public	signature:(bitmap, MAX_RT_PRIO+1)
DEFAULT_FETCH_TYPE	trace/trace_probe.h	173;"	kind:macro
DEFAULT_FETCH_TYPE_STR	trace/trace_probe.h	174;"	kind:macro
DEFINE_CGROUP_MGCTX	cgroup/cgroup-internal.h	146;"	kind:macro
DEFINE_FIELD	trace/trace_probe.h	43;"	kind:macro
DEFINE_FIELD	trace/trace_probe.h	44;"	kind:macro
DEFINE_OUTPUT_COPY	events/internal.h	155;"	kind:macro
DEFINE_PER_CPU	locking/qspinlock_stat.h	/^static DEFINE_PER_CPU(u64, pv_kick_time);$/;"	kind:prototype	signature:(u64, pv_kick_time)
DEQUEUE_MOVE	sched/sched.h	1684;"	kind:macro
DEQUEUE_NOCLOCK	sched/sched.h	1685;"	kind:macro
DEQUEUE_SAVE	sched/sched.h	1683;"	kind:macro
DEQUEUE_SLEEP	sched/sched.h	1682;"	kind:macro
DISABLE_EVENT_STR	trace/trace.h	1616;"	kind:macro
DISABLE_HIST_STR	trace/trace.h	1618;"	kind:macro
DL_SCALE	sched/sched.h	144;"	kind:macro
DYNTICK_IRQ_NONIDLE	rcu/rcu.h	16;"	kind:macro
DYN_FTRACE_TEST_NAME	trace/trace.h	/^extern int DYN_FTRACE_TEST_NAME(void);$/;"	kind:prototype	signature:(void)
DYN_FTRACE_TEST_NAME	trace/trace.h	811;"	kind:macro
DYN_FTRACE_TEST_NAME2	trace/trace.h	/^extern int DYN_FTRACE_TEST_NAME2(void);$/;"	kind:prototype	signature:(void)
DYN_FTRACE_TEST_NAME2	trace/trace.h	813;"	kind:macro
ENABLE_EVENT_STR	trace/trace.h	1615;"	kind:macro
ENABLE_HIST_STR	trace/trace.h	1617;"	kind:macro
ENERGY_UTIL	sched/sched.h	/^	ENERGY_UTIL,$/;"	kind:enumerator	enum:schedutil_type
ENQUEUE_HEAD	sched/sched.h	1692;"	kind:macro
ENQUEUE_MIGRATED	sched/sched.h	1695;"	kind:macro
ENQUEUE_MIGRATED	sched/sched.h	1697;"	kind:macro
ENQUEUE_MOVE	sched/sched.h	1689;"	kind:macro
ENQUEUE_NOCLOCK	sched/sched.h	1690;"	kind:macro
ENQUEUE_REPLENISH	sched/sched.h	1693;"	kind:macro
ENQUEUE_RESTORE	sched/sched.h	1688;"	kind:macro
ENQUEUE_WAKEUP	sched/sched.h	1687;"	kind:macro
ERRORS	trace/trace_probe.h	/^enum { ERRORS };$/;"	kind:enumerator	enum:__anon18
ERRORS	trace/trace_probe.h	387;"	kind:macro
ERRORS	trace/trace_probe.h	388;"	kind:macro
EVENT_CMD_FL_NEEDS_REC	trace/trace.h	/^	EVENT_CMD_FL_NEEDS_REC		= 2,$/;"	kind:enumerator	enum:event_command_flags
EVENT_CMD_FL_POST_TRIGGER	trace/trace.h	/^	EVENT_CMD_FL_POST_TRIGGER	= 1,$/;"	kind:enumerator	enum:event_command_flags
EVENT_COUNT	locking/qspinlock_stat.h	18;"	kind:macro
FETCH_INSN_MAX	trace/trace_probe.h	129;"	kind:macro
FETCH_NOP_SYMBOL	trace/trace_probe.h	/^	FETCH_NOP_SYMBOL,	\/* Unresolved Symbol holder *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_ARG	trace/trace_probe.h	/^	FETCH_OP_ARG,		\/* Function argument : .param *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_COMM	trace/trace_probe.h	/^	FETCH_OP_COMM,		\/* Current comm *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_DATA	trace/trace_probe.h	/^	FETCH_OP_DATA,		\/* Allocated data: .data *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_DEREF	trace/trace_probe.h	/^	FETCH_OP_DEREF,		\/* Dereference: .offset *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_END	trace/trace_probe.h	/^	FETCH_OP_END,$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_FOFFS	trace/trace_probe.h	/^	FETCH_OP_FOFFS,		\/* File offset: .immediate *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_IMM	trace/trace_probe.h	/^	FETCH_OP_IMM,		\/* Immediate : .immediate *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_LP_ARRAY	trace/trace_probe.h	/^	FETCH_OP_LP_ARRAY,	\/* Array: .param = loop count *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_MOD_BF	trace/trace_probe.h	/^	FETCH_OP_MOD_BF,	\/* Bitfield: .basesize, .lshift, .rshift *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_NOP	trace/trace_probe.h	/^	FETCH_OP_NOP = 0,$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_REG	trace/trace_probe.h	/^	FETCH_OP_REG,		\/* Register : .param = offset *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_RETVAL	trace/trace_probe.h	/^	FETCH_OP_RETVAL,	\/* Return value *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_STACK	trace/trace_probe.h	/^	FETCH_OP_STACK,		\/* Stack : .param = index *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_STACKP	trace/trace_probe.h	/^	FETCH_OP_STACKP,	\/* Stack pointer *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_ST_MEM	trace/trace_probe.h	/^	FETCH_OP_ST_MEM,	\/* Mem: .offset, .size *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_ST_RAW	trace/trace_probe.h	/^	FETCH_OP_ST_RAW,	\/* Raw: .size *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_ST_STRING	trace/trace_probe.h	/^	FETCH_OP_ST_STRING,	\/* String: .offset, .size *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_ST_UMEM	trace/trace_probe.h	/^	FETCH_OP_ST_UMEM,	\/* Mem: .offset, .size *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_ST_USTRING	trace/trace_probe.h	/^	FETCH_OP_ST_USTRING,	\/* User String: .offset, .size *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_OP_UDEREF	trace/trace_probe.h	/^	FETCH_OP_UDEREF,	\/* User-space Dereference: .offset *\/$/;"	kind:enumerator	enum:fetch_op
FETCH_TOKEN_COMM	trace/trace_probe.h	130;"	kind:macro
FGRAPH_FLAGS	trace/trace.h	1194;"	kind:macro
FGRAPH_FLAGS	trace/trace.h	1197;"	kind:macro
FIELD_STRING_FUNC	trace/trace_probe.h	41;"	kind:macro
FIELD_STRING_IP	trace/trace_probe.h	39;"	kind:macro
FIELD_STRING_RETIP	trace/trace_probe.h	40;"	kind:macro
FILTER_PRED_FOLD	trace/trace.h	1484;"	kind:macro
FILTER_PRED_INVALID	trace/trace.h	1482;"	kind:macro
FILTER_PRED_IS_RIGHT	trace/trace.h	1483;"	kind:macro
FREQUENCY_UTIL	sched/sched.h	/^	FREQUENCY_UTIL,$/;"	kind:enumerator	enum:schedutil_type
FTRACE_CMP_TYPE	trace/trace.h	365;"	kind:macro
FTRACE_CTX_FIELDS	trace/trace_entries.h	120;"	kind:macro
FTRACE_ENTRY	trace/trace.h	1901;"	kind:macro
FTRACE_ENTRY	trace/trace.h	1902;"	kind:macro
FTRACE_ENTRY	trace/trace.h	70;"	kind:macro
FTRACE_ENTRY	trace/trace.h	71;"	kind:macro
FTRACE_ENTRY_DUP	trace/trace.h	1905;"	kind:macro
FTRACE_ENTRY_DUP	trace/trace.h	1906;"	kind:macro
FTRACE_ENTRY_DUP	trace/trace.h	77;"	kind:macro
FTRACE_ENTRY_DUP	trace/trace.h	78;"	kind:macro
FTRACE_ENTRY_PACKED	trace/trace.h	1909;"	kind:macro
FTRACE_ENTRY_PACKED	trace/trace.h	1910;"	kind:macro
FTRACE_ENTRY_PACKED	trace/trace.h	86;"	kind:macro
FTRACE_ENTRY_PACKED	trace/trace.h	87;"	kind:macro
FTRACE_ENTRY_REG	trace/trace.h	80;"	kind:macro
FTRACE_ENTRY_REG	trace/trace.h	81;"	kind:macro
FTRACE_HASH_FL_MOD	trace/trace.h	/^	FTRACE_HASH_FL_MOD	= (1 << 0),$/;"	kind:enumerator	enum:__anon21
FTRACE_STACK_ENTRIES	trace/trace_entries.h	169;"	kind:macro
FUNCTION_DEFAULT_FLAGS	trace/trace.h	1211;"	kind:macro
FUNCTION_DEFAULT_FLAGS	trace/trace.h	1214;"	kind:macro
FUNCTION_FLAGS	trace/trace.h	1208;"	kind:macro
FUNCTION_FLAGS	trace/trace.h	1213;"	kind:macro
F_STRUCT	trace/trace.h	67;"	kind:macro
F_STRUCT	trace/trace.h	68;"	kind:macro
GCOV_ADD	gcov/gcov.h	/^	GCOV_ADD,$/;"	kind:enumerator	enum:gcov_action
GCOV_DATA_MAGIC	gcov/gcov.h	26;"	kind:macro
GCOV_H	gcov/gcov.h	16;"	kind:macro
GCOV_REMOVE	gcov/gcov.h	/^	GCOV_REMOVE,$/;"	kind:enumerator	enum:gcov_action
GCOV_TAG_COUNTER_BASE	gcov/gcov.h	28;"	kind:macro
GCOV_TAG_FOR_COUNTER	gcov/gcov.h	29;"	kind:macro
GCOV_TAG_FUNCTION	gcov/gcov.h	27;"	kind:macro
GFP_KDB	debug/kdb/kdb_private.h	236;"	kind:macro
HAVE_RT_PUSH_IPI	sched/sched.h	587;"	kind:macro
IDX_INVALID	sched/cpudeadline.h	3;"	kind:macro
IF_ASSIGN	trace/trace.h	368;"	kind:macro
IF_ASSIGN	trace/trace.h	369;"	kind:macro
INVALID_RCU_FLAVOR	rcu/rcu.h	/^	INVALID_RCU_FLAVOR$/;"	kind:enumerator	enum:rcutorture_type
IRQF_MODIFY_MASK	irq/settings.h	34;"	kind:macro
IRQF_MODIFY_MASK	irq/settings.h	35;"	kind:macro
IRQS_AUTODETECT	irq/internals.h	/^	IRQS_AUTODETECT		= 0x00000001,$/;"	kind:enumerator	enum:__anon25
IRQS_NMI	irq/internals.h	/^	IRQS_NMI		= 0x00002000,$/;"	kind:enumerator	enum:__anon25
IRQS_ONESHOT	irq/internals.h	/^	IRQS_ONESHOT		= 0x00000020,$/;"	kind:enumerator	enum:__anon25
IRQS_PENDING	irq/internals.h	/^	IRQS_PENDING		= 0x00000200,$/;"	kind:enumerator	enum:__anon25
IRQS_POLL_INPROGRESS	irq/internals.h	/^	IRQS_POLL_INPROGRESS	= 0x00000008,$/;"	kind:enumerator	enum:__anon25
IRQS_REPLAY	irq/internals.h	/^	IRQS_REPLAY		= 0x00000040,$/;"	kind:enumerator	enum:__anon25
IRQS_SPURIOUS_DISABLED	irq/internals.h	/^	IRQS_SPURIOUS_DISABLED	= 0x00000002,$/;"	kind:enumerator	enum:__anon25
IRQS_SUSPENDED	irq/internals.h	/^	IRQS_SUSPENDED		= 0x00000800,$/;"	kind:enumerator	enum:__anon25
IRQS_TIMINGS	irq/internals.h	/^	IRQS_TIMINGS		= 0x00001000,$/;"	kind:enumerator	enum:__anon25
IRQS_WAITING	irq/internals.h	/^	IRQS_WAITING		= 0x00000080,$/;"	kind:enumerator	enum:__anon25
IRQTF_AFFINITY	irq/internals.h	/^	IRQTF_AFFINITY,$/;"	kind:enumerator	enum:__anon24
IRQTF_FORCED_THREAD	irq/internals.h	/^	IRQTF_FORCED_THREAD,$/;"	kind:enumerator	enum:__anon24
IRQTF_RUNTHREAD	irq/internals.h	/^	IRQTF_RUNTHREAD,$/;"	kind:enumerator	enum:__anon24
IRQTF_WARNED	irq/internals.h	/^	IRQTF_WARNED,$/;"	kind:enumerator	enum:__anon24
IRQ_BITMAP_BITS	irq/internals.h	15;"	kind:macro
IRQ_BITMAP_BITS	irq/internals.h	17;"	kind:macro
IRQ_DISABLE_UNLAZY	irq/settings.h	33;"	kind:macro
IRQ_GET_DESC_CHECK_GLOBAL	irq/internals.h	160;"	kind:macro
IRQ_GET_DESC_CHECK_PERCPU	irq/internals.h	161;"	kind:macro
IRQ_IS_POLLED	irq/settings.h	32;"	kind:macro
IRQ_LEVEL	irq/settings.h	25;"	kind:macro
IRQ_NESTED_THREAD	irq/settings.h	30;"	kind:macro
IRQ_NOAUTOEN	irq/settings.h	29;"	kind:macro
IRQ_NOPROBE	irq/settings.h	26;"	kind:macro
IRQ_NOREQUEST	irq/settings.h	27;"	kind:macro
IRQ_NORESEND	irq/internals.h	75;"	kind:macro
IRQ_NOTHREAD	irq/settings.h	28;"	kind:macro
IRQ_NO_BALANCING	irq/settings.h	24;"	kind:macro
IRQ_PER_CPU	irq/settings.h	23;"	kind:macro
IRQ_PER_CPU_DEVID	irq/settings.h	31;"	kind:macro
IRQ_RESEND	irq/internals.h	74;"	kind:macro
IRQ_START_COND	irq/internals.h	78;"	kind:macro
IRQ_START_FORCE	irq/internals.h	77;"	kind:macro
IRQ_TIMINGS_MASK	irq/internals.h	290;"	kind:macro
IRQ_TIMINGS_SHIFT	irq/internals.h	288;"	kind:macro
IRQ_TIMINGS_SIZE	irq/internals.h	289;"	kind:macro
KDB_CMD_CPU	debug/kdb/kdb_private.h	20;"	kind:macro
KDB_CMD_GO	debug/kdb/kdb_private.h	19;"	kind:macro
KDB_CMD_KGDB	debug/kdb/kdb_private.h	22;"	kind:macro
KDB_CMD_SS	debug/kdb/kdb_private.h	21;"	kind:macro
KDB_DB_BPT	debug/kdb/kdb_private.h	/^	KDB_DB_BPT,	\/* Breakpoint *\/$/;"	kind:enumerator	enum:__anon35
KDB_DB_NOBPT	debug/kdb/kdb_private.h	/^	KDB_DB_NOBPT	\/* Spurious breakpoint *\/$/;"	kind:enumerator	enum:__anon35
KDB_DB_SS	debug/kdb/kdb_private.h	/^	KDB_DB_SS,	\/* Single-step trap *\/$/;"	kind:enumerator	enum:__anon35
KDB_DB_SSBPT	debug/kdb/kdb_private.h	/^	KDB_DB_SSBPT,	\/* Single step over breakpoint *\/$/;"	kind:enumerator	enum:__anon35
KDB_DEBUG	debug/kdb/kdb_private.h	34;"	kind:macro
KDB_DEBUG_FLAG_AR	debug/kdb/kdb_private.h	27;"	kind:macro
KDB_DEBUG_FLAG_ARA	debug/kdb/kdb_private.h	28;"	kind:macro
KDB_DEBUG_FLAG_BB	debug/kdb/kdb_private.h	29;"	kind:macro
KDB_DEBUG_FLAG_BB_SUMM	debug/kdb/kdb_private.h	26;"	kind:macro
KDB_DEBUG_FLAG_BP	debug/kdb/kdb_private.h	25;"	kind:macro
KDB_DEBUG_FLAG_MASK	debug/kdb/kdb_private.h	31;"	kind:macro
KDB_DEBUG_FLAG_SHIFT	debug/kdb/kdb_private.h	32;"	kind:macro
KDB_DEBUG_FLAG_STATE	debug/kdb/kdb_private.h	30;"	kind:macro
KDB_DEBUG_STATE	debug/kdb/kdb_private.h	36;"	kind:macro
KDB_GREPPING_FLAG_SEARCH	debug/kdb/kdb_private.h	198;"	kind:macro
KDB_GREP_STRLEN	debug/kdb/kdb_private.h	200;"	kind:macro
KDB_MAXBPT	debug/kdb/kdb_private.h	69;"	kind:macro
KDB_PLATFORM_ENV	debug/kdb/kdb_private.h	41;"	kind:macro
KDB_PLATFORM_ENV	debug/kdb/kdb_private.h	53;"	kind:macro
KDB_SP_DEFAULT	debug/kdb/kdb_private.h	223;"	kind:macro
KDB_SP_NEWLINE	debug/kdb/kdb_private.h	222;"	kind:macro
KDB_SP_PAREN	debug/kdb/kdb_private.h	219;"	kind:macro
KDB_SP_SPACEA	debug/kdb/kdb_private.h	218;"	kind:macro
KDB_SP_SPACEB	debug/kdb/kdb_private.h	217;"	kind:macro
KDB_SP_SYMSIZE	debug/kdb/kdb_private.h	221;"	kind:macro
KDB_SP_VALUE	debug/kdb/kdb_private.h	220;"	kind:macro
KDB_STATE	debug/kdb/kdb_private.h	148;"	kind:macro
KDB_STATE_ARCH	debug/kdb/kdb_private.h	145;"	kind:macro
KDB_STATE_CLEAR	debug/kdb/kdb_private.h	150;"	kind:macro
KDB_STATE_CMD	debug/kdb/kdb_private.h	122;"	kind:macro
KDB_STATE_DOING_KGDB	debug/kdb/kdb_private.h	143;"	kind:macro
KDB_STATE_DOING_SS	debug/kdb/kdb_private.h	126;"	kind:macro
KDB_STATE_GO1	debug/kdb/kdb_private.h	139;"	kind:macro
KDB_STATE_GO_SWITCH	debug/kdb/kdb_private.h	133;"	kind:macro
KDB_STATE_HOLD_CPU	debug/kdb/kdb_private.h	125;"	kind:macro
KDB_STATE_IP_ADJUSTED	debug/kdb/kdb_private.h	137;"	kind:macro
KDB_STATE_KDB	debug/kdb/kdb_private.h	120;"	kind:macro
KDB_STATE_KDB_CONTROL	debug/kdb/kdb_private.h	123;"	kind:macro
KDB_STATE_KEXEC	debug/kdb/kdb_private.h	142;"	kind:macro
KDB_STATE_KEYBOARD	debug/kdb/kdb_private.h	140;"	kind:macro
KDB_STATE_KGDB_TRANS	debug/kdb/kdb_private.h	144;"	kind:macro
KDB_STATE_LEAVING	debug/kdb/kdb_private.h	121;"	kind:macro
KDB_STATE_PAGER	debug/kdb/kdb_private.h	132;"	kind:macro
KDB_STATE_RECURSE	debug/kdb/kdb_private.h	136;"	kind:macro
KDB_STATE_REENTRY	debug/kdb/kdb_private.h	130;"	kind:macro
KDB_STATE_SET	debug/kdb/kdb_private.h	149;"	kind:macro
KDB_STATE_SSBPT	debug/kdb/kdb_private.h	127;"	kind:macro
KDB_STATE_SUPPRESS	debug/kdb/kdb_private.h	131;"	kind:macro
KDB_STATE_WAIT_IPI	debug/kdb/kdb_private.h	135;"	kind:macro
KDB_TSK	debug/kdb/kdb_private.h	225;"	kind:macro
KDB_TSKREGS	debug/kdb/kdb_private.h	226;"	kind:macro
KDB_WORD_SIZE	debug/kdb/kdb_private.h	257;"	kind:macro
LINUX_KEXEC_INTERNAL_H	kexec_internal.h	3;"	kind:macro
LINUX_UID16_H	uid16.h	3;"	kind:macro
LOAD_AVG_MAX	sched/sched-pelt.h	14;"	kind:macro
LOAD_AVG_PERIOD	sched/sched-pelt.h	13;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	14;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	20;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	35;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	41;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	45;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	49;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	51;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	55;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	57;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	61;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	63;"	kind:macro
LOCKDEP_STATE	locking/lockdep_internals.h	67;"	kind:macro
LOCKEVENT_reset_cnts	locking/lock_events.h	/^	LOCKEVENT_reset_cnts = lockevent_num,$/;"	kind:enumerator	enum:lock_events
LOCKF_ENABLED_IRQ	locking/lockdep_internals.h	/^static const unsigned long LOCKF_ENABLED_IRQ =$/;"	kind:variable
LOCKF_ENABLED_IRQ_ALL	locking/lockdep_internals.h	69;"	kind:macro
LOCKF_ENABLED_IRQ_READ	locking/lockdep_internals.h	/^static const unsigned long LOCKF_ENABLED_IRQ_READ =$/;"	kind:variable
LOCKF_IRQ	locking/lockdep_internals.h	72;"	kind:macro
LOCKF_IRQ_READ	locking/lockdep_internals.h	73;"	kind:macro
LOCKF_USED_IN_IRQ	locking/lockdep_internals.h	/^static const unsigned long LOCKF_USED_IN_IRQ =$/;"	kind:variable
LOCKF_USED_IN_IRQ_ALL	locking/lockdep_internals.h	70;"	kind:macro
LOCKF_USED_IN_IRQ_READ	locking/lockdep_internals.h	/^static const unsigned long LOCKF_USED_IN_IRQ_READ =$/;"	kind:variable
LOCK_EVENT	locking/lock_events_list.h	17;"	kind:macro
LOCK_USAGE_CHARS	locking/lockdep_internals.h	116;"	kind:macro
LOCK_USAGE_DIR_MASK	locking/lockdep_internals.h	26;"	kind:macro
LOCK_USAGE_READ_MASK	locking/lockdep_internals.h	25;"	kind:macro
LOCK_USAGE_STATES	locking/lockdep_internals.h	/^	LOCK_USAGE_STATES$/;"	kind:enumerator	enum:lock_usage_bit
LOCK_USAGE_STATE_MASK	locking/lockdep_internals.h	27;"	kind:macro
LOCK_USED	locking/lockdep_internals.h	/^	LOCK_USED,$/;"	kind:enumerator	enum:lock_usage_bit
MATCH_END_ONLY	trace/trace.h	/^	MATCH_END_ONLY,$/;"	kind:enumerator	enum:regex_type
MATCH_FRONT_ONLY	trace/trace.h	/^	MATCH_FRONT_ONLY,$/;"	kind:enumerator	enum:regex_type
MATCH_FULL	trace/trace.h	/^	MATCH_FULL = 0,$/;"	kind:enumerator	enum:regex_type
MATCH_GLOB	trace/trace.h	/^	MATCH_GLOB,$/;"	kind:enumerator	enum:regex_type
MATCH_INDEX	trace/trace.h	/^	MATCH_INDEX,$/;"	kind:enumerator	enum:regex_type
MATCH_MIDDLE_ONLY	trace/trace.h	/^	MATCH_MIDDLE_ONLY,$/;"	kind:enumerator	enum:regex_type
MAX_ARCH_HEADER_SIZE	power/power.h	25;"	kind:macro
MAX_ARGSTR_LEN	trace/trace_probe.h	33;"	kind:macro
MAX_ARG_NAME_LEN	trace/trace_probe.h	35;"	kind:macro
MAX_ARRAY_LEN	trace/trace_probe.h	198;"	kind:macro
MAX_ARRAY_LEN	trace/trace_probe.h	34;"	kind:macro
MAX_EVENT_NAME_LEN	trace/trace.h	1878;"	kind:macro
MAX_FILTER_PRED	trace/trace.h	1493;"	kind:macro
MAX_LOCKDEP_CHAINS	locking/lockdep_internals.h	109;"	kind:macro
MAX_LOCKDEP_CHAINS_BITS	locking/lockdep_internals.h	93;"	kind:macro
MAX_LOCKDEP_CHAINS_BITS	locking/lockdep_internals.h	99;"	kind:macro
MAX_LOCKDEP_CHAIN_HLOCKS	locking/lockdep_internals.h	111;"	kind:macro
MAX_LOCKDEP_ENTRIES	locking/lockdep_internals.h	92;"	kind:macro
MAX_LOCKDEP_ENTRIES	locking/lockdep_internals.h	97;"	kind:macro
MAX_SHARES	sched/sched.h	418;"	kind:macro
MAX_STACK_TRACE_ENTRIES	locking/lockdep_internals.h	105;"	kind:macro
MAX_STACK_TRACE_ENTRIES	locking/lockdep_internals.h	94;"	kind:macro
MAX_STRING_SIZE	trace/trace_probe.h	36;"	kind:macro
MAX_TRACE_ARGS	trace/trace_probe.h	32;"	kind:macro
MIN_SHARES	sched/sched.h	417;"	kind:macro
NICE_0_LOAD	sched/sched.h	137;"	kind:macro
NICE_0_LOAD_SHIFT	sched/sched.h	119;"	kind:macro
NICE_0_LOAD_SHIFT	sched/sched.h	123;"	kind:macro
NOHZ_BALANCE_KICK	sched/sched.h	2204;"	kind:macro
NOHZ_BALANCE_KICK_BIT	sched/sched.h	2201;"	kind:macro
NOHZ_KICK_MASK	sched/sched.h	2207;"	kind:macro
NOHZ_MODE_HIGHRES	time/tick-sched.h	/^	NOHZ_MODE_HIGHRES,$/;"	kind:enumerator	enum:tick_nohz_mode
NOHZ_MODE_INACTIVE	time/tick-sched.h	/^	NOHZ_MODE_INACTIVE,$/;"	kind:enumerator	enum:tick_nohz_mode
NOHZ_MODE_LOWRES	time/tick-sched.h	/^	NOHZ_MODE_LOWRES,$/;"	kind:enumerator	enum:tick_nohz_mode
NOHZ_STATS_KICK	sched/sched.h	2205;"	kind:macro
NOHZ_STATS_KICK_BIT	sched/sched.h	2202;"	kind:macro
NR_BPF_LRU_LIST_COUNT	bpf/bpf_lru_list.h	11;"	kind:macro
NR_BPF_LRU_LIST_T	bpf/bpf_lru_list.h	10;"	kind:macro
NR_BPF_LRU_LOCAL_LIST_T	bpf/bpf_lru_list.h	12;"	kind:macro
NS_TO_JIFFIES	sched/sched.h	102;"	kind:macro
NUMA_BACKPLANE	sched/sched.h	/^	NUMA_BACKPLANE,$/;"	kind:enumerator	enum:numa_topology_type
NUMA_CPU	sched/sched.h	/^	NUMA_CPU,$/;"	kind:enumerator	enum:numa_faults_stats
NUMA_CPUBUF	sched/sched.h	/^	NUMA_CPUBUF$/;"	kind:enumerator	enum:numa_faults_stats
NUMA_DIRECT	sched/sched.h	/^	NUMA_DIRECT,$/;"	kind:enumerator	enum:numa_topology_type
NUMA_GLUELESS_MESH	sched/sched.h	/^	NUMA_GLUELESS_MESH,$/;"	kind:enumerator	enum:numa_topology_type
NUMA_MEM	sched/sched.h	/^	NUMA_MEM = 0,$/;"	kind:enumerator	enum:numa_faults_stats
NUMA_MEMBUF	sched/sched.h	/^	NUMA_MEMBUF,$/;"	kind:enumerator	enum:numa_faults_stats
OBJ_TREE	gcov/gcov.h	/^		OBJ_TREE,$/;"	kind:enumerator	enum:gcov_link::__anon1
PAGES_FOR_IO	power/power.h	48;"	kind:macro
PRINTK_NMI_CONTEXT_MASK	printk/internal.h	11;"	kind:macro
PRINTK_NMI_DIRECT_CONTEXT_MASK	printk/internal.h	10;"	kind:macro
PRINTK_SAFE_CONTEXT_MASK	printk/internal.h	9;"	kind:macro
PRINT_TYPE_FMT_NAME	trace/trace_probe.h	147;"	kind:macro
PRINT_TYPE_FUNC_NAME	trace/trace_probe.h	146;"	kind:macro
PV_HE_MIN	locking/qspinlock_paravirt.h	177;"	kind:macro
PV_HE_PER_LINE	locking/qspinlock_paravirt.h	176;"	kind:macro
PV_PREV_CHECK_MASK	locking/qspinlock_paravirt.h	38;"	kind:macro
RATIO_SHIFT	sched/sched.h	1885;"	kind:macro
RCU_ABBR	rcu/tree.h	391;"	kind:macro
RCU_ABBR	rcu/tree.h	394;"	kind:macro
RCU_BOOST_DELAY_JIFFIES	rcu/tree_plugin.h	1098;"	kind:macro
RCU_EXP_BLKD	rcu/tree_plugin.h	100;"	kind:macro
RCU_EXP_TASKS	rcu/tree_plugin.h	98;"	kind:macro
RCU_FLAVOR	rcu/rcu.h	/^	RCU_FLAVOR,$/;"	kind:enumerator	enum:rcutorture_type
RCU_GP_BLKD	rcu/tree_plugin.h	99;"	kind:macro
RCU_GP_CLEANED	rcu/tree.h	368;"	kind:macro
RCU_GP_CLEANUP	rcu/tree.h	367;"	kind:macro
RCU_GP_DOING_FQS	rcu/tree.h	366;"	kind:macro
RCU_GP_DONE_GPS	rcu/tree.h	362;"	kind:macro
RCU_GP_FLAG_FQS	rcu/tree.h	357;"	kind:macro
RCU_GP_FLAG_INIT	rcu/tree.h	356;"	kind:macro
RCU_GP_IDLE	rcu/tree.h	360;"	kind:macro
RCU_GP_INIT	rcu/tree.h	364;"	kind:macro
RCU_GP_ONOFF	rcu/tree.h	363;"	kind:macro
RCU_GP_TASKS	rcu/tree_plugin.h	97;"	kind:macro
RCU_GP_WAIT_FQS	rcu/tree.h	365;"	kind:macro
RCU_GP_WAIT_GPS	rcu/tree.h	361;"	kind:macro
RCU_IDLE_GP_DELAY	rcu/tree_plugin.h	1285;"	kind:macro
RCU_IDLE_LAZY_GP_DELAY	rcu/tree_plugin.h	1286;"	kind:macro
RCU_JIFFIES_FQS_DIV	rcu/tree.h	261;"	kind:macro
RCU_JIFFIES_TILL_FORCE_QS	rcu/tree.h	257;"	kind:macro
RCU_KTHREAD_MAX	rcu/tree.h	36;"	kind:macro
RCU_KTHREAD_OFFCPU	rcu/tree.h	34;"	kind:macro
RCU_KTHREAD_RUNNING	rcu/tree.h	32;"	kind:macro
RCU_KTHREAD_STOPPED	rcu/tree.h	31;"	kind:macro
RCU_KTHREAD_WAITING	rcu/tree.h	33;"	kind:macro
RCU_KTHREAD_YIELDING	rcu/tree.h	35;"	kind:macro
RCU_NAME	rcu/tree.h	398;"	kind:macro
RCU_NAME	rcu/tree.h	402;"	kind:macro
RCU_NAME_RAW	rcu/tree.h	392;"	kind:macro
RCU_NAME_RAW	rcu/tree.h	395;"	kind:macro
RCU_NEST_BIAS	rcu/tree_plugin.h	347;"	kind:macro
RCU_NEST_NMAX	rcu/tree_plugin.h	348;"	kind:macro
RCU_NEST_PMAX	rcu/tree_plugin.h	349;"	kind:macro
RCU_NOCB_WAKE	rcu/tree.h	254;"	kind:macro
RCU_NOCB_WAKE_FORCE	rcu/tree.h	255;"	kind:macro
RCU_NOCB_WAKE_NOT	rcu/tree.h	253;"	kind:macro
RCU_SCHEDULER_INACTIVE	rcu/rcu.h	443;"	kind:macro
RCU_SCHEDULER_INIT	rcu/rcu.h	444;"	kind:macro
RCU_SCHEDULER_RUNNING	rcu/rcu.h	445;"	kind:macro
RCU_SEQ_CTR_SHIFT	rcu/rcu.h	23;"	kind:macro
RCU_SEQ_STATE_MASK	rcu/rcu.h	24;"	kind:macro
RCU_STALL_DELAY_DELTA	rcu/tree_stall.h	18;"	kind:macro
RCU_STALL_DELAY_DELTA	rcu/tree_stall.h	20;"	kind:macro
RCU_STALL_RAT_DELAY	rcu/tree.h	265;"	kind:macro
RCU_TASKS_FLAVOR	rcu/rcu.h	/^	RCU_TASKS_FLAVOR,$/;"	kind:enumerator	enum:rcutorture_type
RCU_TRIVIAL_FLAVOR	rcu/rcu.h	/^	RCU_TRIVIAL_FLAVOR,$/;"	kind:enumerator	enum:rcutorture_type
RETRY_TASK	sched/sched.h	1700;"	kind:macro
RING_BUFFER_WRITABLE	events/internal.h	11;"	kind:macro
ROOT_TASK_GROUP_LOAD	sched/sched.h	407;"	kind:macro
RQCF_ACT_SKIP	sched/sched.h	1082;"	kind:macro
RQCF_REQ_SKIP	sched/sched.h	1081;"	kind:macro
RQCF_UPDATED	sched/sched.h	1083;"	kind:macro
RT_MUTEX_FULL_CHAINWALK	locking/rtmutex_common.h	/^	RT_MUTEX_FULL_CHAINWALK,$/;"	kind:enumerator	enum:rtmutex_chainwalk
RT_MUTEX_HAS_WAITERS	locking/rtmutex_common.h	106;"	kind:macro
RT_MUTEX_MIN_CHAINWALK	locking/rtmutex_common.h	/^	RT_MUTEX_MIN_CHAINWALK,$/;"	kind:enumerator	enum:rtmutex_chainwalk
RUNTIME_INF	sched/sched.h	149;"	kind:macro
SCHED_FEAT	sched/sched.h	1553;"	kind:macro
SCHED_FEAT	sched/sched.h	1561;"	kind:macro
SCHED_FEAT	sched/sched.h	1571;"	kind:macro
SCHED_FEAT	sched/sched.h	1578;"	kind:macro
SCHED_FEAT	sched/sched.h	1590;"	kind:macro
SCHED_FEAT	sched/sched.h	1595;"	kind:macro
SCHED_FLAG_SUGOV	sched/sched.h	204;"	kind:macro
SCHED_WARN_ON	sched/sched.h	79;"	kind:macro
SCHED_WARN_ON	sched/sched.h	81;"	kind:macro
SEQ_PUT_FIELD	trace/trace_output.h	35;"	kind:macro
SEQ_PUT_HEX_FIELD	trace/trace_output.h	38;"	kind:macro
SF_CRC32_MODE	power/power.h	170;"	kind:macro
SF_NOCOMPRESS_MODE	power/power.h	169;"	kind:macro
SF_PLATFORM_MODE	power/power.h	168;"	kind:macro
SG_OVERLOAD	sched/sched.h	721;"	kind:macro
SG_OVERUTILIZED	sched/sched.h	722;"	kind:macro
SMPBOOT_H	smpboot.h	3;"	kind:macro
SPARE_PAGES	power/power.h	54;"	kind:macro
SRCU_FLAVOR	rcu/rcu.h	/^	SRCU_FLAVOR,$/;"	kind:enumerator	enum:rcutorture_type
SRC_TREE	gcov/gcov.h	/^		SRC_TREE,$/;"	kind:enumerator	enum:gcov_link::__anon1
STACK_FLAGS	trace/trace.h	1219;"	kind:macro
STACK_FLAGS	trace/trace.h	1222;"	kind:macro
STACK_TRACE_HASH_SIZE	locking/lockdep_internals.h	106;"	kind:macro
STACK_TRACE_HASH_SIZE	locking/lockdep_internals.h	95;"	kind:macro
STATE_RCU_HEAD_QUEUED	rcu/rcu.h	168;"	kind:macro
STATE_RCU_HEAD_READY	rcu/rcu.h	167;"	kind:macro
TASK_MOVE_GROUP	sched/sched.h	1767;"	kind:macro
TASK_ON_RQ_MIGRATING	sched/sched.h	89;"	kind:macro
TASK_ON_RQ_QUEUED	sched/sched.h	88;"	kind:macro
TASK_SET_GROUP	sched/sched.h	1766;"	kind:macro
TEST_CORE	power/power.h	/^	TEST_CORE,$/;"	kind:enumerator	enum:__anon2
TEST_CPUS	power/power.h	/^	TEST_CPUS,$/;"	kind:enumerator	enum:__anon2
TEST_DEVICES	power/power.h	/^	TEST_DEVICES,$/;"	kind:enumerator	enum:__anon2
TEST_FIRST	power/power.h	240;"	kind:macro
TEST_FREEZER	power/power.h	/^	TEST_FREEZER,$/;"	kind:enumerator	enum:__anon2
TEST_MAX	power/power.h	241;"	kind:macro
TEST_NONE	power/power.h	/^	TEST_NONE,$/;"	kind:enumerator	enum:__anon2
TEST_PLATFORM	power/power.h	/^	TEST_PLATFORM,$/;"	kind:enumerator	enum:__anon2
TICKDEV_MODE_ONESHOT	time/tick-sched.h	/^	TICKDEV_MODE_ONESHOT,$/;"	kind:enumerator	enum:tick_device_mode
TICKDEV_MODE_PERIODIC	time/tick-sched.h	/^	TICKDEV_MODE_PERIODIC,$/;"	kind:enumerator	enum:tick_device_mode
TICK_DO_TIMER_BOOT	time/tick-internal.h	14;"	kind:macro
TICK_DO_TIMER_NONE	time/tick-internal.h	13;"	kind:macro
TIMER_RETRY	time/posix-timers.h	2;"	kind:macro
TPARG_FL_FENTRY	trace/trace_probe.h	358;"	kind:macro
TPARG_FL_KERNEL	trace/trace_probe.h	357;"	kind:macro
TPARG_FL_MASK	trace/trace_probe.h	359;"	kind:macro
TPARG_FL_RETURN	trace/trace_probe.h	356;"	kind:macro
TPS	rcu/rcu.h	257;"	kind:macro
TP_FLAG_PROFILE	trace/trace_probe.h	57;"	kind:macro
TP_FLAG_TRACE	trace/trace_probe.h	56;"	kind:macro
TRACER_OPT	trace/trace.h	436;"	kind:macro
TRACE_ARRAY_FL_GLOBAL	trace/trace.h	/^	TRACE_ARRAY_FL_GLOBAL	= (1 << 0)$/;"	kind:enumerator	enum:__anon19
TRACE_BLK	trace/trace.h	/^	TRACE_BLK,$/;"	kind:enumerator	enum:trace_type
TRACE_BPRINT	trace/trace.h	/^	TRACE_BPRINT,$/;"	kind:enumerator	enum:trace_type
TRACE_BPUTS	trace/trace.h	/^	TRACE_BPUTS,$/;"	kind:enumerator	enum:trace_type
TRACE_BRANCH	trace/trace.h	/^	TRACE_BRANCH,$/;"	kind:enumerator	enum:trace_type
TRACE_BRANCH_BIT	trace/trace.h	/^	TRACE_BRANCH_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_BUFFER_BIT	trace/trace.h	/^	TRACE_BUFFER_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_BUFFER_IRQ_BIT	trace/trace.h	/^	TRACE_BUFFER_IRQ_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_BUFFER_NMI_BIT	trace/trace.h	/^	TRACE_BUFFER_NMI_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_BUFFER_SIRQ_BIT	trace/trace.h	/^	TRACE_BUFFER_SIRQ_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_BUF_SIZE	trace/trace.h	140;"	kind:macro
TRACE_CGROUP_PATH	cgroup/cgroup-internal.h	28;"	kind:macro
TRACE_CGROUP_PATH_LEN	cgroup/cgroup-internal.h	12;"	kind:macro
TRACE_CONTEXT_BITS	trace/trace.h	611;"	kind:macro
TRACE_CONTEXT_MASK	trace/trace.h	619;"	kind:macro
TRACE_CTX	trace/trace.h	/^	TRACE_CTX,$/;"	kind:enumerator	enum:trace_type
TRACE_FILE_SIZE	trace/trace_entries.h	320;"	kind:macro
TRACE_FLAGS	trace/trace.h	/^	TRACE_FLAGS$/;"	kind:enumerator	enum:trace_iterator_bits
TRACE_FLAGS	trace/trace.h	/^enum trace_iterator_flags { TRACE_FLAGS };$/;"	kind:enumerator	enum:trace_iterator_flags
TRACE_FLAGS	trace/trace.h	1232;"	kind:macro
TRACE_FLAGS_MAX_SIZE	trace/trace.h	184;"	kind:macro
TRACE_FLAG_HARDIRQ	trace/trace.h	/^	TRACE_FLAG_HARDIRQ		= 0x08,$/;"	kind:enumerator	enum:trace_flag_type
TRACE_FLAG_IRQS_NOSUPPORT	trace/trace.h	/^	TRACE_FLAG_IRQS_NOSUPPORT	= 0x02,$/;"	kind:enumerator	enum:trace_flag_type
TRACE_FLAG_IRQS_OFF	trace/trace.h	/^	TRACE_FLAG_IRQS_OFF		= 0x01,$/;"	kind:enumerator	enum:trace_flag_type
TRACE_FLAG_NEED_RESCHED	trace/trace.h	/^	TRACE_FLAG_NEED_RESCHED		= 0x04,$/;"	kind:enumerator	enum:trace_flag_type
TRACE_FLAG_NMI	trace/trace.h	/^	TRACE_FLAG_NMI			= 0x40,$/;"	kind:enumerator	enum:trace_flag_type
TRACE_FLAG_PREEMPT_RESCHED	trace/trace.h	/^	TRACE_FLAG_PREEMPT_RESCHED	= 0x20,$/;"	kind:enumerator	enum:trace_flag_type
TRACE_FLAG_SOFTIRQ	trace/trace.h	/^	TRACE_FLAG_SOFTIRQ		= 0x10,$/;"	kind:enumerator	enum:trace_flag_type
TRACE_FN	trace/trace.h	/^	TRACE_FN,$/;"	kind:enumerator	enum:trace_type
TRACE_FTRACE_BIT	trace/trace.h	/^	TRACE_FTRACE_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_FTRACE_IRQ_BIT	trace/trace.h	/^	TRACE_FTRACE_IRQ_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_FTRACE_MAX	trace/trace.h	614;"	kind:macro
TRACE_FTRACE_NMI_BIT	trace/trace.h	/^	TRACE_FTRACE_NMI_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_FTRACE_SIRQ_BIT	trace/trace.h	/^	TRACE_FTRACE_SIRQ_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_FTRACE_START	trace/trace.h	613;"	kind:macro
TRACE_FUNC_SIZE	trace/trace_entries.h	319;"	kind:macro
TRACE_GRAPH_BIT	trace/trace.h	/^	TRACE_GRAPH_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_GRAPH_DEPTH_END_BIT	trace/trace.h	/^	TRACE_GRAPH_DEPTH_END_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_GRAPH_DEPTH_START_BIT	trace/trace.h	/^	TRACE_GRAPH_DEPTH_START_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_GRAPH_ENT	trace/trace.h	/^	TRACE_GRAPH_ENT,$/;"	kind:enumerator	enum:trace_type
TRACE_GRAPH_GRAPH_TIME	trace/trace.h	908;"	kind:macro
TRACE_GRAPH_NOTRACE_BIT	trace/trace.h	/^	TRACE_GRAPH_NOTRACE_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_GRAPH_PRINT_ABS_TIME	trace/trace.h	903;"	kind:macro
TRACE_GRAPH_PRINT_CPU	trace/trace.h	899;"	kind:macro
TRACE_GRAPH_PRINT_DURATION	trace/trace.h	902;"	kind:macro
TRACE_GRAPH_PRINT_FILL_MASK	trace/trace.h	910;"	kind:macro
TRACE_GRAPH_PRINT_FILL_SHIFT	trace/trace.h	909;"	kind:macro
TRACE_GRAPH_PRINT_IRQS	trace/trace.h	905;"	kind:macro
TRACE_GRAPH_PRINT_OVERHEAD	trace/trace.h	900;"	kind:macro
TRACE_GRAPH_PRINT_OVERRUN	trace/trace.h	898;"	kind:macro
TRACE_GRAPH_PRINT_PROC	trace/trace.h	901;"	kind:macro
TRACE_GRAPH_PRINT_REL_TIME	trace/trace.h	904;"	kind:macro
TRACE_GRAPH_PRINT_TAIL	trace/trace.h	906;"	kind:macro
TRACE_GRAPH_RET	trace/trace.h	/^	TRACE_GRAPH_RET,$/;"	kind:enumerator	enum:trace_type
TRACE_GRAPH_SLEEP_TIME	trace/trace.h	907;"	kind:macro
TRACE_HWLAT	trace/trace.h	/^	TRACE_HWLAT,$/;"	kind:enumerator	enum:trace_type
TRACE_INCLUDE_FILE	trace/trace_benchmark.h	36;"	kind:macro
TRACE_INCLUDE_FILE	trace/trace_benchmark.h	39;"	kind:macro
TRACE_INCLUDE_FILE	trace/trace_events_filter_test.h	46;"	kind:macro
TRACE_INCLUDE_FILE	trace/trace_events_filter_test.h	48;"	kind:macro
TRACE_INCLUDE_PATH	trace/trace_benchmark.h	37;"	kind:macro
TRACE_INCLUDE_PATH	trace/trace_benchmark.h	38;"	kind:macro
TRACE_INCLUDE_PATH	trace/trace_events_filter_test.h	45;"	kind:macro
TRACE_INCLUDE_PATH	trace/trace_events_filter_test.h	47;"	kind:macro
TRACE_INTERNAL_BIT	trace/trace.h	/^	TRACE_INTERNAL_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_INTERNAL_IRQ_BIT	trace/trace.h	/^	TRACE_INTERNAL_IRQ_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_INTERNAL_NMI_BIT	trace/trace.h	/^	TRACE_INTERNAL_NMI_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_INTERNAL_SIRQ_BIT	trace/trace.h	/^	TRACE_INTERNAL_SIRQ_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_IRQ_BIT	trace/trace.h	/^	TRACE_IRQ_BIT,$/;"	kind:enumerator	enum:__anon20
TRACE_ITER_FUNC_FORK	trace/trace.h	1215;"	kind:macro
TRACE_ITER_LAST_BIT	trace/trace.h	/^	TRACE_ITER_LAST_BIT$/;"	kind:enumerator	enum:trace_iterator_bits
TRACE_ITER_SYM_MASK	trace/trace.h	1286;"	kind:macro
TRACE_LIST_MAX	trace/trace.h	617;"	kind:macro
TRACE_LIST_START	trace/trace.h	616;"	kind:macro
TRACE_MMIO_MAP	trace/trace.h	/^	TRACE_MMIO_MAP,$/;"	kind:enumerator	enum:trace_type
TRACE_MMIO_RW	trace/trace.h	/^	TRACE_MMIO_RW,$/;"	kind:enumerator	enum:trace_type
TRACE_PRINT	trace/trace.h	/^	TRACE_PRINT,$/;"	kind:enumerator	enum:trace_type
TRACE_RAW_DATA	trace/trace.h	/^	TRACE_RAW_DATA,$/;"	kind:enumerator	enum:trace_type
TRACE_STACK	trace/trace.h	/^	TRACE_STACK,$/;"	kind:enumerator	enum:trace_type
TRACE_SYSTEM	trace/trace_benchmark.h	2;"	kind:macro
TRACE_SYSTEM	trace/trace_benchmark.h	3;"	kind:macro
TRACE_SYSTEM	trace/trace_events_filter_test.h	2;"	kind:macro
TRACE_SYSTEM	trace/trace_events_filter_test.h	3;"	kind:macro
TRACE_USER_STACK	trace/trace.h	/^	TRACE_USER_STACK,$/;"	kind:enumerator	enum:trace_type
TRACE_WAKE	trace/trace.h	/^	TRACE_WAKE,$/;"	kind:enumerator	enum:trace_type
TRACING_MAP_ARRAY_ELT	trace/tracing_map.h	173;"	kind:macro
TRACING_MAP_BITS_DEFAULT	trace/tracing_map.h	5;"	kind:macro
TRACING_MAP_BITS_MAX	trace/tracing_map.h	6;"	kind:macro
TRACING_MAP_BITS_MIN	trace/tracing_map.h	7;"	kind:macro
TRACING_MAP_ELT	trace/tracing_map.h	180;"	kind:macro
TRACING_MAP_ENTRY	trace/tracing_map.h	177;"	kind:macro
TRACING_MAP_FIELDS_MAX	trace/tracing_map.h	11;"	kind:macro
TRACING_MAP_KEYS_MAX	trace/tracing_map.h	9;"	kind:macro
TRACING_MAP_SORT_KEYS_MAX	trace/tracing_map.h	14;"	kind:macro
TRACING_MAP_VALS_MAX	trace/tracing_map.h	10;"	kind:macro
TRACING_MAP_VARS_MAX	trace/tracing_map.h	13;"	kind:macro
UCLAMP_FLAG_IDLE	sched/sched.h	878;"	kind:macro
UTIL_AVG_UNCHANGED	sched/pelt.h	27;"	kind:macro
WEIGHT_IDLEPRIO	sched/sched.h	1657;"	kind:macro
WF_FORK	sched/sched.h	1645;"	kind:macro
WF_MIGRATED	sched/sched.h	1646;"	kind:macro
WF_SYNC	sched/sched.h	1644;"	kind:macro
WMULT_IDLEPRIO	sched/sched.h	1658;"	kind:macro
_ADDR_FETCH_TYPE	trace/trace_probe.h	177;"	kind:macro
_ASSIGN_FETCH_TYPE	trace/trace_probe.h	188;"	kind:macro
_CONSOLE_CMDLINE_H	printk/console_cmdline.h	3;"	kind:macro
_DEBUG_CORE_H_	debug/debug_core.h	12;"	kind:macro
_DEFAULT_FETCH_TYPE	trace/trace_probe.h	172;"	kind:macro
_IRQF_MODIFY_MASK	irq/settings.h	/^	_IRQF_MODIFY_MASK	= IRQF_MODIFY_MASK,$/;"	kind:enumerator	enum:__anon23
_IRQ_DEFAULT_INIT_FLAGS	irq/settings.h	/^	_IRQ_DEFAULT_INIT_FLAGS	= IRQ_DEFAULT_INIT_FLAGS,$/;"	kind:enumerator	enum:__anon23
_IRQ_DESC_CHECK	irq/internals.h	157;"	kind:macro
_IRQ_DESC_PERCPU	irq/internals.h	158;"	kind:macro
_IRQ_DISABLE_UNLAZY	irq/settings.h	/^	_IRQ_DISABLE_UNLAZY	= IRQ_DISABLE_UNLAZY,$/;"	kind:enumerator	enum:__anon23
_IRQ_IS_POLLED	irq/settings.h	/^	_IRQ_IS_POLLED		= IRQ_IS_POLLED,$/;"	kind:enumerator	enum:__anon23
_IRQ_LEVEL	irq/settings.h	/^	_IRQ_LEVEL		= IRQ_LEVEL,$/;"	kind:enumerator	enum:__anon23
_IRQ_MOVE_PCNTXT	irq/settings.h	/^	_IRQ_MOVE_PCNTXT	= IRQ_MOVE_PCNTXT,$/;"	kind:enumerator	enum:__anon23
_IRQ_NESTED_THREAD	irq/settings.h	/^	_IRQ_NESTED_THREAD	= IRQ_NESTED_THREAD,$/;"	kind:enumerator	enum:__anon23
_IRQ_NOAUTOEN	irq/settings.h	/^	_IRQ_NOAUTOEN		= IRQ_NOAUTOEN,$/;"	kind:enumerator	enum:__anon23
_IRQ_NOPROBE	irq/settings.h	/^	_IRQ_NOPROBE		= IRQ_NOPROBE,$/;"	kind:enumerator	enum:__anon23
_IRQ_NOREQUEST	irq/settings.h	/^	_IRQ_NOREQUEST		= IRQ_NOREQUEST,$/;"	kind:enumerator	enum:__anon23
_IRQ_NOTHREAD	irq/settings.h	/^	_IRQ_NOTHREAD		= IRQ_NOTHREAD,$/;"	kind:enumerator	enum:__anon23
_IRQ_NO_BALANCING	irq/settings.h	/^	_IRQ_NO_BALANCING	= IRQ_NO_BALANCING,$/;"	kind:enumerator	enum:__anon23
_IRQ_PER_CPU	irq/settings.h	/^	_IRQ_PER_CPU		= IRQ_PER_CPU,$/;"	kind:enumerator	enum:__anon23
_IRQ_PER_CPU_DEVID	irq/settings.h	/^	_IRQ_PER_CPU_DEVID	= IRQ_PER_CPU_DEVID,$/;"	kind:enumerator	enum:__anon23
_KDBPRIVATE_H	debug/kdb/kdb_private.h	2;"	kind:macro
_KERNEL_EVENTS_INTERNAL_H	events/internal.h	3;"	kind:macro
_KERNEL_TIME_TIMEKEEPING_H	time/timekeeping.h	3;"	kind:macro
_KERNEL_WORKQUEUE_INTERNAL_H	workqueue_internal.h	9;"	kind:macro
_LINUX_KERNEL_FTRACE_INTERNAL_H	trace/ftrace_internal.h	3;"	kind:macro
_LINUX_KERNEL_TRACE_H	trace/trace.h	4;"	kind:macro
_LINUX_NTP_INTERNAL_H	time/ntp_internal.h	3;"	kind:macro
_LIVEPATCH_CORE_H	livepatch/core.h	3;"	kind:macro
_LIVEPATCH_PATCH_H	livepatch/patch.h	3;"	kind:macro
_LIVEPATCH_TRANSITION_H	livepatch/transition.h	3;"	kind:macro
_PRINTK_BRAILLE_H	printk/braille.h	3;"	kind:macro
_Q_SLOW_VAL	locking/qspinlock_paravirt.h	24;"	kind:macro
_TICK_SCHED_H	time/tick-sched.h	3;"	kind:macro
_TIMEKEEPING_INTERNAL_H	time/timekeeping_internal.h	3;"	kind:macro
_TRACE_BENCHMARK_H	trace/trace_benchmark.h	6;"	kind:macro
_TRACE_DYNEVENT_H	trace/trace_dynevent.h	7;"	kind:macro
_TRACE_TEST_H	trace/trace_events_filter_test.h	6;"	kind:macro
__ADDR_FETCH_TYPE	trace/trace_probe.h	176;"	kind:macro
__ASSIGN_FETCH_TYPE	trace/trace_probe.h	180;"	kind:macro
__BPF_DISASM_H__	bpf/disasm.h	7;"	kind:macro
__BPF_LRU_LIST_H_	bpf/bpf_lru_list.h	5;"	kind:macro
__CGROUP_INTERNAL_H	cgroup/cgroup-internal.h	3;"	kind:macro
__DEFAULT_FETCH_TYPE	trace/trace_probe.h	171;"	kind:macro
__DEFINE_OUTPUT_COPY_BODY	events/internal.h	128;"	kind:macro
__INTERNAL_RWSEM_H	locking/rwsem.h	4;"	kind:macro
__KERNEL_RTMUTEX_COMMON_H	locking/rtmutex_common.h	14;"	kind:macro
__LINUX_MCS_SPINLOCK_H	locking/mcs_spinlock.h	14;"	kind:macro
__LINUX_RCU_H	rcu/rcu.h	11;"	kind:macro
__LOCKF	locking/lockdep_internals.h	/^	__LOCKF(USED)$/;"	kind:enumerator	enum:__anon26
__LOCKF	locking/lockdep_internals.h	32;"	kind:macro
__LOCKING_LOCK_EVENTS_H	locking/lock_events.h	17;"	kind:macro
__MAP_IN_MAP_H__	bpf/map_in_map.h	5;"	kind:macro
__PERCPU_FREELIST_H__	bpf/percpu_freelist.h	5;"	kind:macro
__SCHED_FEAT_NR	sched/sched.h	/^	__SCHED_FEAT_NR,$/;"	kind:enumerator	enum:__anon31
__TEST_AFTER_LAST	power/power.h	/^	__TEST_AFTER_LAST$/;"	kind:enumerator	enum:__anon2
__TRACE_EVENTS_H	trace/trace_output.h	3;"	kind:macro
__TRACE_FIRST_TYPE	trace/trace.h	/^	__TRACE_FIRST_TYPE = 0,$/;"	kind:enumerator	enum:trace_type
__TRACE_LAST_TYPE	trace/trace.h	/^	__TRACE_LAST_TYPE,$/;"	kind:enumerator	enum:trace_type
__TRACE_STAT_H	trace/trace_stat.h	3;"	kind:macro
__TRACING_MAP_H	trace/tracing_map.h	3;"	kind:macro
___P	irq/debug.h	47;"	kind:macro
___P	irq/debug.h	6;"	kind:macro
___PD	irq/debug.h	49;"	kind:macro
___PD	irq/debug.h	9;"	kind:macro
___PS	irq/debug.h	48;"	kind:macro
___PS	irq/debug.h	7;"	kind:macro
____cacheline_aligned	sched/sched.h	/^		raw_spinlock_t	lock ____cacheline_aligned;$/;"	kind:member	struct:cfs_rq::__anon28	access:public
____cacheline_aligned	sched/sched.h	/^	atomic_long_t		load_avg ____cacheline_aligned;$/;"	kind:member	struct:task_group	access:public
____cacheline_aligned	sched/sched.h	/^	struct uclamp_rq	uclamp[UCLAMP_CNT] ____cacheline_aligned;$/;"	kind:member	struct:rq	typeref:struct:rq::uclamp	access:public
____cacheline_aligned	sched/sched.h	/^	u64			clock_task ____cacheline_aligned;$/;"	kind:member	struct:rq	access:public
____cacheline_aligned_in_smp	bpf/bpf_lru_list.h	/^	raw_spinlock_t lock ____cacheline_aligned_in_smp;$/;"	kind:member	struct:bpf_lru_list	access:public
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	raw_spinlock_t fqslock ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_node	access:public
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	raw_spinlock_t nocb_bypass_lock ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_data	access:public
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	raw_spinlock_t nocb_gp_lock ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_data	access:public
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	raw_spinlock_t ofl_lock ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_state	access:public
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	spinlock_t exp_lock ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_node	access:public
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	struct rcu_data *nocb_gp_rdp ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::nocb_gp_rdp	access:public
____cacheline_internodealigned_in_smp	rcu/tree.h	/^	u8	boost ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_state	access:public
____cacheline_internodealigned_in_smp	rcu/tree.h	/^} ____cacheline_internodealigned_in_smp;$/;"	kind:variable	typeref:struct:rcu_node
__aligned	power/power.h	/^} __aligned(PAGE_SIZE);$/;"	kind:prototype	signature:(PAGE_SIZE)
__array	trace/trace.h	58;"	kind:macro
__array	trace/trace.h	59;"	kind:macro
__array_desc	trace/trace.h	61;"	kind:macro
__array_desc	trace/trace.h	62;"	kind:macro
__call_rcu_nocb_wake	rcu/tree.h	/^static void __call_rcu_nocb_wake(struct rcu_data *rdp, bool was_empty,$/;"	kind:prototype	signature:(struct rcu_data *rdp, bool was_empty, unsigned long flags)
__call_rcu_nocb_wake	rcu/tree_plugin.h	/^static void __call_rcu_nocb_wake(struct rcu_data *rdp, bool was_empty,$/;"	kind:function	signature:(struct rcu_data *rdp, bool was_empty, unsigned long flags)
__cgroup_task_count	cgroup/cgroup-internal.h	/^int __cgroup_task_count(const struct cgroup *cgrp);$/;"	kind:prototype	signature:(const struct cgroup *cgrp)
__checkparam_dl	sched/sched.h	/^extern bool __checkparam_dl(const struct sched_attr *attr);$/;"	kind:prototype	signature:(const struct sched_attr *attr)
__clockevents_update_freq	time/tick-internal.h	/^extern int __clockevents_update_freq(struct clock_event_device *dev, u32 freq);$/;"	kind:prototype	signature:(struct clock_event_device *dev, u32 freq)
__debug_atomic_inc	locking/lockdep_internals.h	195;"	kind:macro
__debug_atomic_inc	locking/lockdep_internals.h	239;"	kind:macro
__disable_irq	irq/internals.h	/^extern void __disable_irq(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
__dl_add	sched/sched.h	/^void __dl_add(struct dl_bw *dl_b, u64 tsk_bw, int cpus)$/;"	kind:function	signature:(struct dl_bw *dl_b, u64 tsk_bw, int cpus)
__dl_clear_params	sched/sched.h	/^void __dl_clear_params(struct task_struct *p);$/;"	kind:prototype	signature:(struct task_struct *p)
__dl_overflow	sched/sched.h	/^bool __dl_overflow(struct dl_bw *dl_b, int cpus, u64 old_bw, u64 new_bw)$/;"	kind:function	signature:(struct dl_bw *dl_b, int cpus, u64 old_bw, u64 new_bw)
__dl_sub	sched/sched.h	/^void __dl_sub(struct dl_bw *dl_b, u64 tsk_bw, int cpus)$/;"	kind:function	signature:(struct dl_bw *dl_b, u64 tsk_bw, int cpus)
__dl_update	sched/sched.h	/^static inline void __dl_update(struct dl_bw *dl_b, s64 bw);$/;"	kind:prototype	signature:(struct dl_bw *dl_b, s64 bw)
__dl_update	sched/sched.h	/^void __dl_update(struct dl_bw *dl_b, s64 bw)$/;"	kind:function	signature:(struct dl_bw *dl_b, s64 bw)
__do_adjtimex	time/ntp_internal.h	/^extern int __do_adjtimex(struct __kernel_timex *txc,$/;"	kind:prototype	signature:(struct __kernel_timex *txc, const struct timespec64 *ts, s32 *time_tai, struct audit_ntp_data *ad)
__down_read	locking/rwsem.h	/^extern void __down_read(struct rw_semaphore *sem);$/;"	kind:prototype	signature:(struct rw_semaphore *sem)
__dynamic_array	trace/trace.h	64;"	kind:macro
__dynamic_array	trace/trace.h	65;"	kind:macro
__enable_irq	irq/internals.h	/^extern void __enable_irq(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
__event_trigger_test_discard	trace/trace.h	/^__event_trigger_test_discard(struct trace_event_file *file,$/;"	kind:function	signature:(struct trace_event_file *file, struct ring_buffer *buffer, struct ring_buffer_event *event, void *entry, enum event_trigger_type *tt)
__field	trace/trace.h	49;"	kind:macro
__field	trace/trace.h	50;"	kind:macro
__field_desc	trace/trace.h	55;"	kind:macro
__field_desc	trace/trace.h	56;"	kind:macro
__field_struct	trace/trace.h	52;"	kind:macro
__field_struct	trace/trace.h	53;"	kind:macro
__find_event_file	trace/trace.h	/^extern struct trace_event_file *__find_event_file(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, const char *system, const char *event)
__ftrace_bad_type	trace/trace.h	/^extern void __ftrace_bad_type(void);$/;"	kind:prototype	signature:(void)
__get_data_size	trace/trace_probe_tmpl.h	/^__get_data_size(struct trace_probe *tp, struct pt_regs *regs)$/;"	kind:function	signature:(struct trace_probe *tp, struct pt_regs *regs)
__get_key_name	locking/lockdep_internals.h	/^extern const char *__get_key_name(const struct lockdep_subclass_key *key,$/;"	kind:prototype	signature:(const struct lockdep_subclass_key *key, char *str)
__getparam_dl	sched/sched.h	/^extern void __getparam_dl(struct task_struct *p, struct sched_attr *attr);$/;"	kind:prototype	signature:(struct task_struct *p, struct sched_attr *attr)
__handle_irq_event_percpu	irq/internals.h	/^irqreturn_t __handle_irq_event_percpu(struct irq_desc *desc, unsigned int *flags);$/;"	kind:prototype	signature:(struct irq_desc *desc, unsigned int *flags)
__hardpps	time/ntp_internal.h	/^extern void __hardpps(const struct timespec64 *phase_ts, const struct timespec64 *raw_ts);$/;"	kind:prototype	signature:(const struct timespec64 *phase_ts, const struct timespec64 *raw_ts)
__initdata	trace/trace.h	/^extern bool ftrace_filter_param __initdata;$/;"	kind:externvar
__irq_get_desc_lock	irq/internals.h	/^__irq_get_desc_lock(unsigned int irq, unsigned long *flags, bool bus,$/;"	kind:prototype	signature:(unsigned int irq, unsigned long *flags, bool bus, unsigned int check)
__irq_get_irqchip_state	irq/internals.h	/^extern int __irq_get_irqchip_state(struct irq_data *data,$/;"	kind:prototype	signature:(struct irq_data *data, enum irqchip_irq_state which, bool *state)
__irq_put_desc_unlock	irq/internals.h	/^void __irq_put_desc_unlock(struct irq_desc *desc, unsigned long flags, bool bus);$/;"	kind:prototype	signature:(struct irq_desc *desc, unsigned long flags, bool bus)
__irq_set_trigger	irq/internals.h	/^extern int __irq_set_trigger(struct irq_desc *desc, unsigned long flags);$/;"	kind:prototype	signature:(struct irq_desc *desc, unsigned long flags)
__irq_wake_thread	irq/internals.h	/^void __irq_wake_thread(struct irq_desc *desc, struct irqaction *action);$/;"	kind:prototype	signature:(struct irq_desc *desc, struct irqaction *action)
__irqd_to_state	irq/internals.h	195;"	kind:macro
__irqd_to_state	irq/internals.h	250;"	kind:macro
__kstat_incr_irqs_this_cpu	irq/internals.h	/^static inline void __kstat_incr_irqs_this_cpu(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
__ksymtab	debug/kdb/kdb_private.h	/^typedef struct __ksymtab {$/;"	kind:struct
__ksymtab::mod_end	debug/kdb/kdb_private.h	/^		unsigned long mod_end;$/;"	kind:member	struct:__ksymtab	access:public
__ksymtab::mod_name	debug/kdb/kdb_private.h	/^		const char *mod_name;	\/* Module containing symbol or$/;"	kind:member	struct:__ksymtab	access:public
__ksymtab::mod_start	debug/kdb/kdb_private.h	/^		unsigned long mod_start;$/;"	kind:member	struct:__ksymtab	access:public
__ksymtab::sec_end	debug/kdb/kdb_private.h	/^		unsigned long sec_end;$/;"	kind:member	struct:__ksymtab	access:public
__ksymtab::sec_name	debug/kdb/kdb_private.h	/^		const char *sec_name;	\/* Section containing symbol *\/$/;"	kind:member	struct:__ksymtab	access:public
__ksymtab::sec_start	debug/kdb/kdb_private.h	/^		unsigned long sec_start;$/;"	kind:member	struct:__ksymtab	access:public
__ksymtab::sym_end	debug/kdb/kdb_private.h	/^		unsigned long sym_end;$/;"	kind:member	struct:__ksymtab	access:public
__ksymtab::sym_name	debug/kdb/kdb_private.h	/^		const char *sym_name;	\/* Full symbol name, including$/;"	kind:member	struct:__ksymtab	access:public
__ksymtab::sym_start	debug/kdb/kdb_private.h	/^		unsigned long sym_start;$/;"	kind:member	struct:__ksymtab	access:public
__ksymtab::value	debug/kdb/kdb_private.h	/^		unsigned long value;	\/* Address of symbol *\/$/;"	kind:member	struct:__ksymtab	access:public
__lockevent_add	locking/lock_events.h	/^static inline void __lockevent_add(enum lock_events event, int inc)$/;"	kind:function	signature:(enum lock_events event, int inc)
__lockevent_inc	locking/lock_events.h	/^static inline void __lockevent_inc(enum lock_events event, bool cond)$/;"	kind:function	signature:(enum lock_events event, bool cond)
__maybe_unused	sched/sched-pelt.h	/^static const u32 runnable_avg_yN_inv[] __maybe_unused = {$/;"	kind:variable
__output_custom	events/internal.h	/^__output_custom(struct perf_output_handle *handle, perf_copy_f copy_func,$/;"	kind:function	signature:(struct perf_output_handle *handle, perf_copy_f copy_func, const void *buf, unsigned long len)
__pcpu_freelist_pop	bpf/percpu_freelist.h	/^struct pcpu_freelist_node *__pcpu_freelist_pop(struct pcpu_freelist *);$/;"	kind:prototype	signature:(struct pcpu_freelist *)
__pcpu_freelist_push	bpf/percpu_freelist.h	/^void __pcpu_freelist_push(struct pcpu_freelist *, struct pcpu_freelist_node *);$/;"	kind:prototype	signature:(struct pcpu_freelist *, struct pcpu_freelist_node *)
__pick_first_entity	sched/sched.h	/^extern struct sched_entity *__pick_first_entity(struct cfs_rq *cfs_rq);$/;"	kind:prototype	signature:(struct cfs_rq *cfs_rq)
__pick_last_entity	sched/sched.h	/^extern struct sched_entity *__pick_last_entity(struct cfs_rq *cfs_rq);$/;"	kind:prototype	signature:(struct cfs_rq *cfs_rq)
__pm_notifier_call_chain	power/power.h	/^extern int __pm_notifier_call_chain(unsigned long val, int nr_to_call,$/;"	kind:prototype	signature:(unsigned long val, int nr_to_call, int *nr_calls)
__printk_safe_enter	printk/internal.h	/^void __printk_safe_enter(void);$/;"	kind:prototype	signature:(void)
__printk_safe_exit	printk/internal.h	/^void __printk_safe_exit(void);$/;"	kind:prototype	signature:(void)
__pv_init_lock_hash	locking/qspinlock_paravirt.h	/^void __init __pv_init_lock_hash(void)$/;"	kind:function	signature:(void)
__pv_kick	locking/qspinlock_stat.h	/^static inline void __pv_kick(int cpu)$/;"	kind:function	signature:(int cpu)
__pv_queued_spin_unlock	locking/qspinlock_paravirt.h	/^__visible void __pv_queued_spin_unlock(struct qspinlock *lock)$/;"	kind:function	signature:(struct qspinlock *lock)
__pv_queued_spin_unlock_slowpath	locking/qspinlock_paravirt.h	/^__pv_queued_spin_unlock_slowpath(struct qspinlock *lock, u8 locked)$/;"	kind:function	signature:(struct qspinlock *lock, u8 locked)
__pv_wait	locking/qspinlock_stat.h	/^static inline void __pv_wait(u8 *ptr, u8 val)$/;"	kind:function	signature:(u8 *ptr, u8 val)
__rcu_read_lock	rcu/tree_plugin.h	/^EXPORT_SYMBOL_GPL(__rcu_read_lock);$/;"	kind:variable
__rcu_read_lock	rcu/tree_plugin.h	/^void __rcu_read_lock(void)$/;"	kind:function	signature:(void)
__rcu_read_unlock	rcu/tree_plugin.h	/^EXPORT_SYMBOL_GPL(__rcu_read_unlock);$/;"	kind:variable
__rcu_read_unlock	rcu/tree_plugin.h	/^void __rcu_read_unlock(void)$/;"	kind:function	signature:(void)
__rcu_reclaim	rcu/rcu.h	/^static inline bool __rcu_reclaim(const char *rn, struct rcu_head *head)$/;"	kind:function	signature:(const char *rn, struct rcu_head *head)
__read_mostly	locking/qspinlock_paravirt.h	/^static unsigned int pv_lock_hash_bits __read_mostly;$/;"	kind:variable
__read_mostly	rcu/tree_stall.h	/^int sysctl_panic_on_rcu_stall __read_mostly;$/;"	kind:variable
__read_mostly	time/tick-internal.h	/^extern int tick_do_timer_cpu __read_mostly;$/;"	kind:externvar
__refill_cfs_bandwidth_runtime	sched/sched.h	/^extern void __refill_cfs_bandwidth_runtime(struct cfs_bandwidth *cfs_b);$/;"	kind:prototype	signature:(struct cfs_bandwidth *cfs_b)
__register_ftrace_function	trace/ftrace_internal.h	/^int __register_ftrace_function(struct ftrace_ops *ops);$/;"	kind:prototype	signature:(struct ftrace_ops *ops)
__rq_clock_broken	sched/sched.h	/^static inline u64 __rq_clock_broken(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
__rt_mutex_futex_trylock	locking/rtmutex_common.h	/^extern int __rt_mutex_futex_trylock(struct rt_mutex *l);$/;"	kind:prototype	signature:(struct rt_mutex *l)
__rt_mutex_futex_unlock	locking/rtmutex_common.h	/^extern bool __rt_mutex_futex_unlock(struct rt_mutex *lock,$/;"	kind:prototype	signature:(struct rt_mutex *lock, struct wake_q_head *wqh)
__rt_mutex_start_proxy_lock	locking/rtmutex_common.h	/^extern int __rt_mutex_start_proxy_lock(struct rt_mutex *lock,$/;"	kind:prototype	signature:(struct rt_mutex *lock, struct rt_mutex_waiter *waiter, struct task_struct *task)
__sched_info_switch	sched/stats.h	/^__sched_info_switch(struct rq *rq, struct task_struct *prev, struct task_struct *next)$/;"	kind:function	signature:(struct rq *rq, struct task_struct *prev, struct task_struct *next)
__schedstat_add	sched/stats.h	36;"	kind:macro
__schedstat_add	sched/stats.h	50;"	kind:macro
__schedstat_inc	sched/stats.h	34;"	kind:macro
__schedstat_inc	sched/stats.h	48;"	kind:macro
__schedstat_set	sched/stats.h	38;"	kind:macro
__schedstat_set	sched/stats.h	52;"	kind:macro
__set_task_cpu	sched/sched.h	/^static inline void __set_task_cpu(struct task_struct *p, unsigned int cpu)$/;"	kind:function	signature:(struct task_struct *p, unsigned int cpu)
__setparam_dl	sched/sched.h	/^extern void __setparam_dl(struct task_struct *p, const struct sched_attr *attr);$/;"	kind:prototype	signature:(struct task_struct *p, const struct sched_attr *attr)
__start___trace_bprintk_fmt	trace/trace.h	/^extern const char *__start___trace_bprintk_fmt[];$/;"	kind:externvar
__start___tracepoint_str	trace/trace.h	/^extern const char *__start___tracepoint_str[];$/;"	kind:externvar
__stop___trace_bprintk_fmt	trace/trace.h	/^extern const char *__stop___trace_bprintk_fmt[];$/;"	kind:externvar
__stop___tracepoint_str	trace/trace.h	/^extern const char *__stop___tracepoint_str[];$/;"	kind:externvar
__sys_setfsgid	uid16.h	/^long __sys_setfsgid(gid_t gid);$/;"	kind:prototype	signature:(gid_t gid)
__sys_setfsuid	uid16.h	/^long __sys_setfsuid(uid_t uid);$/;"	kind:prototype	signature:(uid_t uid)
__sys_setgid	uid16.h	/^long __sys_setgid(gid_t gid);$/;"	kind:prototype	signature:(gid_t gid)
__sys_setregid	uid16.h	/^long __sys_setregid(gid_t rgid, gid_t egid);$/;"	kind:prototype	signature:(gid_t rgid, gid_t egid)
__sys_setresgid	uid16.h	/^long __sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid);$/;"	kind:prototype	signature:(gid_t rgid, gid_t egid, gid_t sgid)
__sys_setresuid	uid16.h	/^long __sys_setresuid(uid_t ruid, uid_t euid, uid_t suid);$/;"	kind:prototype	signature:(uid_t ruid, uid_t euid, uid_t suid)
__sys_setreuid	uid16.h	/^long __sys_setreuid(uid_t ruid, uid_t euid);$/;"	kind:prototype	signature:(uid_t ruid, uid_t euid)
__sys_setuid	uid16.h	/^long __sys_setuid(uid_t uid);$/;"	kind:prototype	signature:(uid_t uid)
__tick_broadcast_oneshot_control	time/tick-sched.h	/^__tick_broadcast_oneshot_control(enum tick_broadcast_state state)$/;"	kind:function	signature:(enum tick_broadcast_state state)
__tick_broadcast_oneshot_control	time/tick-sched.h	/^extern int __tick_broadcast_oneshot_control(enum tick_broadcast_state state);$/;"	kind:prototype	signature:(enum tick_broadcast_state state)
__trace_event_discard_commit	trace/trace.h	/^__trace_event_discard_commit(struct ring_buffer *buffer,$/;"	kind:function	signature:(struct ring_buffer *buffer, struct ring_buffer_event *event)
__trace_graph_entry	trace/trace.h	/^extern int __trace_graph_entry(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, struct ftrace_graph_ent *trace, unsigned long flags, int pc)
__trace_graph_return	trace/trace.h	/^extern void __trace_graph_return(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, struct ftrace_graph_ret *trace, unsigned long flags, int pc)
__trace_probe_log_err	trace/trace_probe.h	/^void __trace_probe_log_err(int offset, int err);$/;"	kind:prototype	signature:(int offset, int err)
__trace_stack	trace/trace.h	/^static inline void __trace_stack(struct trace_array *tr, unsigned long flags,$/;"	kind:function	signature:(struct trace_array *tr, unsigned long flags, int skip, int pc)
__trace_stack	trace/trace.h	/^void __trace_stack(struct trace_array *tr, unsigned long flags, int skip,$/;"	kind:prototype	signature:(struct trace_array *tr, unsigned long flags, int skip, int pc)
__tracepoint_string	rcu/tree.h	/^static const char *tp_rcu_varname __used __tracepoint_string = rcu_name;$/;"	kind:variable
__tracer_data	trace/trace.h	841;"	kind:macro
__tracer_data	trace/trace.h	844;"	kind:macro
__unregister_ftrace_function	trace/ftrace_internal.h	/^int __unregister_ftrace_function(struct ftrace_ops *ops);$/;"	kind:prototype	signature:(struct ftrace_ops *ops)
__unregister_trace_event	trace/trace_output.h	/^extern int __unregister_trace_event(struct trace_event *event);$/;"	kind:prototype	signature:(struct trace_event *event)
__up_read	locking/rwsem.h	/^extern void __up_read(struct rw_semaphore *sem);$/;"	kind:prototype	signature:(struct rw_semaphore *sem)
__update_idle_core	sched/sched.h	/^extern void __update_idle_core(struct rq *rq);$/;"	kind:prototype	signature:(struct rq *rq)
__update_load_avg_blocked_se	sched/pelt.h	/^int __update_load_avg_blocked_se(u64 now, struct sched_entity *se);$/;"	kind:prototype	signature:(u64 now, struct sched_entity *se)
__update_load_avg_cfs_rq	sched/pelt.h	/^int __update_load_avg_cfs_rq(u64 now, struct cfs_rq *cfs_rq);$/;"	kind:prototype	signature:(u64 now, struct cfs_rq *cfs_rq)
__update_load_avg_se	sched/pelt.h	/^int __update_load_avg_se(u64 now, struct cfs_rq *cfs_rq, struct sched_entity *se);$/;"	kind:prototype	signature:(u64 now, struct cfs_rq *cfs_rq, struct sched_entity *se)
_braille_console_setup	printk/braille.h	/^_braille_console_setup(char **str, char **brl_options)$/;"	kind:function	signature:(char **str, char **brl_options)
_braille_console_setup	printk/braille.h	/^_braille_console_setup(char **str, char **brl_options);$/;"	kind:prototype	signature:(char **str, char **brl_options)
_braille_register_console	printk/braille.h	/^_braille_register_console(struct console *console, struct console_cmdline *c)$/;"	kind:function	signature:(struct console *console, struct console_cmdline *c)
_braille_register_console	printk/braille.h	/^_braille_register_console(struct console *console, struct console_cmdline *c);$/;"	kind:prototype	signature:(struct console *console, struct console_cmdline *c)
_braille_unregister_console	printk/braille.h	/^_braille_unregister_console(struct console *console)$/;"	kind:function	signature:(struct console *console)
_braille_unregister_console	printk/braille.h	/^_braille_unregister_console(struct console *console);$/;"	kind:prototype	signature:(struct console *console)
_kdb_bp	debug/kdb/kdb_private.h	/^typedef struct _kdb_bp {$/;"	kind:struct
_kdb_bp::bp_addr	debug/kdb/kdb_private.h	/^	unsigned long	bp_addr;	\/* Address breakpoint is present at *\/$/;"	kind:member	struct:_kdb_bp	access:public
_kdb_bp::bp_delay	debug/kdb/kdb_private.h	/^	unsigned int	bp_delay:1;	\/* Do delayed bp handling *\/$/;"	kind:member	struct:_kdb_bp	access:public
_kdb_bp::bp_delayed	debug/kdb/kdb_private.h	/^	unsigned int	bp_delayed:1;	\/* Delayed breakpoint *\/$/;"	kind:member	struct:_kdb_bp	access:public
_kdb_bp::bp_enabled	debug/kdb/kdb_private.h	/^	unsigned int	bp_enabled:1;	\/* Breakpoint is active in register *\/$/;"	kind:member	struct:_kdb_bp	access:public
_kdb_bp::bp_free	debug/kdb/kdb_private.h	/^	unsigned int	bp_free:1;	\/* This entry is available *\/$/;"	kind:member	struct:_kdb_bp	access:public
_kdb_bp::bp_installed	debug/kdb/kdb_private.h	/^	unsigned int	bp_installed:1;	\/* Breakpoint is installed *\/$/;"	kind:member	struct:_kdb_bp	access:public
_kdb_bp::bp_type	debug/kdb/kdb_private.h	/^	unsigned int	bp_type:4;	\/* Uses hardware register *\/$/;"	kind:member	struct:_kdb_bp	access:public
_kdb_bp::bph_length	debug/kdb/kdb_private.h	/^	unsigned int	bph_length;	\/* HW break length *\/$/;"	kind:member	struct:_kdb_bp	access:public
_kdbtab	debug/kdb/kdb_private.h	/^typedef struct _kdbtab {$/;"	kind:struct
_kdbtab::cmd_flags	debug/kdb/kdb_private.h	/^	kdb_cmdflags_t cmd_flags;	\/* Command behaviour flags *\/$/;"	kind:member	struct:_kdbtab	access:public
_kdbtab::cmd_func	debug/kdb/kdb_private.h	/^	kdb_func_t cmd_func;		\/* Function to execute command *\/$/;"	kind:member	struct:_kdbtab	access:public
_kdbtab::cmd_help	debug/kdb/kdb_private.h	/^	char    *cmd_help;		\/* Help message for this command *\/$/;"	kind:member	struct:_kdbtab	access:public
_kdbtab::cmd_minlen	debug/kdb/kdb_private.h	/^	short    cmd_minlen;		\/* Minimum legal # command$/;"	kind:member	struct:_kdbtab	access:public
_kdbtab::cmd_name	debug/kdb/kdb_private.h	/^	char    *cmd_name;		\/* Command name *\/$/;"	kind:member	struct:_kdbtab	access:public
_kdbtab::cmd_usage	debug/kdb/kdb_private.h	/^	char    *cmd_usage;		\/* Usage String for this command *\/$/;"	kind:member	struct:_kdbtab	access:public
abbr	rcu/tree.h	/^	char abbr;				\/* Abbreviated name. *\/$/;"	kind:member	struct:rcu_state	access:public
abs_timeout	audit.h	/^			struct timespec64	abs_timeout;$/;"	kind:member	struct:audit_context::__anon4::__anon9	typeref:struct:audit_context::__anon4::__anon9::timespec64	access:public
activate_task	sched/sched.h	/^extern void activate_task(struct rq *rq, struct task_struct *p, int flags);$/;"	kind:prototype	signature:(struct rq *rq, struct task_struct *p, int flags)
active	sched/sched.h	/^	struct rt_prio_array	active;$/;"	kind:member	struct:rt_rq	typeref:struct:rt_rq::rt_prio_array	access:public
active_balance	sched/sched.h	/^	int			active_balance;$/;"	kind:member	struct:rq	access:public
active_balance_work	sched/sched.h	/^	struct cpu_stop_work	active_balance_work;$/;"	kind:member	struct:rq	typeref:struct:rq::cpu_stop_work	access:public
add_nr_running	sched/sched.h	/^static inline void add_nr_running(struct rq *rq, unsigned count)$/;"	kind:function	signature:(struct rq *rq, unsigned count)
alarm_clock	time/posix-timers.h	/^extern const struct k_clock alarm_clock;$/;"	kind:externvar
all_lazy	rcu/tree.h	/^	bool all_lazy;			\/* All CPU's CBs lazy at idle start? *\/$/;"	kind:member	struct:rcu_data	access:public
all_lock_classes	locking/lockdep_internals.h	/^extern struct list_head all_lock_classes;$/;"	kind:externvar
all_ss	cgroup/cgroup-internal.h	/^	bool		all_ss;			\/* Seen 'all' option *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
alloc_fair_sched_group	sched/sched.h	/^extern int alloc_fair_sched_group(struct task_group *tg, struct task_group *parent);$/;"	kind:prototype	signature:(struct task_group *tg, struct task_group *parent)
alloc_rt_sched_group	sched/sched.h	/^extern int alloc_rt_sched_group(struct task_group *tg, struct task_group *parent);$/;"	kind:prototype	signature:(struct task_group *tg, struct task_group *parent)
alloc_swapdev_block	power/power.h	/^extern sector_t alloc_swapdev_block(int swap);$/;"	kind:prototype	signature:(int swap)
allocate_ftrace_func_mapper	trace/trace.h	/^struct ftrace_func_mapper *allocate_ftrace_func_mapper(void);$/;"	kind:prototype	signature:(void)
allocated_snapshot	trace/trace.h	/^	bool			allocated_snapshot;$/;"	kind:member	struct:trace_array	access:public
allow_instances	trace/trace.h	/^	bool			allow_instances;$/;"	kind:member	struct:tracer	access:public
ambient	audit.h	/^	kernel_cap_t		ambient;$/;"	kind:member	struct:audit_cap_data	access:public
apply_event_filter	trace/trace.h	/^extern int apply_event_filter(struct trace_event_file *file,$/;"	kind:prototype	signature:(struct trace_event_file *file, char *filter_string)
apply_subsystem_event_filter	trace/trace.h	/^extern int apply_subsystem_event_filter(struct trace_subsystem_dir *dir,$/;"	kind:prototype	signature:(struct trace_subsystem_dir *dir, char *filter_string)
arch	audit.h	/^	int		    arch;$/;"	kind:member	struct:audit_context	access:public
arch_hibernation_header_restore	power/power.h	/^extern int arch_hibernation_header_restore(void *addr);$/;"	kind:prototype	signature:(void *addr)
arch_hibernation_header_save	power/power.h	/^extern int arch_hibernation_header_save(void *addr, unsigned int max_size);$/;"	kind:prototype	signature:(void *addr, unsigned int max_size)
arch_mcs_spin_lock_contended	locking/mcs_spinlock.h	32;"	kind:macro
arch_mcs_spin_unlock_contended	locking/mcs_spinlock.h	44;"	kind:macro
arch_perf_have_user_stack_dump	events/internal.h	/^static inline bool arch_perf_have_user_stack_dump(void)$/;"	kind:function	signature:(void)
arch_perf_out_copy_user	events/internal.h	/^arch_perf_out_copy_user(void *dst, const void *src, unsigned long n)$/;"	kind:function	signature:(void *dst, const void *src, unsigned long n)
arch_perf_out_copy_user	events/internal.h	188;"	kind:macro
arch_scale_freq_capacity	sched/sched.h	/^unsigned long arch_scale_freq_capacity(int cpu)$/;"	kind:function	signature:(int cpu)
arch_scale_freq_invariant	sched/sched.h	2355;"	kind:macro
arch_scale_freq_invariant	sched/sched.h	2358;"	kind:macro
argc	audit.h	/^			int			argc;$/;"	kind:member	struct:audit_context::__anon4::__anon13	access:public
argc	trace/trace_probe.h	/^	int		argc;$/;"	kind:member	struct:trace_probe_log	access:public
args	audit.h	/^			long args[6];$/;"	kind:member	struct:audit_context::__anon4::__anon5	access:public
args	trace/trace.h	/^	unsigned long		args[];$/;"	kind:member	struct:syscall_trace_enter	access:public
args	trace/trace_probe.h	/^	struct probe_arg		args[];$/;"	kind:member	struct:trace_probe	typeref:struct:trace_probe::probe_arg	access:public
argv	audit.h	/^	unsigned long	    argv[4];    \/* syscall arguments *\/$/;"	kind:member	struct:audit_context	access:public
argv	trace/trace_probe.h	/^	const char	**argv;$/;"	kind:member	struct:trace_probe_log	access:public
assert_clock_updated	sched/sched.h	/^static inline void assert_clock_updated(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
asym_prefer_cpu	sched/sched.h	/^	int			asym_prefer_cpu;	\/* CPU of highest priority in group *\/$/;"	kind:member	struct:sched_group	access:public
attr	audit.h	/^			struct mq_attr		attr;$/;"	kind:member	struct:audit_context::__anon4::__anon10	typeref:struct:audit_context::__anon4::__anon10::mq_attr	access:public
audit_add_tree_rule	audit.h	/^extern int audit_add_tree_rule(struct audit_krule *rule);$/;"	kind:prototype	signature:(struct audit_krule *rule)
audit_add_tree_rule	audit.h	312;"	kind:macro
audit_add_watch	audit.h	/^extern int audit_add_watch(struct audit_krule *krule, struct list_head **list);$/;"	kind:prototype	signature:(struct audit_krule *krule, struct list_head **list)
audit_add_watch	audit.h	298;"	kind:macro
audit_alloc_mark	audit.h	/^extern struct audit_fsnotify_mark *audit_alloc_mark(struct audit_krule *krule,$/;"	kind:prototype	signature:(struct audit_krule *krule, char *pathname, int len)
audit_alloc_mark	audit.h	303;"	kind:macro
audit_cap_data	audit.h	/^struct audit_cap_data {$/;"	kind:struct
audit_cap_data::__anon3::effective	audit.h	/^		kernel_cap_t	effective;	\/* effective set of process *\/$/;"	kind:member	union:audit_cap_data::__anon3	access:public
audit_cap_data::__anon3::fE	audit.h	/^		unsigned int	fE;		\/* effective bit of file cap *\/$/;"	kind:member	union:audit_cap_data::__anon3	access:public
audit_cap_data::ambient	audit.h	/^	kernel_cap_t		ambient;$/;"	kind:member	struct:audit_cap_data	access:public
audit_cap_data::inheritable	audit.h	/^	kernel_cap_t		inheritable;$/;"	kind:member	struct:audit_cap_data	access:public
audit_cap_data::permitted	audit.h	/^	kernel_cap_t		permitted;$/;"	kind:member	struct:audit_cap_data	access:public
audit_cap_data::rootid	audit.h	/^	kuid_t			rootid;$/;"	kind:member	struct:audit_cap_data	access:public
audit_chunk	audit.h	/^struct audit_chunk;$/;"	kind:externvar
audit_comparator	audit.h	/^extern int audit_comparator(const u32 left, const u32 op, const u32 right);$/;"	kind:prototype	signature:(const u32 left, const u32 op, const u32 right)
audit_compare_dname_path	audit.h	/^extern int audit_compare_dname_path(const struct qstr *dname, const char *path, int plen);$/;"	kind:prototype	signature:(const struct qstr *dname, const char *path, int plen)
audit_context	audit.h	/^struct audit_context {$/;"	kind:struct
audit_context::__anon4::__anon10::attr	audit.h	/^			struct mq_attr		attr;$/;"	kind:member	struct:audit_context::__anon4::__anon10	typeref:struct:audit_context::__anon4::__anon10::mq_attr	access:public
audit_context::__anon4::__anon10::mode	audit.h	/^			umode_t			mode;$/;"	kind:member	struct:audit_context::__anon4::__anon10	access:public
audit_context::__anon4::__anon10::oflag	audit.h	/^			int			oflag;$/;"	kind:member	struct:audit_context::__anon4::__anon10	access:public
audit_context::__anon4::__anon11::cap	audit.h	/^			struct audit_cap_data	cap;$/;"	kind:member	struct:audit_context::__anon4::__anon11	typeref:struct:audit_context::__anon4::__anon11::audit_cap_data	access:public
audit_context::__anon4::__anon11::pid	audit.h	/^			pid_t			pid;$/;"	kind:member	struct:audit_context::__anon4::__anon11	access:public
audit_context::__anon4::__anon12::fd	audit.h	/^			int			fd;$/;"	kind:member	struct:audit_context::__anon4::__anon12	access:public
audit_context::__anon4::__anon12::flags	audit.h	/^			int			flags;$/;"	kind:member	struct:audit_context::__anon4::__anon12	access:public
audit_context::__anon4::__anon13::argc	audit.h	/^			int			argc;$/;"	kind:member	struct:audit_context::__anon4::__anon13	access:public
audit_context::__anon4::__anon14::name	audit.h	/^			char			*name;$/;"	kind:member	struct:audit_context::__anon4::__anon14	access:public
audit_context::__anon4::__anon5::args	audit.h	/^			long args[6];$/;"	kind:member	struct:audit_context::__anon4::__anon5	access:public
audit_context::__anon4::__anon5::nargs	audit.h	/^			int nargs;$/;"	kind:member	struct:audit_context::__anon4::__anon5	access:public
audit_context::__anon4::__anon6::gid	audit.h	/^			kgid_t			gid;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
audit_context::__anon4::__anon6::has_perm	audit.h	/^			int			has_perm;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
audit_context::__anon4::__anon6::mode	audit.h	/^			umode_t			mode;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
audit_context::__anon4::__anon6::osid	audit.h	/^			u32			osid;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
audit_context::__anon4::__anon6::perm_gid	audit.h	/^			gid_t			perm_gid;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
audit_context::__anon4::__anon6::perm_mode	audit.h	/^			umode_t			perm_mode;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
audit_context::__anon4::__anon6::perm_uid	audit.h	/^			uid_t			perm_uid;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
audit_context::__anon4::__anon6::qbytes	audit.h	/^			unsigned long		qbytes;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
audit_context::__anon4::__anon6::uid	audit.h	/^			kuid_t			uid;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
audit_context::__anon4::__anon7::mqdes	audit.h	/^			mqd_t			mqdes;$/;"	kind:member	struct:audit_context::__anon4::__anon7	access:public
audit_context::__anon4::__anon7::mqstat	audit.h	/^			struct mq_attr		mqstat;$/;"	kind:member	struct:audit_context::__anon4::__anon7	typeref:struct:audit_context::__anon4::__anon7::mq_attr	access:public
audit_context::__anon4::__anon8::mqdes	audit.h	/^			mqd_t			mqdes;$/;"	kind:member	struct:audit_context::__anon4::__anon8	access:public
audit_context::__anon4::__anon8::sigev_signo	audit.h	/^			int			sigev_signo;$/;"	kind:member	struct:audit_context::__anon4::__anon8	access:public
audit_context::__anon4::__anon9::abs_timeout	audit.h	/^			struct timespec64	abs_timeout;$/;"	kind:member	struct:audit_context::__anon4::__anon9	typeref:struct:audit_context::__anon4::__anon9::timespec64	access:public
audit_context::__anon4::__anon9::mqdes	audit.h	/^			mqd_t			mqdes;$/;"	kind:member	struct:audit_context::__anon4::__anon9	access:public
audit_context::__anon4::__anon9::msg_len	audit.h	/^			size_t			msg_len;$/;"	kind:member	struct:audit_context::__anon4::__anon9	access:public
audit_context::__anon4::__anon9::msg_prio	audit.h	/^			unsigned int		msg_prio;$/;"	kind:member	struct:audit_context::__anon4::__anon9	access:public
audit_context::__anon4::capset	audit.h	/^		} capset;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon11	access:public
audit_context::__anon4::execve	audit.h	/^		} execve;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon13	access:public
audit_context::__anon4::ipc	audit.h	/^		} ipc;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon6	access:public
audit_context::__anon4::mmap	audit.h	/^		} mmap;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon12	access:public
audit_context::__anon4::module	audit.h	/^		} module;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon14	access:public
audit_context::__anon4::mq_getsetattr	audit.h	/^		} mq_getsetattr;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon7	access:public
audit_context::__anon4::mq_notify	audit.h	/^		} mq_notify;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon8	access:public
audit_context::__anon4::mq_open	audit.h	/^		} mq_open;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon10	access:public
audit_context::__anon4::mq_sendrecv	audit.h	/^		} mq_sendrecv;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon9	access:public
audit_context::__anon4::socketcall	audit.h	/^		} socketcall;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon5	access:public
audit_context::arch	audit.h	/^	int		    arch;$/;"	kind:member	struct:audit_context	access:public
audit_context::argv	audit.h	/^	unsigned long	    argv[4];    \/* syscall arguments *\/$/;"	kind:member	struct:audit_context	access:public
audit_context::aux	audit.h	/^	struct audit_aux_data *aux;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::audit_aux_data	access:public
audit_context::aux_pids	audit.h	/^	struct audit_aux_data *aux_pids;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::audit_aux_data	access:public
audit_context::ctime	audit.h	/^	struct timespec64   ctime;      \/* time of syscall entry *\/$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::timespec64	access:public
audit_context::current_state	audit.h	/^	enum audit_state    state, current_state;$/;"	kind:member	struct:audit_context	typeref:enum:audit_context::	access:public
audit_context::dummy	audit.h	/^	int		    dummy;	\/* must be the first element *\/$/;"	kind:member	struct:audit_context	access:public
audit_context::egid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	kind:member	struct:audit_context	access:public
audit_context::euid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	kind:member	struct:audit_context	access:public
audit_context::fds	audit.h	/^	int fds[2];$/;"	kind:member	struct:audit_context	access:public
audit_context::filterkey	audit.h	/^	char		    *filterkey;	\/* key for rule that triggered record *\/$/;"	kind:member	struct:audit_context	access:public
audit_context::first_trees	audit.h	/^	struct audit_tree_refs *trees, *first_trees;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::	access:public
audit_context::fsgid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	kind:member	struct:audit_context	access:public
audit_context::fsuid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	kind:member	struct:audit_context	access:public
audit_context::gid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	kind:member	struct:audit_context	access:public
audit_context::in_syscall	audit.h	/^	int		    in_syscall;	\/* 1 if task is in a syscall *\/$/;"	kind:member	struct:audit_context	access:public
audit_context::killed_trees	audit.h	/^	struct list_head killed_trees;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::list_head	access:public
audit_context::major	audit.h	/^	int		    major;      \/* syscall number *\/$/;"	kind:member	struct:audit_context	access:public
audit_context::name_count	audit.h	/^	int		    name_count; \/* total records in names_list *\/$/;"	kind:member	struct:audit_context	access:public
audit_context::names_list	audit.h	/^	struct list_head    names_list;	\/* struct audit_names->list anchor *\/$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::list_head	access:public
audit_context::personality	audit.h	/^	unsigned long	    personality;$/;"	kind:member	struct:audit_context	access:public
audit_context::pid	audit.h	/^	pid_t		    pid, ppid;$/;"	kind:member	struct:audit_context	access:public
audit_context::ppid	audit.h	/^	pid_t		    pid, ppid;$/;"	kind:member	struct:audit_context	access:public
audit_context::preallocated_names	audit.h	/^	struct audit_names  preallocated_names[AUDIT_NAMES];$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::audit_names	access:public
audit_context::prio	audit.h	/^	u64		    prio;$/;"	kind:member	struct:audit_context	access:public
audit_context::proctitle	audit.h	/^	struct audit_proctitle proctitle;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::audit_proctitle	access:public
audit_context::pwd	audit.h	/^	struct path	    pwd;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::path	access:public
audit_context::return_code	audit.h	/^	long		    return_code;\/* syscall return code *\/$/;"	kind:member	struct:audit_context	access:public
audit_context::return_valid	audit.h	/^	int		    return_valid; \/* return code is valid *\/$/;"	kind:member	struct:audit_context	access:public
audit_context::serial	audit.h	/^	unsigned int	    serial;     \/* serial number for record *\/$/;"	kind:member	struct:audit_context	access:public
audit_context::sgid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	kind:member	struct:audit_context	access:public
audit_context::sockaddr	audit.h	/^	struct sockaddr_storage *sockaddr;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::sockaddr_storage	access:public
audit_context::sockaddr_len	audit.h	/^	size_t sockaddr_len;$/;"	kind:member	struct:audit_context	access:public
audit_context::state	audit.h	/^	enum audit_state    state, current_state;$/;"	kind:member	struct:audit_context	typeref:enum:audit_context::audit_state	access:public
audit_context::suid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	kind:member	struct:audit_context	access:public
audit_context::target_auid	audit.h	/^	kuid_t		    target_auid;$/;"	kind:member	struct:audit_context	access:public
audit_context::target_comm	audit.h	/^	char		    target_comm[TASK_COMM_LEN];$/;"	kind:member	struct:audit_context	access:public
audit_context::target_pid	audit.h	/^	pid_t		    target_pid;$/;"	kind:member	struct:audit_context	access:public
audit_context::target_sessionid	audit.h	/^	unsigned int	    target_sessionid;$/;"	kind:member	struct:audit_context	access:public
audit_context::target_sid	audit.h	/^	u32		    target_sid;$/;"	kind:member	struct:audit_context	access:public
audit_context::target_uid	audit.h	/^	kuid_t		    target_uid;$/;"	kind:member	struct:audit_context	access:public
audit_context::tree_count	audit.h	/^	int tree_count;$/;"	kind:member	struct:audit_context	access:public
audit_context::trees	audit.h	/^	struct audit_tree_refs *trees, *first_trees;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::audit_tree_refs	access:public
audit_context::type	audit.h	/^	int type;$/;"	kind:member	struct:audit_context	access:public
audit_context::uid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	kind:member	struct:audit_context	access:public
audit_ctl_lock	audit.h	/^extern void audit_ctl_lock(void);$/;"	kind:prototype	signature:(void)
audit_ctl_unlock	audit.h	/^extern void audit_ctl_unlock(void);$/;"	kind:prototype	signature:(void)
audit_del_rule	audit.h	/^extern int audit_del_rule(struct audit_entry *entry);$/;"	kind:prototype	signature:(struct audit_entry *entry)
audit_dupe_exe	audit.h	/^extern int audit_dupe_exe(struct audit_krule *new, struct audit_krule *old);$/;"	kind:prototype	signature:(struct audit_krule *new, struct audit_krule *old)
audit_dupe_exe	audit.h	309;"	kind:macro
audit_dupe_rule	audit.h	/^extern struct audit_entry *audit_dupe_rule(struct audit_krule *old);$/;"	kind:prototype	signature:(struct audit_krule *old)
audit_entry	audit.h	/^struct audit_entry {$/;"	kind:struct
audit_entry::list	audit.h	/^	struct list_head	list;$/;"	kind:member	struct:audit_entry	typeref:struct:audit_entry::list_head	access:public
audit_entry::rcu	audit.h	/^	struct rcu_head		rcu;$/;"	kind:member	struct:audit_entry	typeref:struct:audit_entry::rcu_head	access:public
audit_entry::rule	audit.h	/^	struct audit_krule	rule;$/;"	kind:member	struct:audit_entry	typeref:struct:audit_entry::audit_krule	access:public
audit_ever_enabled	audit.h	/^extern bool audit_ever_enabled;$/;"	kind:externvar
audit_exe_compare	audit.h	/^extern int audit_exe_compare(struct task_struct *tsk,$/;"	kind:prototype	signature:(struct task_struct *tsk, struct audit_fsnotify_mark *mark)
audit_exe_compare	audit.h	308;"	kind:macro
audit_filter	audit.h	/^extern int audit_filter(int msgtype, unsigned int listtype);$/;"	kind:prototype	signature:(int msgtype, unsigned int listtype)
audit_filter_inodes	audit.h	/^extern void audit_filter_inodes(struct task_struct *tsk,$/;"	kind:prototype	signature:(struct task_struct *tsk, struct audit_context *ctx)
audit_filter_inodes	audit.h	325;"	kind:macro
audit_filter_list	audit.h	/^extern struct list_head audit_filter_list[];$/;"	kind:externvar
audit_filter_mutex	audit.h	/^extern struct mutex audit_filter_mutex;$/;"	kind:externvar
audit_free_rule_rcu	audit.h	/^extern void audit_free_rule_rcu(struct rcu_head *head);$/;"	kind:prototype	signature:(struct rcu_head *head)
audit_fsnotify_mark	audit.h	/^struct audit_fsnotify_mark;$/;"	kind:externvar
audit_get_tty	audit.h	/^extern struct tty_struct *audit_get_tty(void);$/;"	kind:prototype	signature:(void)
audit_get_watch	audit.h	/^extern void audit_get_watch(struct audit_watch *watch);$/;"	kind:prototype	signature:(struct audit_watch *watch)
audit_get_watch	audit.h	296;"	kind:macro
audit_gid_comparator	audit.h	/^extern int audit_gid_comparator(kgid_t left, u32 op, kgid_t right);$/;"	kind:prototype	signature:(kgid_t left, u32 op, kgid_t right)
audit_hash_ino	audit.h	/^static inline int audit_hash_ino(u32 ino)$/;"	kind:function	signature:(u32 ino)
audit_inode_hash	audit.h	/^extern struct list_head audit_inode_hash[AUDIT_INODE_BUCKETS];$/;"	kind:externvar
audit_kill_trees	audit.h	/^extern void audit_kill_trees(struct audit_context *context);$/;"	kind:prototype	signature:(struct audit_context *context)
audit_kill_trees	audit.h	318;"	kind:macro
audit_killed_trees	audit.h	/^extern struct list_head *audit_killed_trees(void);$/;"	kind:prototype	signature:(void)
audit_log_d_path_exe	audit.h	/^extern void audit_log_d_path_exe(struct audit_buffer *ab,$/;"	kind:prototype	signature:(struct audit_buffer *ab, struct mm_struct *mm)
audit_log_session_info	audit.h	/^extern void audit_log_session_info(struct audit_buffer *ab);$/;"	kind:prototype	signature:(struct audit_buffer *ab)
audit_make_reply	audit.h	/^extern struct sk_buff *audit_make_reply(int seq, int type, int done, int multi,$/;"	kind:prototype	signature:(int seq, int type, int done, int multi, const void *payload, int size)
audit_make_tree	audit.h	/^extern int audit_make_tree(struct audit_krule *rule, char *pathname, u32 op);$/;"	kind:prototype	signature:(struct audit_krule *rule, char *pathname, u32 op)
audit_make_tree	audit.h	313;"	kind:macro
audit_mark_compare	audit.h	/^extern int audit_mark_compare(struct audit_fsnotify_mark *mark,$/;"	kind:prototype	signature:(struct audit_fsnotify_mark *mark, unsigned long ino, dev_t dev)
audit_mark_compare	audit.h	307;"	kind:macro
audit_mark_path	audit.h	/^extern char *audit_mark_path(struct audit_fsnotify_mark *mark);$/;"	kind:prototype	signature:(struct audit_fsnotify_mark *mark)
audit_mark_path	audit.h	304;"	kind:macro
audit_match_class	audit.h	/^extern int audit_match_class(int class, unsigned syscall);$/;"	kind:prototype	signature:(int class, unsigned syscall)
audit_names	audit.h	/^struct audit_names {$/;"	kind:struct
audit_names::dev	audit.h	/^	dev_t			dev;$/;"	kind:member	struct:audit_names	access:public
audit_names::fcap	audit.h	/^	struct audit_cap_data	fcap;$/;"	kind:member	struct:audit_names	typeref:struct:audit_names::audit_cap_data	access:public
audit_names::fcap_ver	audit.h	/^	unsigned int		fcap_ver;$/;"	kind:member	struct:audit_names	access:public
audit_names::gid	audit.h	/^	kgid_t			gid;$/;"	kind:member	struct:audit_names	access:public
audit_names::hidden	audit.h	/^	bool			hidden;		\/* don't log this record *\/$/;"	kind:member	struct:audit_names	access:public
audit_names::ino	audit.h	/^	unsigned long		ino;$/;"	kind:member	struct:audit_names	access:public
audit_names::list	audit.h	/^	struct list_head	list;		\/* audit_context->names_list *\/$/;"	kind:member	struct:audit_names	typeref:struct:audit_names::list_head	access:public
audit_names::mode	audit.h	/^	umode_t			mode;$/;"	kind:member	struct:audit_names	access:public
audit_names::name	audit.h	/^	struct filename		*name;$/;"	kind:member	struct:audit_names	typeref:struct:audit_names::filename	access:public
audit_names::name_len	audit.h	/^	int			name_len;	\/* number of chars to log *\/$/;"	kind:member	struct:audit_names	access:public
audit_names::osid	audit.h	/^	u32			osid;$/;"	kind:member	struct:audit_names	access:public
audit_names::rdev	audit.h	/^	dev_t			rdev;$/;"	kind:member	struct:audit_names	access:public
audit_names::should_free	audit.h	/^	bool			should_free;$/;"	kind:member	struct:audit_names	access:public
audit_names::type	audit.h	/^	unsigned char		type;		\/* record type *\/$/;"	kind:member	struct:audit_names	access:public
audit_names::uid	audit.h	/^	kuid_t			uid;$/;"	kind:member	struct:audit_names	access:public
audit_netlink_list	audit.h	/^struct audit_netlink_list {$/;"	kind:struct
audit_netlink_list::net	audit.h	/^	struct net *net;$/;"	kind:member	struct:audit_netlink_list	typeref:struct:audit_netlink_list::net	access:public
audit_netlink_list::portid	audit.h	/^	__u32 portid;$/;"	kind:member	struct:audit_netlink_list	access:public
audit_netlink_list::q	audit.h	/^	struct sk_buff_head q;$/;"	kind:member	struct:audit_netlink_list	typeref:struct:audit_netlink_list::sk_buff_head	access:public
audit_panic	audit.h	/^extern void		    audit_panic(const char *message);$/;"	kind:prototype	signature:(const char *message)
audit_proctitle	audit.h	/^struct audit_proctitle {$/;"	kind:struct
audit_proctitle::len	audit.h	/^	int	len;	\/* length of the cmdline field. *\/$/;"	kind:member	struct:audit_proctitle	access:public
audit_proctitle::value	audit.h	/^	char	*value;	\/* the cmdline field *\/$/;"	kind:member	struct:audit_proctitle	access:public
audit_put_chunk	audit.h	/^extern void audit_put_chunk(struct audit_chunk *chunk);$/;"	kind:prototype	signature:(struct audit_chunk *chunk)
audit_put_tree	audit.h	/^extern void audit_put_tree(struct audit_tree *tree);$/;"	kind:prototype	signature:(struct audit_tree *tree)
audit_put_tree	audit.h	315;"	kind:macro
audit_put_tty	audit.h	/^extern void audit_put_tty(struct tty_struct *tty);$/;"	kind:prototype	signature:(struct tty_struct *tty)
audit_put_watch	audit.h	/^extern void audit_put_watch(struct audit_watch *watch);$/;"	kind:prototype	signature:(struct audit_watch *watch)
audit_put_watch	audit.h	295;"	kind:macro
audit_remove_mark	audit.h	/^extern void audit_remove_mark(struct audit_fsnotify_mark *audit_mark);$/;"	kind:prototype	signature:(struct audit_fsnotify_mark *audit_mark)
audit_remove_mark	audit.h	305;"	kind:macro
audit_remove_mark_rule	audit.h	/^extern void audit_remove_mark_rule(struct audit_krule *krule);$/;"	kind:prototype	signature:(struct audit_krule *krule)
audit_remove_mark_rule	audit.h	306;"	kind:macro
audit_remove_tree_rule	audit.h	/^extern int audit_remove_tree_rule(struct audit_krule *rule);$/;"	kind:prototype	signature:(struct audit_krule *rule)
audit_remove_tree_rule	audit.h	311;"	kind:macro
audit_remove_watch_rule	audit.h	/^extern void audit_remove_watch_rule(struct audit_krule *krule);$/;"	kind:prototype	signature:(struct audit_krule *krule)
audit_remove_watch_rule	audit.h	299;"	kind:macro
audit_send_list	audit.h	/^int audit_send_list(void *_dest);$/;"	kind:prototype	signature:(void *_dest)
audit_serial	audit.h	/^extern unsigned int audit_serial(void);$/;"	kind:prototype	signature:(void)
audit_sig_pid	audit.h	/^extern pid_t audit_sig_pid;$/;"	kind:externvar
audit_sig_sid	audit.h	/^extern u32 audit_sig_sid;$/;"	kind:externvar
audit_sig_uid	audit.h	/^extern kuid_t audit_sig_uid;$/;"	kind:externvar
audit_signal_info_syscall	audit.h	/^extern int audit_signal_info_syscall(struct task_struct *t);$/;"	kind:prototype	signature:(struct task_struct *t)
audit_signal_info_syscall	audit.h	/^static inline int audit_signal_info_syscall(struct task_struct *t)$/;"	kind:function	signature:(struct task_struct *t)
audit_state	audit.h	/^enum audit_state {$/;"	kind:enum
audit_tag_tree	audit.h	/^extern int audit_tag_tree(char *old, char *new);$/;"	kind:prototype	signature:(char *old, char *new)
audit_tag_tree	audit.h	316;"	kind:macro
audit_to_watch	audit.h	/^extern int audit_to_watch(struct audit_krule *krule, char *path, int len,$/;"	kind:prototype	signature:(struct audit_krule *krule, char *path, int len, u32 op)
audit_to_watch	audit.h	297;"	kind:macro
audit_tree	audit.h	/^struct audit_tree;$/;"	kind:externvar
audit_tree_lookup	audit.h	/^extern struct audit_chunk *audit_tree_lookup(const struct inode *inode);$/;"	kind:prototype	signature:(const struct inode *inode)
audit_tree_match	audit.h	/^extern bool audit_tree_match(struct audit_chunk *chunk,$/;"	kind:prototype	signature:(struct audit_chunk *chunk, struct audit_tree *tree)
audit_tree_path	audit.h	/^extern const char *audit_tree_path(struct audit_tree *tree);$/;"	kind:prototype	signature:(struct audit_tree *tree)
audit_tree_path	audit.h	317;"	kind:macro
audit_trim_trees	audit.h	/^extern void audit_trim_trees(void);$/;"	kind:prototype	signature:(void)
audit_trim_trees	audit.h	314;"	kind:macro
audit_uid_comparator	audit.h	/^extern int audit_uid_comparator(kuid_t left, u32 op, kuid_t right);$/;"	kind:prototype	signature:(kuid_t left, u32 op, kuid_t right)
audit_unpack_string	audit.h	/^extern char *audit_unpack_string(void **bufp, size_t *remain, size_t len);$/;"	kind:prototype	signature:(void **bufp, size_t *remain, size_t len)
audit_watch	audit.h	/^struct audit_watch;$/;"	kind:externvar
audit_watch_compare	audit.h	/^extern int audit_watch_compare(struct audit_watch *watch, unsigned long ino,$/;"	kind:prototype	signature:(struct audit_watch *watch, unsigned long ino, dev_t dev)
audit_watch_compare	audit.h	301;"	kind:macro
audit_watch_path	audit.h	/^extern char *audit_watch_path(struct audit_watch *watch);$/;"	kind:prototype	signature:(struct audit_watch *watch)
audit_watch_path	audit.h	300;"	kind:macro
auditd_test_task	audit.h	/^extern int auditd_test_task(struct task_struct *task);$/;"	kind:prototype	signature:(struct task_struct *task)
auditsc_get_stamp	audit.h	/^extern int auditsc_get_stamp(struct audit_context *ctx,$/;"	kind:prototype	signature:(struct audit_context *ctx, struct timespec64 *t, unsigned int *serial)
auditsc_get_stamp	audit.h	294;"	kind:macro
autogroup	sched/autogroup.h	/^struct autogroup {$/;"	kind:struct
autogroup	sched/sched.h	/^	struct autogroup	*autogroup;$/;"	kind:member	struct:task_group	typeref:struct:task_group::autogroup	access:public
autogroup::id	sched/autogroup.h	/^	unsigned long		id;$/;"	kind:member	struct:autogroup	access:public
autogroup::kref	sched/autogroup.h	/^	struct kref		kref;$/;"	kind:member	struct:autogroup	typeref:struct:autogroup::kref	access:public
autogroup::lock	sched/autogroup.h	/^	struct rw_semaphore	lock;$/;"	kind:member	struct:autogroup	typeref:struct:autogroup::rw_semaphore	access:public
autogroup::nice	sched/autogroup.h	/^	int			nice;$/;"	kind:member	struct:autogroup	access:public
autogroup::tg	sched/autogroup.h	/^	struct task_group	*tg;$/;"	kind:member	struct:autogroup	typeref:struct:autogroup::task_group	access:public
autogroup_free	sched/autogroup.h	/^extern void autogroup_free(struct task_group *tg);$/;"	kind:prototype	signature:(struct task_group *tg)
autogroup_free	sched/autogroup.h	/^static inline void autogroup_free(struct task_group *tg) { }$/;"	kind:function	signature:(struct task_group *tg)
autogroup_init	sched/autogroup.h	/^extern void autogroup_init(struct task_struct *init_task);$/;"	kind:prototype	signature:(struct task_struct *init_task)
autogroup_init	sched/autogroup.h	/^static inline void autogroup_init(struct task_struct *init_task) {  }$/;"	kind:function	signature:(struct task_struct *init_task)
autogroup_path	sched/autogroup.h	/^extern int autogroup_path(struct task_group *tg, char *buf, int buflen);$/;"	kind:prototype	signature:(struct task_group *tg, char *buf, int buflen)
autogroup_path	sched/autogroup.h	/^static inline int autogroup_path(struct task_group *tg, char *buf, int buflen)$/;"	kind:function	signature:(struct task_group *tg, char *buf, int buflen)
autogroup_task_group	sched/autogroup.h	/^autogroup_task_group(struct task_struct *p, struct task_group *tg)$/;"	kind:function	signature:(struct task_struct *p, struct task_group *tg)
aux	audit.h	/^	struct audit_aux_data *aux;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::audit_aux_data	access:public
aux_head	events/internal.h	/^	long				aux_head;$/;"	kind:member	struct:ring_buffer	access:public
aux_mmap_count	events/internal.h	/^	atomic_t			aux_mmap_count;$/;"	kind:member	struct:ring_buffer	access:public
aux_mmap_locked	events/internal.h	/^	unsigned long			aux_mmap_locked;$/;"	kind:member	struct:ring_buffer	access:public
aux_nest	events/internal.h	/^	unsigned int			aux_nest;$/;"	kind:member	struct:ring_buffer	access:public
aux_nr_pages	events/internal.h	/^	int				aux_nr_pages;$/;"	kind:member	struct:ring_buffer	access:public
aux_overwrite	events/internal.h	/^	int				aux_overwrite;$/;"	kind:member	struct:ring_buffer	access:public
aux_pages	events/internal.h	/^	void				**aux_pages;$/;"	kind:member	struct:ring_buffer	access:public
aux_pgoff	events/internal.h	/^	unsigned long			aux_pgoff;$/;"	kind:member	struct:ring_buffer	access:public
aux_pids	audit.h	/^	struct audit_aux_data *aux_pids;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::audit_aux_data	access:public
aux_priv	events/internal.h	/^	void				*aux_priv;$/;"	kind:member	struct:ring_buffer	access:public
aux_refcount	events/internal.h	/^	refcount_t			aux_refcount;$/;"	kind:member	struct:ring_buffer	access:public
aux_wakeup	events/internal.h	/^	long				aux_wakeup;	\/* last aux_watermark boundary crossed by aux_head *\/$/;"	kind:member	struct:ring_buffer	access:public
aux_watermark	events/internal.h	/^	long				aux_watermark;$/;"	kind:member	struct:ring_buffer	access:public
avg	sched/sched.h	/^	struct sched_avg	avg;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_avg	access:public
avg_dl	sched/sched.h	/^	struct sched_avg	avg_dl;$/;"	kind:member	struct:rq	typeref:struct:rq::sched_avg	access:public
avg_idle	sched/sched.h	/^	u64			avg_idle;$/;"	kind:member	struct:rq	access:public
avg_irq	sched/sched.h	/^	struct sched_avg	avg_irq;$/;"	kind:member	struct:rq	typeref:struct:rq::sched_avg	access:public
avg_rt	sched/sched.h	/^	struct sched_avg	avg_rt;$/;"	kind:member	struct:rq	typeref:struct:rq::sched_avg	access:public
b	rcu/tree.h	/^	} b; \/* Bits. *\/$/;"	kind:member	union:rcu_noqs	typeref:struct:rcu_noqs::__anon32	access:public
balance	sched/sched.h	/^	int (*balance)(struct rq *rq, struct task_struct *prev, struct rq_flags *rf);$/;"	kind:member	struct:sched_class	access:public
balance_callback	sched/sched.h	/^	struct callback_head	*balance_callback;$/;"	kind:member	struct:rq	typeref:struct:rq::callback_head	access:public
barrier_completion	rcu/tree.h	/^	struct completion barrier_completion;	\/* Wake at barrier end. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::completion	access:public
barrier_cpu_count	rcu/tree.h	/^	atomic_t barrier_cpu_count;		\/* # CPUs waiting on. *\/$/;"	kind:member	struct:rcu_state	access:public
barrier_head	rcu/tree.h	/^	struct rcu_head barrier_head;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::rcu_head	access:public
barrier_mutex	rcu/tree.h	/^	struct mutex barrier_mutex;		\/* Guards barrier fields. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::mutex	access:public
barrier_sequence	rcu/tree.h	/^	unsigned long barrier_sequence;		\/* ++ at start and end of *\/$/;"	kind:member	struct:rcu_state	access:public
basesize	trace/trace_probe.h	/^			unsigned char basesize;$/;"	kind:member	struct:fetch_insn::__anon15::__anon17	access:public
beenonline	rcu/tree.h	/^	bool		beenonline;	\/* CPU online at least once. *\/$/;"	kind:member	struct:rcu_data	access:public
bit	trace/trace.h	/^	u32		bit; \/* Mask assigned in val field in tracer_flags *\/$/;"	kind:member	struct:tracer_opt	access:public
blimit	rcu/tree.h	/^	long		blimit;		\/* Upper limit on a processed batch *\/$/;"	kind:member	struct:rcu_data	access:public
blkd_tasks	rcu/tree.h	/^	struct list_head blkd_tasks;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::list_head	access:public
boost_kthread_status	rcu/tree.h	/^	unsigned int boost_kthread_status;$/;"	kind:member	struct:rcu_node	access:public
boost_kthread_task	rcu/tree.h	/^	struct task_struct *boost_kthread_task;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::task_struct	access:public
boost_mtx	rcu/tree.h	/^	struct rt_mutex boost_mtx;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::rt_mutex	access:public
boost_tasks	rcu/tree.h	/^	struct list_head *boost_tasks;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::list_head	access:public
boost_time	rcu/tree.h	/^	unsigned long boost_time;$/;"	kind:member	struct:rcu_node	access:public
bp_addr	debug/kdb/kdb_private.h	/^	unsigned long	bp_addr;	\/* Address breakpoint is present at *\/$/;"	kind:member	struct:_kdb_bp	access:public
bp_delay	debug/kdb/kdb_private.h	/^	unsigned int	bp_delay:1;	\/* Do delayed bp handling *\/$/;"	kind:member	struct:_kdb_bp	access:public
bp_delayed	debug/kdb/kdb_private.h	/^	unsigned int	bp_delayed:1;	\/* Delayed breakpoint *\/$/;"	kind:member	struct:_kdb_bp	access:public
bp_enabled	debug/kdb/kdb_private.h	/^	unsigned int	bp_enabled:1;	\/* Breakpoint is active in register *\/$/;"	kind:member	struct:_kdb_bp	access:public
bp_free	debug/kdb/kdb_private.h	/^	unsigned int	bp_free:1;	\/* This entry is available *\/$/;"	kind:member	struct:_kdb_bp	access:public
bp_installed	debug/kdb/kdb_private.h	/^	unsigned int	bp_installed:1;	\/* Breakpoint is installed *\/$/;"	kind:member	struct:_kdb_bp	access:public
bp_type	debug/kdb/kdb_private.h	/^	unsigned int	bp_type:4;	\/* Uses hardware register *\/$/;"	kind:member	struct:_kdb_bp	access:public
bpf_alu_string	bpf/disasm.h	/^extern const char *const bpf_alu_string[16];$/;"	kind:externvar
bpf_class_string	bpf/disasm.h	/^extern const char *const bpf_class_string[8];$/;"	kind:externvar
bpf_common_lru	bpf/bpf_lru_list.h	/^struct bpf_common_lru {$/;"	kind:struct
bpf_common_lru::local_list	bpf/bpf_lru_list.h	/^	struct bpf_lru_locallist __percpu *local_list;$/;"	kind:member	struct:bpf_common_lru	typeref:struct:bpf_common_lru::__percpu	access:public
bpf_common_lru::lru_list	bpf/bpf_lru_list.h	/^	struct bpf_lru_list lru_list;$/;"	kind:member	struct:bpf_common_lru	typeref:struct:bpf_common_lru::bpf_lru_list	access:public
bpf_insn_cbs	bpf/disasm.h	/^struct bpf_insn_cbs {$/;"	kind:struct
bpf_insn_cbs::cb_call	bpf/disasm.h	/^	bpf_insn_revmap_call_t	cb_call;$/;"	kind:member	struct:bpf_insn_cbs	access:public
bpf_insn_cbs::cb_imm	bpf/disasm.h	/^	bpf_insn_print_imm_t	cb_imm;$/;"	kind:member	struct:bpf_insn_cbs	access:public
bpf_insn_cbs::cb_print	bpf/disasm.h	/^	bpf_insn_print_t	cb_print;$/;"	kind:member	struct:bpf_insn_cbs	access:public
bpf_insn_cbs::private_data	bpf/disasm.h	/^	void			*private_data;$/;"	kind:member	struct:bpf_insn_cbs	access:public
bpf_insn_print_imm_t	bpf/disasm.h	/^typedef const char *(*bpf_insn_print_imm_t)(void *private_data,$/;"	kind:typedef
bpf_insn_print_t	bpf/disasm.h	/^typedef __printf(2, 3) void (*bpf_insn_print_t)(void *private_data,$/;"	kind:variable
bpf_insn_revmap_call_t	bpf/disasm.h	/^typedef const char *(*bpf_insn_revmap_call_t)(void *private_data,$/;"	kind:typedef
bpf_lru	bpf/bpf_lru_list.h	/^struct bpf_lru {$/;"	kind:struct
bpf_lru::__anon33::common_lru	bpf/bpf_lru_list.h	/^		struct bpf_common_lru common_lru;$/;"	kind:member	union:bpf_lru::__anon33	typeref:struct:bpf_lru::__anon33::bpf_common_lru	access:public
bpf_lru::__anon33::percpu_lru	bpf/bpf_lru_list.h	/^		struct bpf_lru_list __percpu *percpu_lru;$/;"	kind:member	union:bpf_lru::__anon33	typeref:struct:bpf_lru::__anon33::__percpu	access:public
bpf_lru::del_arg	bpf/bpf_lru_list.h	/^	void *del_arg;$/;"	kind:member	struct:bpf_lru	access:public
bpf_lru::del_from_htab	bpf/bpf_lru_list.h	/^	del_from_htab_func del_from_htab;$/;"	kind:member	struct:bpf_lru	access:public
bpf_lru::hash_offset	bpf/bpf_lru_list.h	/^	unsigned int hash_offset;$/;"	kind:member	struct:bpf_lru	access:public
bpf_lru::nr_scans	bpf/bpf_lru_list.h	/^	unsigned int nr_scans;$/;"	kind:member	struct:bpf_lru	access:public
bpf_lru::percpu	bpf/bpf_lru_list.h	/^	bool percpu;$/;"	kind:member	struct:bpf_lru	access:public
bpf_lru_destroy	bpf/bpf_lru_list.h	/^void bpf_lru_destroy(struct bpf_lru *lru);$/;"	kind:prototype	signature:(struct bpf_lru *lru)
bpf_lru_init	bpf/bpf_lru_list.h	/^int bpf_lru_init(struct bpf_lru *lru, bool percpu, u32 hash_offset,$/;"	kind:prototype	signature:(struct bpf_lru *lru, bool percpu, u32 hash_offset, del_from_htab_func del_from_htab, void *delete_arg)
bpf_lru_list	bpf/bpf_lru_list.h	/^struct bpf_lru_list {$/;"	kind:struct
bpf_lru_list::____cacheline_aligned_in_smp	bpf/bpf_lru_list.h	/^	raw_spinlock_t lock ____cacheline_aligned_in_smp;$/;"	kind:member	struct:bpf_lru_list	access:public
bpf_lru_list::counts	bpf/bpf_lru_list.h	/^	unsigned int counts[NR_BPF_LRU_LIST_COUNT];$/;"	kind:member	struct:bpf_lru_list	access:public
bpf_lru_list::lists	bpf/bpf_lru_list.h	/^	struct list_head lists[NR_BPF_LRU_LIST_T];$/;"	kind:member	struct:bpf_lru_list	typeref:struct:bpf_lru_list::list_head	access:public
bpf_lru_list::next_inactive_rotation	bpf/bpf_lru_list.h	/^	struct list_head *next_inactive_rotation;$/;"	kind:member	struct:bpf_lru_list	typeref:struct:bpf_lru_list::list_head	access:public
bpf_lru_list_type	bpf/bpf_lru_list.h	/^enum bpf_lru_list_type {$/;"	kind:enum
bpf_lru_locallist	bpf/bpf_lru_list.h	/^struct bpf_lru_locallist {$/;"	kind:struct
bpf_lru_locallist::lists	bpf/bpf_lru_list.h	/^	struct list_head lists[NR_BPF_LRU_LOCAL_LIST_T];$/;"	kind:member	struct:bpf_lru_locallist	typeref:struct:bpf_lru_locallist::list_head	access:public
bpf_lru_locallist::lock	bpf/bpf_lru_list.h	/^	raw_spinlock_t lock;$/;"	kind:member	struct:bpf_lru_locallist	access:public
bpf_lru_locallist::next_steal	bpf/bpf_lru_list.h	/^	u16 next_steal;$/;"	kind:member	struct:bpf_lru_locallist	access:public
bpf_lru_node	bpf/bpf_lru_list.h	/^struct bpf_lru_node {$/;"	kind:struct
bpf_lru_node::cpu	bpf/bpf_lru_list.h	/^	u16 cpu;$/;"	kind:member	struct:bpf_lru_node	access:public
bpf_lru_node::list	bpf/bpf_lru_list.h	/^	struct list_head list;$/;"	kind:member	struct:bpf_lru_node	typeref:struct:bpf_lru_node::list_head	access:public
bpf_lru_node::ref	bpf/bpf_lru_list.h	/^	u8 ref;$/;"	kind:member	struct:bpf_lru_node	access:public
bpf_lru_node::type	bpf/bpf_lru_list.h	/^	u8 type;$/;"	kind:member	struct:bpf_lru_node	access:public
bpf_lru_node_set_ref	bpf/bpf_lru_list.h	/^static inline void bpf_lru_node_set_ref(struct bpf_lru_node *node)$/;"	kind:function	signature:(struct bpf_lru_node *node)
bpf_lru_pop_free	bpf/bpf_lru_list.h	/^struct bpf_lru_node *bpf_lru_pop_free(struct bpf_lru *lru, u32 hash);$/;"	kind:prototype	signature:(struct bpf_lru *lru, u32 hash)
bpf_lru_populate	bpf/bpf_lru_list.h	/^void bpf_lru_populate(struct bpf_lru *lru, void *buf, u32 node_offset,$/;"	kind:prototype	signature:(struct bpf_lru *lru, void *buf, u32 node_offset, u32 elem_size, u32 nr_elems)
bpf_lru_promote	bpf/bpf_lru_list.h	/^void bpf_lru_promote(struct bpf_lru *lru, struct bpf_lru_node *node);$/;"	kind:prototype	signature:(struct bpf_lru *lru, struct bpf_lru_node *node)
bpf_lru_push_free	bpf/bpf_lru_list.h	/^void bpf_lru_push_free(struct bpf_lru *lru, struct bpf_lru_node *node);$/;"	kind:prototype	signature:(struct bpf_lru *lru, struct bpf_lru_node *node)
bpf_map	bpf/map_in_map.h	/^struct bpf_map;$/;"	kind:externvar
bpf_map_fd_get_ptr	bpf/map_in_map.h	/^void *bpf_map_fd_get_ptr(struct bpf_map *map, struct file *map_file,$/;"	kind:prototype	signature:(struct bpf_map *map, struct file *map_file, int ufd)
bpf_map_fd_put_ptr	bpf/map_in_map.h	/^void bpf_map_fd_put_ptr(void *ptr);$/;"	kind:prototype	signature:(void *ptr)
bpf_map_fd_sys_lookup_elem	bpf/map_in_map.h	/^u32 bpf_map_fd_sys_lookup_elem(void *ptr);$/;"	kind:prototype	signature:(void *ptr)
bpf_map_meta_alloc	bpf/map_in_map.h	/^struct bpf_map *bpf_map_meta_alloc(int inner_map_ufd);$/;"	kind:prototype	signature:(int inner_map_ufd)
bpf_map_meta_equal	bpf/map_in_map.h	/^bool bpf_map_meta_equal(const struct bpf_map *meta0,$/;"	kind:prototype	signature:(const struct bpf_map *meta0, const struct bpf_map *meta1)
bpf_map_meta_free	bpf/map_in_map.h	/^void bpf_map_meta_free(struct bpf_map *map_meta);$/;"	kind:prototype	signature:(struct bpf_map *map_meta)
bph_length	debug/kdb/kdb_private.h	/^	unsigned int	bph_length;	\/* HW break length *\/$/;"	kind:member	struct:_kdb_bp	access:public
braille_set_options	printk/braille.h	/^braille_set_options(struct console_cmdline *c, char *brl_options)$/;"	kind:function	signature:(struct console_cmdline *c, char *brl_options)
brl_options	printk/console_cmdline.h	/^	char	*brl_options;			\/* Options for braille driver *\/$/;"	kind:member	struct:console_cmdline	access:public
bucket	sched/sched.h	/^	struct uclamp_bucket bucket[UCLAMP_BUCKETS];$/;"	kind:member	struct:uclamp_rq	typeref:struct:uclamp_rq::uclamp_bucket	access:public
buckets	trace/trace.h	/^	struct hlist_head	*buckets;$/;"	kind:member	struct:ftrace_hash	typeref:struct:ftrace_hash::hlist_head	access:public
buffer	power/power.h	/^	void		*buffer;	\/* address of the block to read from$/;"	kind:member	struct:snapshot_handle	access:public
buffer	trace/trace.h	/^	char		*buffer;$/;"	kind:member	struct:trace_parser	access:public
buffer	trace/trace.h	/^	struct ring_buffer		*buffer;$/;"	kind:member	struct:trace_buffer	typeref:struct:trace_buffer::ring_buffer	access:public
buffer_disabled	trace/trace.h	/^	int			buffer_disabled;$/;"	kind:member	struct:trace_array	access:public
buffer_page	trace/trace.h	/^	void			*buffer_page;	\/* ring buffer spare *\/$/;"	kind:member	struct:trace_array_cpu	access:public
buffer_percent	trace/trace.h	/^	int			buffer_percent;$/;"	kind:member	struct:trace_array	access:public
bw	sched/sched.h	/^	u64			bw;$/;"	kind:member	struct:dl_bw	access:public
bw_ratio	sched/sched.h	/^	u64			bw_ratio;$/;"	kind:member	struct:dl_rq	access:public
calc_global_load_tick	sched/sched.h	/^extern void calc_global_load_tick(struct rq *this_rq);$/;"	kind:prototype	signature:(struct rq *this_rq)
calc_load_active	sched/sched.h	/^	long			calc_load_active;$/;"	kind:member	struct:rq	access:public
calc_load_fold_active	sched/sched.h	/^extern long calc_load_fold_active(struct rq *this_rq, long adjust);$/;"	kind:prototype	signature:(struct rq *this_rq, long adjust)
calc_load_tasks	sched/sched.h	/^extern atomic_long_t calc_load_tasks;$/;"	kind:externvar
calc_load_update	sched/sched.h	/^	unsigned long		calc_load_update;$/;"	kind:member	struct:rq	access:public
calc_load_update	sched/sched.h	/^extern unsigned long calc_load_update;$/;"	kind:externvar
call	trace/trace_probe.h	/^	struct trace_event_call		call;$/;"	kind:member	struct:trace_probe_event	typeref:struct:trace_probe_event::trace_event_call	access:public
call_filter_check_discard	trace/trace.h	/^extern int call_filter_check_discard(struct trace_event_call *call, void *rec,$/;"	kind:prototype	signature:(struct trace_event_call *call, void *rec, struct ring_buffer *buffer, struct ring_buffer_event *event)
call_rcu	rcu/tree.h	/^void call_rcu(struct rcu_head *head, rcu_callback_t func);$/;"	kind:prototype	signature:(struct rcu_head *head, rcu_callback_t func)
cap	audit.h	/^			struct audit_cap_data	cap;$/;"	kind:member	struct:audit_context::__anon4::__anon11	typeref:struct:audit_context::__anon4::__anon11::audit_cap_data	access:public
cap_scale	sched/sched.h	190;"	kind:macro
capacity	sched/sched.h	/^	unsigned long		capacity;$/;"	kind:member	struct:sched_group_capacity	access:public
capacity_orig_of	sched/sched.h	/^static inline unsigned long capacity_orig_of(int cpu)$/;"	kind:function	signature:(int cpu)
capset	audit.h	/^		} capset;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon11	access:public
cb_call	bpf/disasm.h	/^	bpf_insn_revmap_call_t	cb_call;$/;"	kind:member	struct:bpf_insn_cbs	access:public
cb_imm	bpf/disasm.h	/^	bpf_insn_print_imm_t	cb_imm;$/;"	kind:member	struct:bpf_insn_cbs	access:public
cb_print	bpf/disasm.h	/^	bpf_insn_print_t	cb_print;$/;"	kind:member	struct:bpf_insn_cbs	access:public
cblist	rcu/tree.h	/^	struct rcu_segcblist cblist;	\/* Segmented callback list, with *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::rcu_segcblist	access:public
cfs	sched/sched.h	/^	struct cfs_rq		cfs;$/;"	kind:member	struct:rq	typeref:struct:rq::cfs_rq	access:public
cfs_bandwidth	sched/sched.h	/^	struct cfs_bandwidth	cfs_bandwidth;$/;"	kind:member	struct:task_group	typeref:struct:task_group::cfs_bandwidth	access:public
cfs_bandwidth	sched/sched.h	/^struct cfs_bandwidth { };$/;"	kind:struct
cfs_bandwidth	sched/sched.h	/^struct cfs_bandwidth {$/;"	kind:struct
cfs_bandwidth::distribute_running	sched/sched.h	/^	u8			distribute_running;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::hierarchical_quota	sched/sched.h	/^	s64			hierarchical_quota;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::idle	sched/sched.h	/^	u8			idle;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::lock	sched/sched.h	/^	raw_spinlock_t		lock;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::nr_periods	sched/sched.h	/^	int			nr_periods;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::nr_throttled	sched/sched.h	/^	int			nr_throttled;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::period	sched/sched.h	/^	ktime_t			period;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::period_active	sched/sched.h	/^	u8			period_active;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::period_timer	sched/sched.h	/^	struct hrtimer		period_timer;$/;"	kind:member	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::hrtimer	access:public
cfs_bandwidth::quota	sched/sched.h	/^	u64			quota;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::runtime	sched/sched.h	/^	u64			runtime;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::slack_started	sched/sched.h	/^	u8			slack_started;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth::slack_timer	sched/sched.h	/^	struct hrtimer		slack_timer;$/;"	kind:member	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::hrtimer	access:public
cfs_bandwidth::throttled_cfs_rq	sched/sched.h	/^	struct list_head	throttled_cfs_rq;$/;"	kind:member	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::list_head	access:public
cfs_bandwidth::throttled_time	sched/sched.h	/^	u64			throttled_time;$/;"	kind:member	struct:cfs_bandwidth	access:public
cfs_bandwidth_usage_dec	sched/sched.h	/^extern void cfs_bandwidth_usage_dec(void);$/;"	kind:prototype	signature:(void)
cfs_bandwidth_usage_inc	sched/sched.h	/^extern void cfs_bandwidth_usage_inc(void);$/;"	kind:prototype	signature:(void)
cfs_rq	sched/sched.h	/^	struct cfs_rq		**cfs_rq;$/;"	kind:member	struct:task_group	typeref:struct:task_group::cfs_rq	access:public
cfs_rq	sched/sched.h	/^struct cfs_rq {$/;"	kind:struct
cfs_rq	sched/sched.h	/^struct cfs_rq;$/;"	kind:externvar
cfs_rq::__anon28::____cacheline_aligned	sched/sched.h	/^		raw_spinlock_t	lock ____cacheline_aligned;$/;"	kind:member	struct:cfs_rq::__anon28	access:public
cfs_rq::__anon28::load_avg	sched/sched.h	/^		unsigned long	load_avg;$/;"	kind:member	struct:cfs_rq::__anon28	access:public
cfs_rq::__anon28::nr	sched/sched.h	/^		int		nr;$/;"	kind:member	struct:cfs_rq::__anon28	access:public
cfs_rq::__anon28::runnable_sum	sched/sched.h	/^		unsigned long	runnable_sum;$/;"	kind:member	struct:cfs_rq::__anon28	access:public
cfs_rq::__anon28::util_avg	sched/sched.h	/^		unsigned long	util_avg;$/;"	kind:member	struct:cfs_rq::__anon28	access:public
cfs_rq::avg	sched/sched.h	/^	struct sched_avg	avg;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_avg	access:public
cfs_rq::curr	sched/sched.h	/^	struct sched_entity	*curr;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity	access:public
cfs_rq::exec_clock	sched/sched.h	/^	u64			exec_clock;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::h_load	sched/sched.h	/^	unsigned long		h_load;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::h_load_next	sched/sched.h	/^	struct sched_entity	*h_load_next;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity	access:public
cfs_rq::h_nr_running	sched/sched.h	/^	unsigned int		h_nr_running;      \/* SCHED_{NORMAL,BATCH,IDLE} *\/$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::idle_h_nr_running	sched/sched.h	/^	unsigned int		idle_h_nr_running; \/* SCHED_IDLE *\/$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::last	sched/sched.h	/^	struct sched_entity	*last;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity	access:public
cfs_rq::last_h_load_update	sched/sched.h	/^	u64			last_h_load_update;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::leaf_cfs_rq_list	sched/sched.h	/^	struct list_head	leaf_cfs_rq_list;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::list_head	access:public
cfs_rq::load	sched/sched.h	/^	struct load_weight	load;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::load_weight	access:public
cfs_rq::load_last_update_time_copy	sched/sched.h	/^	u64			load_last_update_time_copy;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::min_vruntime	sched/sched.h	/^	u64			min_vruntime;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::min_vruntime_copy	sched/sched.h	/^	u64			min_vruntime_copy;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::next	sched/sched.h	/^	struct sched_entity	*next;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity	access:public
cfs_rq::nr_running	sched/sched.h	/^	unsigned int		nr_running;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::nr_spread_over	sched/sched.h	/^	unsigned int		nr_spread_over;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::on_list	sched/sched.h	/^	int			on_list;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::prop_runnable_sum	sched/sched.h	/^	long			prop_runnable_sum;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::propagate	sched/sched.h	/^	long			propagate;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::removed	sched/sched.h	/^	} removed;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::__anon28	access:public
cfs_rq::rq	sched/sched.h	/^	struct rq		*rq;	\/* CPU runqueue to which this cfs_rq is attached *\/$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::rq	access:public
cfs_rq::runnable_weight	sched/sched.h	/^	unsigned long		runnable_weight;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::runtime_enabled	sched/sched.h	/^	int			runtime_enabled;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::runtime_remaining	sched/sched.h	/^	s64			runtime_remaining;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::skip	sched/sched.h	/^	struct sched_entity	*skip;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity	access:public
cfs_rq::tasks_timeline	sched/sched.h	/^	struct rb_root_cached	tasks_timeline;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::rb_root_cached	access:public
cfs_rq::tg	sched/sched.h	/^	struct task_group	*tg;	\/* group that "owns" this runqueue *\/$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::task_group	access:public
cfs_rq::tg_load_avg_contrib	sched/sched.h	/^	unsigned long		tg_load_avg_contrib;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::throttle_count	sched/sched.h	/^	int			throttle_count;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::throttled	sched/sched.h	/^	int			throttled;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::throttled_clock	sched/sched.h	/^	u64			throttled_clock;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::throttled_clock_task	sched/sched.h	/^	u64			throttled_clock_task;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::throttled_clock_task_time	sched/sched.h	/^	u64			throttled_clock_task_time;$/;"	kind:member	struct:cfs_rq	access:public
cfs_rq::throttled_list	sched/sched.h	/^	struct list_head	throttled_list;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::list_head	access:public
cfs_rq_clock_pelt	sched/pelt.h	/^static inline u64 cfs_rq_clock_pelt(struct cfs_rq *cfs_rq)$/;"	kind:function	signature:(struct cfs_rq *cfs_rq)
cfs_se_util_change	sched/pelt.h	/^static inline void cfs_se_util_change(struct sched_avg *avg)$/;"	kind:function	signature:(struct sched_avg *avg)
cfs_tasks	sched/sched.h	/^	struct list_head cfs_tasks;$/;"	kind:member	struct:rq	typeref:struct:rq::list_head	access:public
cgroup1_base_files	cgroup/cgroup-internal.h	/^extern struct cftype cgroup1_base_files[];$/;"	kind:externvar
cgroup1_check_for_release	cgroup/cgroup-internal.h	/^void cgroup1_check_for_release(struct cgroup *cgrp);$/;"	kind:prototype	signature:(struct cgroup *cgrp)
cgroup1_fs_parameters	cgroup/cgroup-internal.h	/^extern const struct fs_parameter_description cgroup1_fs_parameters;$/;"	kind:externvar
cgroup1_get_tree	cgroup/cgroup-internal.h	/^int cgroup1_get_tree(struct fs_context *fc);$/;"	kind:prototype	signature:(struct fs_context *fc)
cgroup1_kf_syscall_ops	cgroup/cgroup-internal.h	/^extern struct kernfs_syscall_ops cgroup1_kf_syscall_ops;$/;"	kind:externvar
cgroup1_parse_param	cgroup/cgroup-internal.h	/^int cgroup1_parse_param(struct fs_context *fc, struct fs_parameter *param);$/;"	kind:prototype	signature:(struct fs_context *fc, struct fs_parameter *param)
cgroup1_pidlist_destroy_all	cgroup/cgroup-internal.h	/^void cgroup1_pidlist_destroy_all(struct cgroup *cgrp);$/;"	kind:prototype	signature:(struct cgroup *cgrp)
cgroup1_reconfigure	cgroup/cgroup-internal.h	/^int cgroup1_reconfigure(struct fs_context *ctx);$/;"	kind:prototype	signature:(struct fs_context *ctx)
cgroup1_release_agent	cgroup/cgroup-internal.h	/^void cgroup1_release_agent(struct work_struct *work);$/;"	kind:prototype	signature:(struct work_struct *work)
cgroup1_ssid_disabled	cgroup/cgroup-internal.h	/^bool cgroup1_ssid_disabled(int ssid);$/;"	kind:prototype	signature:(int ssid)
cgroup_attach_task	cgroup/cgroup-internal.h	/^int cgroup_attach_task(struct cgroup *dst_cgrp, struct task_struct *leader,$/;"	kind:prototype	signature:(struct cgroup *dst_cgrp, struct task_struct *leader, bool threadgroup)
cgroup_base_stat_cputime_show	cgroup/cgroup-internal.h	/^void cgroup_base_stat_cputime_show(struct seq_file *seq);$/;"	kind:prototype	signature:(struct seq_file *seq)
cgroup_debug	cgroup/cgroup-internal.h	/^extern bool cgroup_debug;$/;"	kind:externvar
cgroup_do_get_tree	cgroup/cgroup-internal.h	/^int cgroup_do_get_tree(struct fs_context *fc);$/;"	kind:prototype	signature:(struct fs_context *fc)
cgroup_fc2context	cgroup/cgroup-internal.h	/^static inline struct cgroup_fs_context *cgroup_fc2context(struct fs_context *fc)$/;"	kind:function	signature:(struct fs_context *fc)
cgroup_free_root	cgroup/cgroup-internal.h	/^void cgroup_free_root(struct cgroup_root *root);$/;"	kind:prototype	signature:(struct cgroup_root *root)
cgroup_fs_context	cgroup/cgroup-internal.h	/^struct cgroup_fs_context {$/;"	kind:struct
cgroup_fs_context::all_ss	cgroup/cgroup-internal.h	/^	bool		all_ss;			\/* Seen 'all' option *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
cgroup_fs_context::cpuset_clone_children	cgroup/cgroup-internal.h	/^	bool		cpuset_clone_children;$/;"	kind:member	struct:cgroup_fs_context	access:public
cgroup_fs_context::flags	cgroup/cgroup-internal.h	/^	unsigned int	flags;			\/* CGRP_ROOT_* flags *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
cgroup_fs_context::kfc	cgroup/cgroup-internal.h	/^	struct kernfs_fs_context kfc;$/;"	kind:member	struct:cgroup_fs_context	typeref:struct:cgroup_fs_context::kernfs_fs_context	access:public
cgroup_fs_context::name	cgroup/cgroup-internal.h	/^	char		*name;			\/* Hierarchy name *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
cgroup_fs_context::none	cgroup/cgroup-internal.h	/^	bool		none;			\/* User explicitly requested empty subsystem *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
cgroup_fs_context::ns	cgroup/cgroup-internal.h	/^	struct cgroup_namespace	*ns;$/;"	kind:member	struct:cgroup_fs_context	typeref:struct:cgroup_fs_context::cgroup_namespace	access:public
cgroup_fs_context::release_agent	cgroup/cgroup-internal.h	/^	char		*release_agent;		\/* Path for release notifications *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
cgroup_fs_context::root	cgroup/cgroup-internal.h	/^	struct cgroup_root	*root;$/;"	kind:member	struct:cgroup_fs_context	typeref:struct:cgroup_fs_context::cgroup_root	access:public
cgroup_fs_context::subsys_mask	cgroup/cgroup-internal.h	/^	u16		subsys_mask;		\/* Selected subsystems *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
cgroup_fs_type	cgroup/cgroup-internal.h	/^extern struct file_system_type cgroup_fs_type;$/;"	kind:externvar
cgroup_is_dead	cgroup/cgroup-internal.h	/^static inline bool cgroup_is_dead(const struct cgroup *cgrp)$/;"	kind:function	signature:(const struct cgroup *cgrp)
cgroup_is_thread_root	cgroup/cgroup-internal.h	/^bool cgroup_is_thread_root(struct cgroup *cgrp);$/;"	kind:prototype	signature:(struct cgroup *cgrp)
cgroup_is_threaded	cgroup/cgroup-internal.h	/^bool cgroup_is_threaded(struct cgroup *cgrp);$/;"	kind:prototype	signature:(struct cgroup *cgrp)
cgroup_kn_lock_live	cgroup/cgroup-internal.h	/^struct cgroup *cgroup_kn_lock_live(struct kernfs_node *kn, bool drain_offline);$/;"	kind:prototype	signature:(struct kernfs_node *kn, bool drain_offline)
cgroup_kn_unlock	cgroup/cgroup-internal.h	/^void cgroup_kn_unlock(struct kernfs_node *kn);$/;"	kind:prototype	signature:(struct kernfs_node *kn)
cgroup_lock_and_drain_offline	cgroup/cgroup-internal.h	/^void cgroup_lock_and_drain_offline(struct cgroup *cgrp);$/;"	kind:prototype	signature:(struct cgroup *cgrp)
cgroup_mgctx	cgroup/cgroup-internal.h	/^struct cgroup_mgctx {$/;"	kind:struct
cgroup_mgctx::preloaded_dst_csets	cgroup/cgroup-internal.h	/^	struct list_head	preloaded_dst_csets;$/;"	kind:member	struct:cgroup_mgctx	typeref:struct:cgroup_mgctx::list_head	access:public
cgroup_mgctx::preloaded_src_csets	cgroup/cgroup-internal.h	/^	struct list_head	preloaded_src_csets;$/;"	kind:member	struct:cgroup_mgctx	typeref:struct:cgroup_mgctx::list_head	access:public
cgroup_mgctx::ss_mask	cgroup/cgroup-internal.h	/^	u16			ss_mask;$/;"	kind:member	struct:cgroup_mgctx	access:public
cgroup_mgctx::tset	cgroup/cgroup-internal.h	/^	struct cgroup_taskset	tset;$/;"	kind:member	struct:cgroup_mgctx	typeref:struct:cgroup_mgctx::cgroup_taskset	access:public
cgroup_migrate	cgroup/cgroup-internal.h	/^int cgroup_migrate(struct task_struct *leader, bool threadgroup,$/;"	kind:prototype	signature:(struct task_struct *leader, bool threadgroup, struct cgroup_mgctx *mgctx)
cgroup_migrate_add_src	cgroup/cgroup-internal.h	/^void cgroup_migrate_add_src(struct css_set *src_cset, struct cgroup *dst_cgrp,$/;"	kind:prototype	signature:(struct css_set *src_cset, struct cgroup *dst_cgrp, struct cgroup_mgctx *mgctx)
cgroup_migrate_finish	cgroup/cgroup-internal.h	/^void cgroup_migrate_finish(struct cgroup_mgctx *mgctx);$/;"	kind:prototype	signature:(struct cgroup_mgctx *mgctx)
cgroup_migrate_prepare_dst	cgroup/cgroup-internal.h	/^int cgroup_migrate_prepare_dst(struct cgroup_mgctx *mgctx);$/;"	kind:prototype	signature:(struct cgroup_mgctx *mgctx)
cgroup_migrate_vet_dst	cgroup/cgroup-internal.h	/^int cgroup_migrate_vet_dst(struct cgroup *dst_cgrp);$/;"	kind:prototype	signature:(struct cgroup *dst_cgrp)
cgroup_mkdir	cgroup/cgroup-internal.h	/^int cgroup_mkdir(struct kernfs_node *parent_kn, const char *name, umode_t mode);$/;"	kind:prototype	signature:(struct kernfs_node *parent_kn, const char *name, umode_t mode)
cgroup_mutex	cgroup/cgroup-internal.h	/^extern struct mutex cgroup_mutex;$/;"	kind:externvar
cgroup_on_dfl	cgroup/cgroup-internal.h	/^bool cgroup_on_dfl(const struct cgroup *cgrp);$/;"	kind:prototype	signature:(const struct cgroup *cgrp)
cgroup_path_ns_locked	cgroup/cgroup-internal.h	/^int cgroup_path_ns_locked(struct cgroup *cgrp, char *buf, size_t buflen,$/;"	kind:prototype	signature:(struct cgroup *cgrp, char *buf, size_t buflen, struct cgroup_namespace *ns)
cgroup_rmdir	cgroup/cgroup-internal.h	/^int cgroup_rmdir(struct kernfs_node *kn);$/;"	kind:prototype	signature:(struct kernfs_node *kn)
cgroup_root_from_kf	cgroup/cgroup-internal.h	/^struct cgroup_root *cgroup_root_from_kf(struct kernfs_root *kf_root);$/;"	kind:prototype	signature:(struct kernfs_root *kf_root)
cgroup_roots	cgroup/cgroup-internal.h	/^extern struct list_head cgroup_roots;$/;"	kind:externvar
cgroup_rstat_boot	cgroup/cgroup-internal.h	/^void cgroup_rstat_boot(void);$/;"	kind:prototype	signature:(void)
cgroup_rstat_exit	cgroup/cgroup-internal.h	/^void cgroup_rstat_exit(struct cgroup *cgrp);$/;"	kind:prototype	signature:(struct cgroup *cgrp)
cgroup_rstat_init	cgroup/cgroup-internal.h	/^int cgroup_rstat_init(struct cgroup *cgrp);$/;"	kind:prototype	signature:(struct cgroup *cgrp)
cgroup_setup_root	cgroup/cgroup-internal.h	/^int cgroup_setup_root(struct cgroup_root *root, u16 ss_mask);$/;"	kind:prototype	signature:(struct cgroup_root *root, u16 ss_mask)
cgroup_show_path	cgroup/cgroup-internal.h	/^int cgroup_show_path(struct seq_file *sf, struct kernfs_node *kf_node,$/;"	kind:prototype	signature:(struct seq_file *sf, struct kernfs_node *kf_node, struct kernfs_root *kf_root)
cgroup_ssid_enabled	cgroup/cgroup-internal.h	/^bool cgroup_ssid_enabled(int ssid);$/;"	kind:prototype	signature:(int ssid)
cgroup_subsys	cgroup/cgroup-internal.h	/^extern struct cgroup_subsys *cgroup_subsys[];$/;"	kind:externvar
cgroup_task_count	cgroup/cgroup-internal.h	/^int cgroup_task_count(const struct cgroup *cgrp);$/;"	kind:prototype	signature:(const struct cgroup *cgrp)
cgroup_taskset	cgroup/cgroup-internal.h	/^struct cgroup_taskset {$/;"	kind:struct
cgroup_taskset::csets	cgroup/cgroup-internal.h	/^	struct list_head	*csets;$/;"	kind:member	struct:cgroup_taskset	typeref:struct:cgroup_taskset::list_head	access:public
cgroup_taskset::cur_cset	cgroup/cgroup-internal.h	/^	struct css_set		*cur_cset;$/;"	kind:member	struct:cgroup_taskset	typeref:struct:cgroup_taskset::css_set	access:public
cgroup_taskset::cur_task	cgroup/cgroup-internal.h	/^	struct task_struct	*cur_task;$/;"	kind:member	struct:cgroup_taskset	typeref:struct:cgroup_taskset::task_struct	access:public
cgroup_taskset::dst_csets	cgroup/cgroup-internal.h	/^	struct list_head	dst_csets;$/;"	kind:member	struct:cgroup_taskset	typeref:struct:cgroup_taskset::list_head	access:public
cgroup_taskset::nr_tasks	cgroup/cgroup-internal.h	/^	int			nr_tasks;$/;"	kind:member	struct:cgroup_taskset	access:public
cgroup_taskset::src_csets	cgroup/cgroup-internal.h	/^	struct list_head	src_csets;$/;"	kind:member	struct:cgroup_taskset	typeref:struct:cgroup_taskset::list_head	access:public
cgroup_taskset::ssid	cgroup/cgroup-internal.h	/^	int			ssid;$/;"	kind:member	struct:cgroup_taskset	access:public
cgroup_threadgroup_rwsem	cgroup/cgroup-internal.h	/^	__acquires(&cgroup_threadgroup_rwsem);$/;"	kind:variable
cgroup_threadgroup_rwsem	cgroup/cgroup-internal.h	/^	__releases(&cgroup_threadgroup_rwsem);$/;"	kind:variable
cgroupns_operations	cgroup/cgroup-internal.h	/^extern const struct proc_ns_operations cgroupns_operations;$/;"	kind:externvar
cgrp	cgroup/cgroup-internal.h	/^	struct cgroup		*cgrp;$/;"	kind:member	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::cgroup	access:public
cgrp_cset_link	cgroup/cgroup-internal.h	/^struct cgrp_cset_link {$/;"	kind:struct
cgrp_cset_link::cgrp	cgroup/cgroup-internal.h	/^	struct cgroup		*cgrp;$/;"	kind:member	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::cgroup	access:public
cgrp_cset_link::cgrp_link	cgroup/cgroup-internal.h	/^	struct list_head	cgrp_link;$/;"	kind:member	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::list_head	access:public
cgrp_cset_link::cset	cgroup/cgroup-internal.h	/^	struct css_set		*cset;$/;"	kind:member	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::css_set	access:public
cgrp_cset_link::cset_link	cgroup/cgroup-internal.h	/^	struct list_head	cset_link;$/;"	kind:member	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::list_head	access:public
cgrp_link	cgroup/cgroup-internal.h	/^	struct list_head	cgrp_link;$/;"	kind:member	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::list_head	access:public
chain_lookup_hits	locking/lockdep_internals.h	/^	unsigned long  chain_lookup_hits;$/;"	kind:member	struct:lockdep_stats	access:public
chain_lookup_misses	locking/lockdep_internals.h	/^	unsigned int   chain_lookup_misses;$/;"	kind:member	struct:lockdep_stats	access:public
chained_action	irq/internals.h	/^extern struct irqaction chained_action;$/;"	kind:externvar
check_clocks	time/tick-sched.h	/^	unsigned long			check_clocks;$/;"	kind:member	struct:tick_sched	access:public
check_cpu_stall	rcu/tree.h	/^static void check_cpu_stall(struct rcu_data *rdp);$/;"	kind:prototype	signature:(struct rcu_data *rdp)
check_cpu_stall	rcu/tree_stall.h	/^static void check_cpu_stall(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
check_cpu_stall_init	rcu/tree_stall.h	/^early_initcall(check_cpu_stall_init);$/;"	kind:variable
check_cpu_stall_init	rcu/tree_stall.h	/^static int __init check_cpu_stall_init(void)$/;"	kind:function	signature:(void)
check_image_kernel	power/power.h	/^static inline char *check_image_kernel(struct swsusp_info *info)$/;"	kind:function	signature:(struct swsusp_info *info)
check_irq_resend	irq/internals.h	/^void check_irq_resend(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
check_preempt_curr	sched/sched.h	/^	void (*check_preempt_curr)(struct rq *rq, struct task_struct *p, int flags);$/;"	kind:member	struct:sched_class	access:public
check_preempt_curr	sched/sched.h	/^extern void check_preempt_curr(struct rq *rq, struct task_struct *p, int flags);$/;"	kind:prototype	signature:(struct rq *rq, struct task_struct *p, int flags)
children	sched/sched.h	/^	struct list_head	children;$/;"	kind:member	struct:task_group	typeref:struct:task_group::list_head	access:public
chip_bus_lock	irq/internals.h	/^static inline void chip_bus_lock(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
chip_bus_sync_unlock	irq/internals.h	/^static inline void chip_bus_sync_unlock(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
clear_event_triggers	trace/trace.h	/^extern void clear_event_triggers(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
clear_free_pages	power/power.h	/^extern void clear_free_pages(void);$/;"	kind:prototype	signature:(void)
clear_ftrace_function_probes	trace/trace.h	/^extern void clear_ftrace_function_probes(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
clear_ftrace_function_probes	trace/trace.h	/^static inline void clear_ftrace_function_probes(struct trace_array *tr)$/;"	kind:function	signature:(struct trace_array *tr)
clear_trace	trace/trace.h	/^	bool			clear_trace;$/;"	kind:member	struct:trace_array	access:public
clock	sched/sched.h	/^	u64			clock;$/;"	kind:member	struct:rq	access:public
clock_adj	time/posix-timers.h	/^	int	(*clock_adj)(const clockid_t which_clock, struct __kernel_timex *tx);$/;"	kind:member	struct:k_clock	access:public
clock_get	time/posix-timers.h	/^	int	(*clock_get)(const clockid_t which_clock,$/;"	kind:member	struct:k_clock	access:public
clock_getres	time/posix-timers.h	/^	int	(*clock_getres)(const clockid_t which_clock,$/;"	kind:member	struct:k_clock	access:public
clock_id	trace/trace.h	/^	int			clock_id;$/;"	kind:member	struct:trace_array	access:public
clock_pelt	sched/sched.h	/^	u64			clock_pelt;$/;"	kind:member	struct:rq	access:public
clock_posix_cpu	time/posix-timers.h	/^extern const struct k_clock clock_posix_cpu;$/;"	kind:externvar
clock_posix_dynamic	time/posix-timers.h	/^extern const struct k_clock clock_posix_dynamic;$/;"	kind:externvar
clock_process	time/posix-timers.h	/^extern const struct k_clock clock_process;$/;"	kind:externvar
clock_set	time/posix-timers.h	/^	int	(*clock_set)(const clockid_t which_clock,$/;"	kind:member	struct:k_clock	access:public
clock_thread	time/posix-timers.h	/^extern const struct k_clock clock_thread;$/;"	kind:externvar
clock_update_flags	sched/sched.h	/^	unsigned int		clock_update_flags;$/;"	kind:member	struct:rq	access:public
clock_update_flags	sched/sched.h	/^	unsigned int clock_update_flags;$/;"	kind:member	struct:rq_flags	access:public
clockevent_get_state	time/tick-internal.h	/^static inline enum clock_event_state clockevent_get_state(struct clock_event_device *dev)$/;"	kind:function	signature:(struct clock_event_device *dev)
clockevent_set_state	time/tick-internal.h	/^static inline void clockevent_set_state(struct clock_event_device *dev,$/;"	kind:function	signature:(struct clock_event_device *dev, enum clock_event_state state)
clockevents_exchange_device	time/tick-internal.h	/^extern void clockevents_exchange_device(struct clock_event_device *old,$/;"	kind:prototype	signature:(struct clock_event_device *old, struct clock_event_device *new)
clockevents_handle_noop	time/tick-internal.h	/^extern void clockevents_handle_noop(struct clock_event_device *dev);$/;"	kind:prototype	signature:(struct clock_event_device *dev)
clockevents_program_event	time/tick-internal.h	/^extern int clockevents_program_event(struct clock_event_device *dev,$/;"	kind:prototype	signature:(struct clock_event_device *dev, ktime_t expires, bool force)
clockevents_shutdown	time/tick-internal.h	/^extern void clockevents_shutdown(struct clock_event_device *dev);$/;"	kind:prototype	signature:(struct clock_event_device *dev)
clockevents_switch_state	time/tick-internal.h	/^extern void clockevents_switch_state(struct clock_event_device *dev,$/;"	kind:prototype	signature:(struct clock_event_device *dev, enum clock_event_state state)
clockevents_tick_resume	time/tick-internal.h	/^extern int clockevents_tick_resume(struct clock_event_device *dev);$/;"	kind:prototype	signature:(struct clock_event_device *dev)
clocksource_delta	time/timekeeping_internal.h	/^static inline u64 clocksource_delta(u64 now, u64 last, u64 mask)$/;"	kind:function	signature:(u64 now, u64 last, u64 mask)
close	trace/trace.h	/^	void			(*close)(struct trace_iterator *iter);$/;"	kind:member	struct:tracer	access:public
cmd_flags	debug/kdb/kdb_private.h	/^	kdb_cmdflags_t cmd_flags;	\/* Command behaviour flags *\/$/;"	kind:member	struct:_kdbtab	access:public
cmd_func	debug/kdb/kdb_private.h	/^	kdb_func_t cmd_func;		\/* Function to execute command *\/$/;"	kind:member	struct:_kdbtab	access:public
cmd_help	debug/kdb/kdb_private.h	/^	char    *cmd_help;		\/* Help message for this command *\/$/;"	kind:member	struct:_kdbtab	access:public
cmd_minlen	debug/kdb/kdb_private.h	/^	short    cmd_minlen;		\/* Minimum legal # command$/;"	kind:member	struct:_kdbtab	access:public
cmd_name	debug/kdb/kdb_private.h	/^	char    *cmd_name;		\/* Command name *\/$/;"	kind:member	struct:_kdbtab	access:public
cmd_ops	trace/trace.h	/^	struct event_command		*cmd_ops;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::event_command	access:public
cmd_usage	debug/kdb/kdb_private.h	/^	char    *cmd_usage;		\/* Usage String for this command *\/$/;"	kind:member	struct:_kdbtab	access:public
cmp_fn	trace/tracing_map.h	/^	tracing_map_cmp_fn_t		cmp_fn;$/;"	kind:member	struct:tracing_map_field	access:public
code	trace/trace_probe.h	/^	struct fetch_insn	*code;$/;"	kind:member	struct:probe_arg	typeref:struct:probe_arg::fetch_insn	access:public
comm	trace/trace.h	/^	char			comm[TASK_COMM_LEN];$/;"	kind:member	struct:trace_array_cpu	access:public
comm	trace/trace_probe.h	/^	const char		*comm;	\/* Command of this argument *\/$/;"	kind:member	struct:probe_arg	access:public
common_lru	bpf/bpf_lru_list.h	/^		struct bpf_common_lru common_lru;$/;"	kind:member	union:bpf_lru::__anon33	typeref:struct:bpf_lru::__anon33::bpf_common_lru	access:public
common_timer_del	time/posix-timers.h	/^int common_timer_del(struct k_itimer *timer);$/;"	kind:prototype	signature:(struct k_itimer *timer)
common_timer_get	time/posix-timers.h	/^void common_timer_get(struct k_itimer *timr, struct itimerspec64 *cur_setting);$/;"	kind:prototype	signature:(struct k_itimer *timr, struct itimerspec64 *cur_setting)
common_timer_set	time/posix-timers.h	/^int common_timer_set(struct k_itimer *timr, int flags,$/;"	kind:prototype	signature:(struct k_itimer *timr, int flags, struct itimerspec64 *new_setting, struct itimerspec64 *old_setting)
completedqs	rcu/tree.h	/^	unsigned long completedqs; \/* All QSes done for this node. *\/$/;"	kind:member	struct:rcu_node	access:public
cond_data	trace/trace.h	/^	void				*cond_data;$/;"	kind:member	struct:cond_snapshot	access:public
cond_snapshot	trace/trace.h	/^	struct cond_snapshot	*cond_snapshot;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::cond_snapshot	access:public
cond_snapshot	trace/trace.h	/^struct cond_snapshot {$/;"	kind:struct
cond_snapshot::cond_data	trace/trace.h	/^	void				*cond_data;$/;"	kind:member	struct:cond_snapshot	access:public
cond_snapshot::update	trace/trace.h	/^	cond_update_fn_t		update;$/;"	kind:member	struct:cond_snapshot	access:public
cond_update_fn_t	trace/trace.h	/^typedef bool (*cond_update_fn_t)(struct trace_array *tr, void *cond_data);$/;"	kind:typedef
console_cmdline	printk/console_cmdline.h	/^struct console_cmdline$/;"	kind:struct
console_cmdline::brl_options	printk/console_cmdline.h	/^	char	*brl_options;			\/* Options for braille driver *\/$/;"	kind:member	struct:console_cmdline	access:public
console_cmdline::index	printk/console_cmdline.h	/^	int	index;				\/* Minor dev. to use	    *\/$/;"	kind:member	struct:console_cmdline	access:public
console_cmdline::name	printk/console_cmdline.h	/^	char	name[16];			\/* Name of the driver	    *\/$/;"	kind:member	struct:console_cmdline	access:public
console_cmdline::options	printk/console_cmdline.h	/^	char	*options;			\/* Options for the driver   *\/$/;"	kind:member	struct:console_cmdline	access:public
const_debug	sched/sched.h	1548;"	kind:macro
const_debug	sched/sched.h	1550;"	kind:macro
cont	trace/trace.h	/^	bool		cont;$/;"	kind:member	struct:trace_parser	access:public
cookie	sched/sched.h	/^	struct pin_cookie cookie;$/;"	kind:member	struct:rq_flags	typeref:struct:rq_flags::pin_cookie	access:public
core_needs_qs	rcu/tree.h	/^	bool		core_needs_qs;	\/* Core waits for quiesc state. *\/$/;"	kind:member	struct:rcu_data	access:public
core_typeoffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	kind:member	struct:load_info	access:public
count	irq/internals.h	/^	int	count;$/;"	kind:member	struct:irq_timings	access:public
count	locking/mcs_spinlock.h	/^	int count;  \/* nesting count, see qspinlock.c *\/$/;"	kind:member	struct:mcs_spinlock	access:public
count	sched/cpupri.h	/^	atomic_t		count;$/;"	kind:member	struct:cpupri_vec	access:public
count	trace/trace.h	/^	unsigned long			count;$/;"	kind:member	struct:event_trigger_data	access:public
count	trace/trace.h	/^	unsigned long		count;$/;"	kind:member	struct:ftrace_hash	access:public
count	trace/trace_probe.h	/^	unsigned int		count;	\/* Array count *\/$/;"	kind:member	struct:probe_arg	access:public
count_highmem_pages	power/power.h	/^static inline unsigned int count_highmem_pages(void) { return 0; }$/;"	kind:function	signature:(void)
counts	bpf/bpf_lru_list.h	/^	unsigned int counts[NR_BPF_LRU_LIST_COUNT];$/;"	kind:member	struct:bpf_lru_list	access:public
cpu	bpf/bpf_lru_list.h	/^	u16 cpu;$/;"	kind:member	struct:bpf_lru_node	access:public
cpu	debug/debug_core.h	/^	int			cpu;$/;"	kind:member	struct:kgdb_state	access:public
cpu	locking/qspinlock_paravirt.h	/^	int			cpu;$/;"	kind:member	struct:pv_node	access:public
cpu	rcu/tree.h	/^	int cpu;$/;"	kind:member	struct:rcu_data	access:public
cpu	sched/cpudeadline.h	/^	int			cpu;$/;"	kind:member	struct:cpudl_item	access:public
cpu	sched/sched.h	/^	int			cpu;$/;"	kind:member	struct:rq	access:public
cpu	trace/trace.h	/^	int				cpu;$/;"	kind:member	struct:trace_buffer	access:public
cpu_bw_dl	sched/sched.h	/^static inline unsigned long cpu_bw_dl(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
cpu_capacity	sched/sched.h	/^	unsigned long		cpu_capacity;$/;"	kind:member	struct:rq	access:public
cpu_capacity_orig	sched/sched.h	/^	unsigned long		cpu_capacity_orig;$/;"	kind:member	struct:rq	access:public
cpu_curr	sched/sched.h	1048;"	kind:macro
cpu_no_qs	rcu/tree.h	/^	union rcu_noqs	cpu_no_qs;	\/* No QSes yet for this CPU. *\/$/;"	kind:member	struct:rcu_data	typeref:union:rcu_data::rcu_noqs	access:public
cpu_of	sched/sched.h	/^static inline int cpu_of(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
cpu_rq	sched/sched.h	1045;"	kind:macro
cpu_to_pri	sched/cpupri.h	/^	int			*cpu_to_pri;$/;"	kind:member	struct:cpupri	access:public
cpu_util_cfs	sched/sched.h	/^static inline unsigned long cpu_util_cfs(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
cpu_util_dl	sched/sched.h	/^static inline unsigned long cpu_util_dl(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
cpu_util_irq	sched/sched.h	/^static inline unsigned long cpu_util_irq(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
cpu_util_rt	sched/sched.h	/^static inline unsigned long cpu_util_rt(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
cpudl	sched/cpudeadline.h	/^struct cpudl {$/;"	kind:struct
cpudl	sched/sched.h	/^	struct cpudl		cpudl;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::cpudl	access:public
cpudl::elements	sched/cpudeadline.h	/^	struct cpudl_item	*elements;$/;"	kind:member	struct:cpudl	typeref:struct:cpudl::cpudl_item	access:public
cpudl::free_cpus	sched/cpudeadline.h	/^	cpumask_var_t		free_cpus;$/;"	kind:member	struct:cpudl	access:public
cpudl::lock	sched/cpudeadline.h	/^	raw_spinlock_t		lock;$/;"	kind:member	struct:cpudl	access:public
cpudl::size	sched/cpudeadline.h	/^	int			size;$/;"	kind:member	struct:cpudl	access:public
cpudl_cleanup	sched/cpudeadline.h	/^void cpudl_cleanup(struct cpudl *cp);$/;"	kind:prototype	signature:(struct cpudl *cp)
cpudl_clear	sched/cpudeadline.h	/^void cpudl_clear(struct cpudl *cp, int cpu);$/;"	kind:prototype	signature:(struct cpudl *cp, int cpu)
cpudl_clear_freecpu	sched/cpudeadline.h	/^void cpudl_clear_freecpu(struct cpudl *cp, int cpu);$/;"	kind:prototype	signature:(struct cpudl *cp, int cpu)
cpudl_find	sched/cpudeadline.h	/^int  cpudl_find(struct cpudl *cp, struct task_struct *p, struct cpumask *later_mask);$/;"	kind:prototype	signature:(struct cpudl *cp, struct task_struct *p, struct cpumask *later_mask)
cpudl_init	sched/cpudeadline.h	/^int  cpudl_init(struct cpudl *cp);$/;"	kind:prototype	signature:(struct cpudl *cp)
cpudl_item	sched/cpudeadline.h	/^struct cpudl_item {$/;"	kind:struct
cpudl_item::cpu	sched/cpudeadline.h	/^	int			cpu;$/;"	kind:member	struct:cpudl_item	access:public
cpudl_item::dl	sched/cpudeadline.h	/^	u64			dl;$/;"	kind:member	struct:cpudl_item	access:public
cpudl_item::idx	sched/cpudeadline.h	/^	int			idx;$/;"	kind:member	struct:cpudl_item	access:public
cpudl_set	sched/cpudeadline.h	/^void cpudl_set(struct cpudl *cp, int cpu, u64 dl);$/;"	kind:prototype	signature:(struct cpudl *cp, int cpu, u64 dl)
cpudl_set_freecpu	sched/cpudeadline.h	/^void cpudl_set_freecpu(struct cpudl *cp, int cpu);$/;"	kind:prototype	signature:(struct cpudl *cp, int cpu)
cpufreq_update_util	sched/sched.h	/^static inline void cpufreq_update_util(struct rq *rq, unsigned int flags) {}$/;"	kind:function	signature:(struct rq *rq, unsigned int flags)
cpufreq_update_util	sched/sched.h	/^static inline void cpufreq_update_util(struct rq *rq, unsigned int flags)$/;"	kind:function	signature:(struct rq *rq, unsigned int flags)
cpuhp_threads_init	smpboot.h	/^void __init cpuhp_threads_init(void);$/;"	kind:prototype	signature:(void)
cpuidle_state	sched/sched.h	/^struct cpuidle_state;$/;"	kind:externvar
cpumask	sched/sched.h	/^	unsigned long		cpumask[0];		\/* Balance mask *\/$/;"	kind:member	struct:sched_group_capacity	access:public
cpumask	sched/sched.h	/^	unsigned long		cpumask[0];$/;"	kind:member	struct:sched_group	access:public
cpupri	sched/cpupri.h	/^struct cpupri {$/;"	kind:struct
cpupri	sched/sched.h	/^	struct cpupri		cpupri;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::cpupri	access:public
cpupri::cpu_to_pri	sched/cpupri.h	/^	int			*cpu_to_pri;$/;"	kind:member	struct:cpupri	access:public
cpupri::pri_to_cpu	sched/cpupri.h	/^	struct cpupri_vec	pri_to_cpu[CPUPRI_NR_PRIORITIES];$/;"	kind:member	struct:cpupri	typeref:struct:cpupri::cpupri_vec	access:public
cpupri_cleanup	sched/cpupri.h	/^void cpupri_cleanup(struct cpupri *cp);$/;"	kind:prototype	signature:(struct cpupri *cp)
cpupri_find	sched/cpupri.h	/^int  cpupri_find(struct cpupri *cp, struct task_struct *p, struct cpumask *lowest_mask);$/;"	kind:prototype	signature:(struct cpupri *cp, struct task_struct *p, struct cpumask *lowest_mask)
cpupri_init	sched/cpupri.h	/^int  cpupri_init(struct cpupri *cp);$/;"	kind:prototype	signature:(struct cpupri *cp)
cpupri_set	sched/cpupri.h	/^void cpupri_set(struct cpupri *cp, int cpu, int pri);$/;"	kind:prototype	signature:(struct cpupri *cp, int cpu, int pri)
cpupri_vec	sched/cpupri.h	/^struct cpupri_vec {$/;"	kind:struct
cpupri_vec::count	sched/cpupri.h	/^	atomic_t		count;$/;"	kind:member	struct:cpupri_vec	access:public
cpupri_vec::mask	sched/cpupri.h	/^	cpumask_var_t		mask;$/;"	kind:member	struct:cpupri_vec	access:public
cpus	power/power.h	/^	int			cpus;$/;"	kind:member	struct:swsusp_info	access:public
cpuset_clone_children	cgroup/cgroup-internal.h	/^	bool		cpuset_clone_children;$/;"	kind:member	struct:cgroup_fs_context	access:public
create	trace/trace_dynevent.h	/^	int (*create)(int argc, const char *argv[]);$/;"	kind:member	struct:dyn_event_operations	access:public
create_basic_memory_bitmaps	power/power.h	/^extern int create_basic_memory_bitmaps(void);$/;"	kind:prototype	signature:(void)
create_event_filter	trace/trace.h	/^extern int create_event_filter(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, struct trace_event_call *call, char *filter_str, bool set_str, struct event_filter **filterp)
create_local_trace_kprobe	trace/trace_probe.h	/^create_local_trace_kprobe(char *func, void *addr, unsigned long offs,$/;"	kind:prototype	signature:(char *func, void *addr, unsigned long offs, bool is_return)
create_local_trace_uprobe	trace/trace_probe.h	/^create_local_trace_uprobe(char *name, unsigned long offs,$/;"	kind:prototype	signature:(char *name, unsigned long offs, unsigned long ref_ctr_offset, bool is_return)
critical_end	trace/trace.h	/^	unsigned long		critical_end;$/;"	kind:member	struct:trace_array_cpu	access:public
critical_sequence	trace/trace.h	/^	unsigned long		critical_sequence;$/;"	kind:member	struct:trace_array_cpu	access:public
critical_start	trace/trace.h	/^	unsigned long		critical_start;$/;"	kind:member	struct:trace_array_cpu	access:public
cset	cgroup/cgroup-internal.h	/^	struct css_set		*cset;$/;"	kind:member	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::css_set	access:public
cset_link	cgroup/cgroup-internal.h	/^	struct list_head	cset_link;$/;"	kind:member	struct:cgrp_cset_link	typeref:struct:cgrp_cset_link::list_head	access:public
csets	cgroup/cgroup-internal.h	/^	struct list_head	*csets;$/;"	kind:member	struct:cgroup_taskset	typeref:struct:cgroup_taskset::list_head	access:public
css	sched/sched.h	/^	struct cgroup_subsys_state css;$/;"	kind:member	struct:task_group	typeref:struct:task_group::cgroup_subsys_state	access:public
css_set_lock	cgroup/cgroup-internal.h	/^extern spinlock_t css_set_lock;$/;"	kind:externvar
ctime	audit.h	/^	struct timespec64   ctime;      \/* time of syscall entry *\/$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::timespec64	access:public
cur	power/power.h	/^	unsigned int	cur;	\/* number of the block of PAGE_SIZE bytes the$/;"	kind:member	struct:snapshot_handle	access:public
cur_cset	cgroup/cgroup-internal.h	/^	struct css_set		*cur_cset;$/;"	kind:member	struct:cgroup_taskset	typeref:struct:cgroup_taskset::css_set	access:public
cur_task	cgroup/cgroup-internal.h	/^	struct task_struct	*cur_task;$/;"	kind:member	struct:cgroup_taskset	typeref:struct:cgroup_taskset::task_struct	access:public
curr	sched/sched.h	/^		int		curr; \/* highest queued rt task prio *\/$/;"	kind:member	struct:rt_rq::__anon29	access:public
curr	sched/sched.h	/^		u64		curr;$/;"	kind:member	struct:dl_rq::__anon30	access:public
curr	sched/sched.h	/^	struct sched_entity	*curr;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity	access:public
curr	sched/sched.h	/^	struct task_struct	*curr;$/;"	kind:member	struct:rq	typeref:struct:rq::task_struct	access:public
current_func	workqueue_internal.h	/^	work_func_t		current_func;	\/* L: current_work's fn *\/$/;"	kind:member	struct:worker	access:public
current_pwq	workqueue_internal.h	/^	struct pool_workqueue	*current_pwq; \/* L: current_work's pwq *\/$/;"	kind:member	struct:worker	typeref:struct:worker::pool_workqueue	access:public
current_state	audit.h	/^	enum audit_state    state, current_state;$/;"	kind:member	struct:audit_context	typeref:enum:audit_context::	access:public
current_trace	trace/trace.h	/^	struct tracer		*current_trace;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::tracer	access:public
current_work	workqueue_internal.h	/^	struct work_struct	*current_work;	\/* L: work being processed *\/$/;"	kind:member	struct:worker	typeref:struct:worker::work_struct	access:public
current_wq_worker	workqueue_internal.h	/^static inline struct worker *current_wq_worker(void)$/;"	kind:function	signature:(void)
data	trace/trace.h	/^	struct trace_array_cpu __percpu	*data;$/;"	kind:member	struct:trace_buffer	typeref:struct:trace_buffer::__percpu	access:public
data	trace/trace_probe.h	/^		void *data;$/;"	kind:member	union:fetch_insn::__anon15	access:public
data_of	power/power.h	148;"	kind:macro
data_pages	events/internal.h	/^	void				*data_pages[0];$/;"	kind:member	struct:ring_buffer	access:public
dbg_activate_sw_breakpoints	debug/debug_core.h	/^extern int dbg_activate_sw_breakpoints(void);$/;"	kind:prototype	signature:(void)
dbg_deactivate_sw_breakpoints	debug/debug_core.h	/^extern int dbg_deactivate_sw_breakpoints(void);$/;"	kind:prototype	signature:(void)
dbg_io_get_char	debug/debug_core.h	/^extern int dbg_io_get_char(void);$/;"	kind:prototype	signature:(void)
dbg_kdb_mode	debug/debug_core.h	/^extern int dbg_kdb_mode;$/;"	kind:externvar
dbg_remove_all_break	debug/debug_core.h	/^extern int dbg_remove_all_break(void);$/;"	kind:prototype	signature:(void)
dbg_remove_sw_break	debug/debug_core.h	/^extern int dbg_remove_sw_break(unsigned long addr);$/;"	kind:prototype	signature:(unsigned long addr)
dbg_set_sw_break	debug/debug_core.h	/^extern int dbg_set_sw_break(unsigned long addr);$/;"	kind:prototype	signature:(unsigned long addr)
dbg_switch_cpu	debug/debug_core.h	/^extern int dbg_switch_cpu;$/;"	kind:externvar
deactivate_task	sched/sched.h	/^extern void deactivate_task(struct rq *rq, struct task_struct *p, int flags);$/;"	kind:prototype	signature:(struct rq *rq, struct task_struct *p, int flags)
deadline	locking/rtmutex_common.h	/^	u64 deadline;$/;"	kind:member	struct:rt_mutex_waiter	access:public
deadlock_lock	locking/rtmutex_common.h	/^	struct rt_mutex		*deadlock_lock;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rt_mutex	access:public
deadlock_task_pid	locking/rtmutex_common.h	/^	struct pid		*deadlock_task_pid;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::pid	access:public
debug	module-internal.h	/^	struct _ddebug *debug;$/;"	kind:member	struct:load_info	typeref:struct:load_info::_ddebug	access:public
debug_atomic_dec	locking/lockdep_internals.h	203;"	kind:macro
debug_atomic_dec	locking/lockdep_internals.h	241;"	kind:macro
debug_atomic_inc	locking/lockdep_internals.h	198;"	kind:macro
debug_atomic_inc	locking/lockdep_internals.h	240;"	kind:macro
debug_atomic_read	locking/lockdep_internals.h	208;"	kind:macro
debug_atomic_read	locking/lockdep_internals.h	242;"	kind:macro
debug_class_ops_inc	locking/lockdep_internals.h	/^static inline void debug_class_ops_inc(struct lock_class *class)$/;"	kind:function	signature:(struct lock_class *class)
debug_class_ops_inc	locking/lockdep_internals.h	243;"	kind:macro
debug_class_ops_read	locking/lockdep_internals.h	/^static inline unsigned long debug_class_ops_read(struct lock_class *class)$/;"	kind:function	signature:(struct lock_class *class)
debug_kfree	debug/kdb/kdb_private.h	/^extern void debug_kfree(void *);$/;"	kind:prototype	signature:(void *)
debug_kmalloc	debug/kdb/kdb_private.h	/^extern void *debug_kmalloc(size_t size, gfp_t flags);$/;"	kind:prototype	signature:(size_t size, gfp_t flags)
debug_kusage	debug/kdb/kdb_private.h	/^extern void debug_kusage(void);$/;"	kind:prototype	signature:(void)
debug_mutex_add_waiter	locking/mutex-debug.h	/^extern void debug_mutex_add_waiter(struct mutex *lock,$/;"	kind:prototype	signature:(struct mutex *lock, struct mutex_waiter *waiter, struct task_struct *task)
debug_mutex_add_waiter	locking/mutex.h	18;"	kind:macro
debug_mutex_free_waiter	locking/mutex-debug.h	/^extern void debug_mutex_free_waiter(struct mutex_waiter *waiter);$/;"	kind:prototype	signature:(struct mutex_waiter *waiter)
debug_mutex_free_waiter	locking/mutex.h	17;"	kind:macro
debug_mutex_init	locking/mutex-debug.h	/^extern void debug_mutex_init(struct mutex *lock, const char *name,$/;"	kind:prototype	signature:(struct mutex *lock, const char *name, struct lock_class_key *key)
debug_mutex_init	locking/mutex.h	20;"	kind:macro
debug_mutex_lock_common	locking/mutex-debug.h	/^extern void debug_mutex_lock_common(struct mutex *lock,$/;"	kind:prototype	signature:(struct mutex *lock, struct mutex_waiter *waiter)
debug_mutex_lock_common	locking/mutex.h	/^debug_mutex_lock_common(struct mutex *lock, struct mutex_waiter *waiter)$/;"	kind:function	signature:(struct mutex *lock, struct mutex_waiter *waiter)
debug_mutex_unlock	locking/mutex-debug.h	/^extern void debug_mutex_unlock(struct mutex *lock);$/;"	kind:prototype	signature:(struct mutex *lock)
debug_mutex_unlock	locking/mutex.h	19;"	kind:macro
debug_mutex_wake_waiter	locking/mutex-debug.h	/^extern void debug_mutex_wake_waiter(struct mutex *lock,$/;"	kind:prototype	signature:(struct mutex *lock, struct mutex_waiter *waiter)
debug_mutex_wake_waiter	locking/mutex.h	16;"	kind:macro
debug_rcu_head_queue	rcu/rcu.h	/^static inline int debug_rcu_head_queue(struct rcu_head *head)$/;"	kind:function	signature:(struct rcu_head *head)
debug_rcu_head_unqueue	rcu/rcu.h	/^static inline void debug_rcu_head_unqueue(struct rcu_head *head)$/;"	kind:function	signature:(struct rcu_head *head)
debug_rt_mutex_deadlock	locking/rtmutex-debug.h	/^extern void debug_rt_mutex_deadlock(enum rtmutex_chainwalk chwalk,$/;"	kind:prototype	signature:(enum rtmutex_chainwalk chwalk, struct rt_mutex_waiter *waiter, struct rt_mutex *lock)
debug_rt_mutex_deadlock	locking/rtmutex.h	22;"	kind:macro
debug_rt_mutex_detect_deadlock	locking/rtmutex-debug.h	/^static inline bool debug_rt_mutex_detect_deadlock(struct rt_mutex_waiter *waiter,$/;"	kind:function	signature:(struct rt_mutex_waiter *waiter, enum rtmutex_chainwalk walk)
debug_rt_mutex_detect_deadlock	locking/rtmutex.h	/^static inline bool debug_rt_mutex_detect_deadlock(struct rt_mutex_waiter *w,$/;"	kind:function	signature:(struct rt_mutex_waiter *w, enum rtmutex_chainwalk walk)
debug_rt_mutex_free_waiter	locking/rtmutex-debug.h	/^extern void debug_rt_mutex_free_waiter(struct rt_mutex_waiter *waiter);$/;"	kind:prototype	signature:(struct rt_mutex_waiter *waiter)
debug_rt_mutex_free_waiter	locking/rtmutex.h	16;"	kind:macro
debug_rt_mutex_init	locking/rtmutex-debug.h	/^extern void debug_rt_mutex_init(struct rt_mutex *lock, const char *name, struct lock_class_key *key);$/;"	kind:prototype	signature:(struct rt_mutex *lock, const char *name, struct lock_class_key *key)
debug_rt_mutex_init	locking/rtmutex.h	21;"	kind:macro
debug_rt_mutex_init_waiter	locking/rtmutex-debug.h	/^extern void debug_rt_mutex_init_waiter(struct rt_mutex_waiter *waiter);$/;"	kind:prototype	signature:(struct rt_mutex_waiter *waiter)
debug_rt_mutex_init_waiter	locking/rtmutex.h	15;"	kind:macro
debug_rt_mutex_lock	locking/rtmutex-debug.h	/^extern void debug_rt_mutex_lock(struct rt_mutex *lock);$/;"	kind:prototype	signature:(struct rt_mutex *lock)
debug_rt_mutex_lock	locking/rtmutex.h	17;"	kind:macro
debug_rt_mutex_print_deadlock	locking/rtmutex-debug.h	/^extern void debug_rt_mutex_print_deadlock(struct rt_mutex_waiter *waiter);$/;"	kind:prototype	signature:(struct rt_mutex_waiter *waiter)
debug_rt_mutex_print_deadlock	locking/rtmutex.h	23;"	kind:macro
debug_rt_mutex_proxy_lock	locking/rtmutex-debug.h	/^extern void debug_rt_mutex_proxy_lock(struct rt_mutex *lock,$/;"	kind:prototype	signature:(struct rt_mutex *lock, struct task_struct *powner)
debug_rt_mutex_proxy_lock	locking/rtmutex.h	18;"	kind:macro
debug_rt_mutex_proxy_unlock	locking/rtmutex-debug.h	/^extern void debug_rt_mutex_proxy_unlock(struct rt_mutex *lock);$/;"	kind:prototype	signature:(struct rt_mutex *lock)
debug_rt_mutex_proxy_unlock	locking/rtmutex.h	19;"	kind:macro
debug_rt_mutex_reset_waiter	locking/rtmutex-debug.h	25;"	kind:macro
debug_rt_mutex_reset_waiter	locking/rtmutex.h	24;"	kind:macro
debug_rt_mutex_unlock	locking/rtmutex-debug.h	/^extern void debug_rt_mutex_unlock(struct rt_mutex *lock);$/;"	kind:prototype	signature:(struct rt_mutex *lock)
debug_rt_mutex_unlock	locking/rtmutex.h	20;"	kind:macro
debuggerinfo	debug/debug_core.h	/^	void			*debuggerinfo;$/;"	kind:member	struct:debuggerinfo_struct	access:public
debuggerinfo_struct	debug/debug_core.h	/^struct debuggerinfo_struct {$/;"	kind:struct
debuggerinfo_struct::debuggerinfo	debug/debug_core.h	/^	void			*debuggerinfo;$/;"	kind:member	struct:debuggerinfo_struct	access:public
debuggerinfo_struct::enter_kgdb	debug/debug_core.h	/^	int			enter_kgdb;$/;"	kind:member	struct:debuggerinfo_struct	access:public
debuggerinfo_struct::exception_state	debug/debug_core.h	/^	int			exception_state;$/;"	kind:member	struct:debuggerinfo_struct	access:public
debuggerinfo_struct::irq_depth	debug/debug_core.h	/^	int			irq_depth;$/;"	kind:member	struct:debuggerinfo_struct	access:public
debuggerinfo_struct::ret_state	debug/debug_core.h	/^	int			ret_state;$/;"	kind:member	struct:debuggerinfo_struct	access:public
debuggerinfo_struct::rounding_up	debug/debug_core.h	/^	bool			rounding_up;$/;"	kind:member	struct:debuggerinfo_struct	access:public
debuggerinfo_struct::task	debug/debug_core.h	/^	struct task_struct	*task;$/;"	kind:member	struct:debuggerinfo_struct	typeref:struct:debuggerinfo_struct::task_struct	access:public
def_dl_bandwidth	sched/sched.h	/^extern struct dl_bandwidth def_dl_bandwidth;$/;"	kind:externvar
def_rt_bandwidth	sched/sched.h	/^extern struct rt_bandwidth def_rt_bandwidth;$/;"	kind:externvar
defer_console_output	printk/internal.h	/^void defer_console_output(void);$/;"	kind:prototype	signature:(void)
defer_qs_iw	rcu/tree.h	/^	struct irq_work defer_qs_iw;	\/* Obtain later scheduler attention. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::irq_work	access:public
defer_qs_iw_pending	rcu/tree.h	/^	bool defer_qs_iw_pending;	\/* Scheduler attention pending? *\/$/;"	kind:member	struct:rcu_data	access:public
del_arg	bpf/bpf_lru_list.h	/^	void *del_arg;$/;"	kind:member	struct:bpf_lru	access:public
del_from_htab	bpf/bpf_lru_list.h	/^	del_from_htab_func del_from_htab;$/;"	kind:member	struct:bpf_lru	access:public
del_from_htab_func	bpf/bpf_lru_list.h	/^typedef bool (*del_from_htab_func)(void *arg, struct bpf_lru_node *node);$/;"	kind:typedef
del_named_trigger	trace/trace.h	/^extern void del_named_trigger(struct event_trigger_data *data);$/;"	kind:prototype	signature:(struct event_trigger_data *data)
dequeue_task	sched/sched.h	/^	void (*dequeue_task) (struct rq *rq, struct task_struct *p, int flags);$/;"	kind:member	struct:sched_class	access:public
desc	workqueue_internal.h	/^	char			desc[WORKER_DESC_LEN];$/;"	kind:member	struct:worker	access:public
descending	trace/tracing_map.h	/^	bool				descending;$/;"	kind:member	struct:tracing_map_sort_key	access:public
destroy_local_trace_kprobe	trace/trace_probe.h	/^extern void destroy_local_trace_kprobe(struct trace_event_call *event_call);$/;"	kind:prototype	signature:(struct trace_event_call *event_call)
destroy_local_trace_uprobe	trace/trace_probe.h	/^extern void destroy_local_trace_uprobe(struct trace_event_call *event_call);$/;"	kind:prototype	signature:(struct trace_event_call *event_call)
dev	audit.h	/^	dev_t			dev;$/;"	kind:member	struct:audit_names	access:public
dir	gcov/gcov.h	/^	} dir;$/;"	kind:member	struct:gcov_link	typeref:enum:gcov_link::__anon1	access:public
dir	trace/trace.h	/^	struct dentry		*dir;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::dentry	access:public
dirty_sched_domain_sysctl	sched/sched.h	/^static inline void dirty_sched_domain_sysctl(int cpu)$/;"	kind:function	signature:(int cpu)
dirty_sched_domain_sysctl	sched/sched.h	/^void dirty_sched_domain_sysctl(int cpu);$/;"	kind:prototype	signature:(int cpu)
disable_branch_tracing	trace/trace.h	/^extern void disable_branch_tracing(void);$/;"	kind:prototype	signature:(void)
disabled	trace/trace.h	/^	atomic_t		disabled;$/;"	kind:member	struct:trace_array_cpu	access:public
distribute_running	sched/sched.h	/^	u8			distribute_running;$/;"	kind:member	struct:cfs_bandwidth	access:public
dl	sched/cpudeadline.h	/^	u64			dl;$/;"	kind:member	struct:cpudl_item	access:public
dl	sched/sched.h	/^	struct dl_rq		dl;$/;"	kind:member	struct:rq	typeref:struct:rq::dl_rq	access:public
dl_bandwidth	sched/sched.h	/^struct dl_bandwidth {$/;"	kind:struct
dl_bandwidth::dl_period	sched/sched.h	/^	u64			dl_period;$/;"	kind:member	struct:dl_bandwidth	access:public
dl_bandwidth::dl_runtime	sched/sched.h	/^	u64			dl_runtime;$/;"	kind:member	struct:dl_bandwidth	access:public
dl_bandwidth::dl_runtime_lock	sched/sched.h	/^	raw_spinlock_t		dl_runtime_lock;$/;"	kind:member	struct:dl_bandwidth	access:public
dl_bandwidth_enabled	sched/sched.h	/^static inline int dl_bandwidth_enabled(void)$/;"	kind:function	signature:(void)
dl_bw	sched/sched.h	/^	struct dl_bw		dl_bw;$/;"	kind:member	struct:dl_rq	typeref:struct:dl_rq::dl_bw	access:public
dl_bw	sched/sched.h	/^	struct dl_bw		dl_bw;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::dl_bw	access:public
dl_bw	sched/sched.h	/^struct dl_bw {$/;"	kind:struct
dl_bw::bw	sched/sched.h	/^	u64			bw;$/;"	kind:member	struct:dl_bw	access:public
dl_bw::lock	sched/sched.h	/^	raw_spinlock_t		lock;$/;"	kind:member	struct:dl_bw	access:public
dl_bw::total_bw	sched/sched.h	/^	u64			total_bw;$/;"	kind:member	struct:dl_bw	access:public
dl_change_utilization	sched/sched.h	/^extern void dl_change_utilization(struct task_struct *p, u64 new_bw);$/;"	kind:prototype	signature:(struct task_struct *p, u64 new_bw)
dl_cpu_busy	sched/sched.h	/^extern bool dl_cpu_busy(unsigned int cpu);$/;"	kind:prototype	signature:(unsigned int cpu)
dl_cpuset_cpumask_can_shrink	sched/sched.h	/^extern int  dl_cpuset_cpumask_can_shrink(const struct cpumask *cur, const struct cpumask *trial);$/;"	kind:prototype	signature:(const struct cpumask *cur, const struct cpumask *trial)
dl_entity_is_special	sched/sched.h	/^static inline bool dl_entity_is_special(struct sched_dl_entity *dl_se)$/;"	kind:function	signature:(struct sched_dl_entity *dl_se)
dl_entity_preempt	sched/sched.h	/^dl_entity_preempt(struct sched_dl_entity *a, struct sched_dl_entity *b)$/;"	kind:function	signature:(struct sched_dl_entity *a, struct sched_dl_entity *b)
dl_nr_migratory	sched/sched.h	/^	unsigned long		dl_nr_migratory;$/;"	kind:member	struct:dl_rq	access:public
dl_nr_running	sched/sched.h	/^	unsigned long		dl_nr_running;$/;"	kind:member	struct:dl_rq	access:public
dl_param_changed	sched/sched.h	/^extern bool dl_param_changed(struct task_struct *p, const struct sched_attr *attr);$/;"	kind:prototype	signature:(struct task_struct *p, const struct sched_attr *attr)
dl_period	sched/sched.h	/^	u64			dl_period;$/;"	kind:member	struct:dl_bandwidth	access:public
dl_policy	sched/sched.h	/^static inline int dl_policy(int policy)$/;"	kind:function	signature:(int policy)
dl_rq	sched/sched.h	/^struct dl_rq {$/;"	kind:struct
dl_rq::__anon30::curr	sched/sched.h	/^		u64		curr;$/;"	kind:member	struct:dl_rq::__anon30	access:public
dl_rq::__anon30::next	sched/sched.h	/^		u64		next;$/;"	kind:member	struct:dl_rq::__anon30	access:public
dl_rq::bw_ratio	sched/sched.h	/^	u64			bw_ratio;$/;"	kind:member	struct:dl_rq	access:public
dl_rq::dl_bw	sched/sched.h	/^	struct dl_bw		dl_bw;$/;"	kind:member	struct:dl_rq	typeref:struct:dl_rq::dl_bw	access:public
dl_rq::dl_nr_migratory	sched/sched.h	/^	unsigned long		dl_nr_migratory;$/;"	kind:member	struct:dl_rq	access:public
dl_rq::dl_nr_running	sched/sched.h	/^	unsigned long		dl_nr_running;$/;"	kind:member	struct:dl_rq	access:public
dl_rq::earliest_dl	sched/sched.h	/^	} earliest_dl;$/;"	kind:member	struct:dl_rq	typeref:struct:dl_rq::__anon30	access:public
dl_rq::extra_bw	sched/sched.h	/^	u64			extra_bw;$/;"	kind:member	struct:dl_rq	access:public
dl_rq::overloaded	sched/sched.h	/^	int			overloaded;$/;"	kind:member	struct:dl_rq	access:public
dl_rq::pushable_dl_tasks_root	sched/sched.h	/^	struct rb_root_cached	pushable_dl_tasks_root;$/;"	kind:member	struct:dl_rq	typeref:struct:dl_rq::rb_root_cached	access:public
dl_rq::root	sched/sched.h	/^	struct rb_root_cached	root;$/;"	kind:member	struct:dl_rq	typeref:struct:dl_rq::rb_root_cached	access:public
dl_rq::running_bw	sched/sched.h	/^	u64			running_bw;$/;"	kind:member	struct:dl_rq	access:public
dl_rq::this_bw	sched/sched.h	/^	u64			this_bw;$/;"	kind:member	struct:dl_rq	access:public
dl_runtime	sched/sched.h	/^	u64			dl_runtime;$/;"	kind:member	struct:dl_bandwidth	access:public
dl_runtime_lock	sched/sched.h	/^	raw_spinlock_t		dl_runtime_lock;$/;"	kind:member	struct:dl_bandwidth	access:public
dl_sched_class	sched/sched.h	/^extern const struct sched_class dl_sched_class;$/;"	kind:externvar
dl_task_can_attach	sched/sched.h	/^extern int  dl_task_can_attach(struct task_struct *p, const struct cpumask *cs_cpus_allowed);$/;"	kind:prototype	signature:(struct task_struct *p, const struct cpumask *cs_cpus_allowed)
dlo_count	sched/sched.h	/^	atomic_t		dlo_count;$/;"	kind:member	struct:root_domain	access:public
dlo_mask	sched/sched.h	/^	cpumask_var_t		dlo_mask;$/;"	kind:member	struct:root_domain	access:public
do_for_each_ftrace_op	trace/ftrace_internal.h	16;"	kind:macro
do_kimage_alloc_init	kexec_internal.h	/^struct kimage *do_kimage_alloc_init(void);$/;"	kind:prototype	signature:(void)
do_nocb_bypass_wakeup_timer	rcu/tree_plugin.h	/^static void do_nocb_bypass_wakeup_timer(struct timer_list *t)$/;"	kind:function	signature:(struct timer_list *t)
do_nocb_deferred_wakeup	rcu/tree.h	/^static void do_nocb_deferred_wakeup(struct rcu_data *rdp);$/;"	kind:prototype	signature:(struct rcu_data *rdp)
do_nocb_deferred_wakeup	rcu/tree_plugin.h	/^static void do_nocb_deferred_wakeup(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
do_nocb_deferred_wakeup_common	rcu/tree_plugin.h	/^static void do_nocb_deferred_wakeup_common(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
do_nocb_deferred_wakeup_timer	rcu/tree_plugin.h	/^static void do_nocb_deferred_wakeup_timer(struct timer_list *t)$/;"	kind:function	signature:(struct timer_list *t)
do_timer	time/timekeeping.h	/^extern void do_timer(unsigned long ticks);$/;"	kind:prototype	signature:(unsigned long ticks)
do_timer_last	time/tick-sched.h	/^	unsigned int			do_timer_last	: 1;$/;"	kind:member	struct:tick_sched	access:public
do_trace_rcu_torture_read	rcu/rcu.h	/^void do_trace_rcu_torture_read(const char *rcutorturename,$/;"	kind:prototype	signature:(const char *rcutorturename, struct rcu_head *rhp, unsigned long secs, unsigned long c_old, unsigned long c)
do_trace_rcu_torture_read	rcu/rcu.h	479;"	kind:macro
double_lock	sched/sched.h	/^static inline void double_lock(spinlock_t *l1, spinlock_t *l2)$/;"	kind:function	signature:(spinlock_t *l1, spinlock_t *l2)
double_lock_balance	sched/sched.h	/^static inline int double_lock_balance(struct rq *this_rq, struct rq *busiest)$/;"	kind:function	signature:(struct rq *this_rq, struct rq *busiest)
double_lock_irq	sched/sched.h	/^static inline void double_lock_irq(spinlock_t *l1, spinlock_t *l2)$/;"	kind:function	signature:(spinlock_t *l1, spinlock_t *l2)
double_raw_lock	sched/sched.h	/^static inline void double_raw_lock(raw_spinlock_t *l1, raw_spinlock_t *l2)$/;"	kind:function	signature:(raw_spinlock_t *l1, raw_spinlock_t *l2)
double_rq_lock	sched/sched.h	/^static inline void double_rq_lock(struct rq *rq1, struct rq *rq2);$/;"	kind:prototype	signature:(struct rq *rq1, struct rq *rq2)
drops	trace/tracing_map.h	/^	atomic64_t			drops;$/;"	kind:member	struct:tracing_map	access:public
dst_csets	cgroup/cgroup-internal.h	/^	struct list_head	dst_csets;$/;"	kind:member	struct:cgroup_taskset	typeref:struct:cgroup_taskset::list_head	access:public
dummy	audit.h	/^	int		    dummy;	\/* must be the first element *\/$/;"	kind:member	struct:audit_context	access:public
dump_blkd_tasks	rcu/tree.h	/^static void dump_blkd_tasks(struct rcu_node *rnp, int ncheck);$/;"	kind:prototype	signature:(struct rcu_node *rnp, int ncheck)
dump_blkd_tasks	rcu/tree_plugin.h	/^dump_blkd_tasks(struct rcu_node *rnp, int ncheck)$/;"	kind:function	signature:(struct rcu_node *rnp, int ncheck)
dup	trace/tracing_map.h	/^	bool				dup;$/;"	kind:member	struct:tracing_map_sort_entry	access:public
dyn_event	trace/trace_dynevent.h	/^struct dyn_event {$/;"	kind:struct
dyn_event	trace/trace_dynevent.h	/^struct dyn_event;$/;"	kind:externvar
dyn_event::list	trace/trace_dynevent.h	/^	struct list_head		list;$/;"	kind:member	struct:dyn_event	typeref:struct:dyn_event::list_head	access:public
dyn_event::ops	trace/trace_dynevent.h	/^	struct dyn_event_operations	*ops;$/;"	kind:member	struct:dyn_event	typeref:struct:dyn_event::dyn_event_operations	access:public
dyn_event_add	trace/trace_dynevent.h	/^static inline int dyn_event_add(struct dyn_event *ev)$/;"	kind:function	signature:(struct dyn_event *ev)
dyn_event_init	trace/trace_dynevent.h	/^int dyn_event_init(struct dyn_event *ev, struct dyn_event_operations *ops)$/;"	kind:function	signature:(struct dyn_event *ev, struct dyn_event_operations *ops)
dyn_event_list	trace/trace_dynevent.h	/^extern struct list_head dyn_event_list;$/;"	kind:externvar
dyn_event_operations	trace/trace_dynevent.h	/^struct dyn_event_operations {$/;"	kind:struct
dyn_event_operations::create	trace/trace_dynevent.h	/^	int (*create)(int argc, const char *argv[]);$/;"	kind:member	struct:dyn_event_operations	access:public
dyn_event_operations::free	trace/trace_dynevent.h	/^	int (*free)(struct dyn_event *ev);$/;"	kind:member	struct:dyn_event_operations	access:public
dyn_event_operations::is_busy	trace/trace_dynevent.h	/^	bool (*is_busy)(struct dyn_event *ev);$/;"	kind:member	struct:dyn_event_operations	access:public
dyn_event_operations::list	trace/trace_dynevent.h	/^	struct list_head	list;$/;"	kind:member	struct:dyn_event_operations	typeref:struct:dyn_event_operations::list_head	access:public
dyn_event_operations::match	trace/trace_dynevent.h	/^	bool (*match)(const char *system, const char *event,$/;"	kind:member	struct:dyn_event_operations	access:public
dyn_event_operations::show	trace/trace_dynevent.h	/^	int (*show)(struct seq_file *m, struct dyn_event *ev);$/;"	kind:member	struct:dyn_event_operations	access:public
dyn_event_register	trace/trace_dynevent.h	/^int dyn_event_register(struct dyn_event_operations *ops);$/;"	kind:prototype	signature:(struct dyn_event_operations *ops)
dyn_event_release	trace/trace_dynevent.h	/^int dyn_event_release(int argc, char **argv, struct dyn_event_operations *type);$/;"	kind:prototype	signature:(int argc, char **argv, struct dyn_event_operations *type)
dyn_event_remove	trace/trace_dynevent.h	/^static inline void dyn_event_remove(struct dyn_event *ev)$/;"	kind:function	signature:(struct dyn_event *ev)
dyn_event_seq_next	trace/trace_dynevent.h	/^void *dyn_event_seq_next(struct seq_file *m, void *v, loff_t *pos);$/;"	kind:prototype	signature:(struct seq_file *m, void *v, loff_t *pos)
dyn_event_seq_start	trace/trace_dynevent.h	/^void *dyn_event_seq_start(struct seq_file *m, loff_t *pos);$/;"	kind:prototype	signature:(struct seq_file *m, loff_t *pos)
dyn_event_seq_stop	trace/trace_dynevent.h	/^void dyn_event_seq_stop(struct seq_file *m, void *v);$/;"	kind:prototype	signature:(struct seq_file *m, void *v)
dyn_events_release_all	trace/trace_dynevent.h	/^int dyn_events_release_all(struct dyn_event_operations *type);$/;"	kind:prototype	signature:(struct dyn_event_operations *type)
dynamic	trace/trace_probe.h	/^	bool			dynamic;\/* Dynamic array (string) is used *\/$/;"	kind:member	struct:probe_arg	access:public
dynticks	rcu/tree.h	/^	atomic_t dynticks;		\/* Even value for idle, else odd. *\/$/;"	kind:member	struct:rcu_data	access:public
dynticks_nesting	rcu/tree.h	/^	long dynticks_nesting;		\/* Track process nesting level. *\/$/;"	kind:member	struct:rcu_data	access:public
dynticks_nmi_nesting	rcu/tree.h	/^	long dynticks_nmi_nesting;	\/* Track irq\/NMI nesting level. *\/$/;"	kind:member	struct:rcu_data	access:public
dynticks_snap	rcu/tree.h	/^	int dynticks_snap;		\/* Per-GP tracking for dynticks. *\/$/;"	kind:member	struct:rcu_data	access:public
earliest_dl	sched/sched.h	/^	} earliest_dl;$/;"	kind:member	struct:dl_rq	typeref:struct:dl_rq::__anon30	access:public
effective	audit.h	/^		kernel_cap_t	effective;	\/* effective set of process *\/$/;"	kind:member	union:audit_cap_data::__anon3	access:public
egid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	kind:member	struct:audit_context	access:public
elements	sched/cpudeadline.h	/^	struct cpudl_item	*elements;$/;"	kind:member	struct:cpudl	typeref:struct:cpudl::cpudl_item	access:public
elt	trace/tracing_map.h	/^	struct tracing_map_elt		*elt;$/;"	kind:member	struct:tracing_map_sort_entry	typeref:struct:tracing_map_sort_entry::tracing_map_elt	access:public
elt_alloc	trace/tracing_map.h	/^	int			(*elt_alloc)(struct tracing_map_elt *elt);$/;"	kind:member	struct:tracing_map_ops	access:public
elt_clear	trace/tracing_map.h	/^	void			(*elt_clear)(struct tracing_map_elt *elt);$/;"	kind:member	struct:tracing_map_ops	access:public
elt_copied	trace/tracing_map.h	/^	bool				elt_copied;$/;"	kind:member	struct:tracing_map_sort_entry	access:public
elt_free	trace/tracing_map.h	/^	void			(*elt_free)(struct tracing_map_elt *elt);$/;"	kind:member	struct:tracing_map_ops	access:public
elt_init	trace/tracing_map.h	/^	void			(*elt_init)(struct tracing_map_elt *elt);$/;"	kind:member	struct:tracing_map_ops	access:public
elts	trace/tracing_map.h	/^	struct tracing_map_array	*elts;$/;"	kind:member	struct:tracing_map	typeref:struct:tracing_map::tracing_map_array	access:public
em_pd	sched/sched.h	/^	struct em_perf_domain *em_pd;$/;"	kind:member	struct:perf_domain	typeref:struct:perf_domain::em_perf_domain	access:public
enable	trace/trace.h	/^	bool				enable;$/;"	kind:member	struct:enable_trigger_data	access:public
enable	trace/trace.h	/^	int			 enable;$/;"	kind:member	struct:ftrace_mod_load	access:public
enable_branch_tracing	trace/trace.h	/^extern int enable_branch_tracing(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
enable_debug_cgroup	cgroup/cgroup-internal.h	/^extern void __init enable_debug_cgroup(void);$/;"	kind:prototype	signature:(void)
enable_restore_image_protection	power/power.h	/^extern void enable_restore_image_protection(void);$/;"	kind:prototype	signature:(void)
enable_restore_image_protection	power/power.h	/^static inline void enable_restore_image_protection(void) {}$/;"	kind:function	signature:(void)
enable_trigger_data	trace/trace.h	/^struct enable_trigger_data {$/;"	kind:struct
enable_trigger_data::enable	trace/trace.h	/^	bool				enable;$/;"	kind:member	struct:enable_trigger_data	access:public
enable_trigger_data::file	trace/trace.h	/^	struct trace_event_file		*file;$/;"	kind:member	struct:enable_trigger_data	typeref:struct:enable_trigger_data::trace_event_file	access:public
enable_trigger_data::hist	trace/trace.h	/^	bool				hist;$/;"	kind:member	struct:enable_trigger_data	access:public
enabled	trace/trace.h	/^	int			enabled;$/;"	kind:member	struct:tracer	access:public
enqueue_task	sched/sched.h	/^	void (*enqueue_task) (struct rq *rq, struct task_struct *p, int flags);$/;"	kind:member	struct:sched_class	access:public
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	kind:member	struct:kprobe_trace_entry_head	typeref:struct:kprobe_trace_entry_head::trace_entry	access:public
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	kind:member	struct:kretprobe_trace_entry_head	typeref:struct:kretprobe_trace_entry_head::trace_entry	access:public
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	kind:member	struct:syscall_trace_enter	typeref:struct:syscall_trace_enter::trace_entry	access:public
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	kind:member	struct:syscall_trace_exit	typeref:struct:syscall_trace_exit::trace_entry	access:public
enter_kgdb	debug/debug_core.h	/^	int			enter_kgdb;$/;"	kind:member	struct:debuggerinfo_struct	access:public
enter_syscall_files	trace/trace.h	/^	struct trace_event_file __rcu *enter_syscall_files[NR_syscalls];$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::__rcu	access:public
entity_is_task	sched/sched.h	690;"	kind:macro
entity_is_task	sched/sched.h	692;"	kind:macro
entries	trace/trace.h	/^	unsigned long		entries;$/;"	kind:member	struct:trace_array_cpu	access:public
entries_per_page	trace/tracing_map.h	/^	unsigned int entries_per_page;$/;"	kind:member	struct:tracing_map_array	access:public
entry	trace/trace.h	/^	struct dentry			*entry;$/;"	kind:member	struct:trace_option_dentry	typeref:struct:trace_option_dentry::dentry	access:public
entry	trace/trace.h	/^	struct dentry			*entry;$/;"	kind:member	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::dentry	access:public
entry	workqueue_internal.h	/^		struct list_head	entry;	\/* L: while idle *\/$/;"	kind:member	union:worker::__anon27	typeref:struct:worker::__anon27::list_head	access:public
entry_mask	trace/tracing_map.h	/^	unsigned int entry_mask;$/;"	kind:member	struct:tracing_map_array	access:public
entry_shift	trace/tracing_map.h	/^	unsigned int entry_shift;$/;"	kind:member	struct:tracing_map_array	access:public
entry_size_shift	trace/tracing_map.h	/^	unsigned int entry_size_shift;$/;"	kind:member	struct:tracing_map_array	access:public
err_code	debug/debug_core.h	/^	int			err_code;$/;"	kind:member	struct:kgdb_state	access:public
err_log	trace/trace.h	/^	struct list_head	err_log;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
err_pos	trace/trace.h	/^extern unsigned int err_pos(char *cmd, const char *str);$/;"	kind:prototype	signature:(char *cmd, const char *str)
euid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	kind:member	struct:audit_context	access:public
event	trace/trace_probe.h	/^	struct trace_probe_event	*event;$/;"	kind:member	struct:trace_probe	typeref:struct:trace_probe::trace_probe_event	access:public
event_command	trace/trace.h	/^struct event_command {$/;"	kind:struct
event_command::flags	trace/trace.h	/^	int			flags;$/;"	kind:member	struct:event_command	access:public
event_command::func	trace/trace.h	/^	int			(*func)(struct event_command *cmd_ops,$/;"	kind:member	struct:event_command	access:public
event_command::get_trigger_ops	trace/trace.h	/^	struct event_trigger_ops *(*get_trigger_ops)(char *cmd, char *param);$/;"	kind:member	struct:event_command	typeref:struct:event_command::get_trigger_ops	access:public
event_command::list	trace/trace.h	/^	struct list_head	list;$/;"	kind:member	struct:event_command	typeref:struct:event_command::list_head	access:public
event_command::name	trace/trace.h	/^	char			*name;$/;"	kind:member	struct:event_command	access:public
event_command::reg	trace/trace.h	/^	int			(*reg)(char *glob,$/;"	kind:member	struct:event_command	access:public
event_command::set_filter	trace/trace.h	/^	int			(*set_filter)(char *filter_str,$/;"	kind:member	struct:event_command	access:public
event_command::trigger_type	trace/trace.h	/^	enum event_trigger_type	trigger_type;$/;"	kind:member	struct:event_command	typeref:enum:event_command::event_trigger_type	access:public
event_command::unreg	trace/trace.h	/^	void			(*unreg)(char *glob,$/;"	kind:member	struct:event_command	access:public
event_command::unreg_all	trace/trace.h	/^	void			(*unreg_all)(struct trace_event_file *file);$/;"	kind:member	struct:event_command	access:public
event_command_flags	trace/trace.h	/^enum event_command_flags {$/;"	kind:enum
event_command_needs_rec	trace/trace.h	/^static inline bool event_command_needs_rec(struct event_command *cmd_ops)$/;"	kind:function	signature:(struct event_command *cmd_ops)
event_command_post_trigger	trace/trace.h	/^static inline bool event_command_post_trigger(struct event_command *cmd_ops)$/;"	kind:function	signature:(struct event_command *cmd_ops)
event_dir	trace/trace.h	/^	struct dentry		*event_dir;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::dentry	access:public
event_enable_register_trigger	trace/trace.h	/^extern int event_enable_register_trigger(char *glob,$/;"	kind:prototype	signature:(char *glob, struct event_trigger_ops *ops, struct event_trigger_data *data, struct trace_event_file *file)
event_enable_trigger_free	trace/trace.h	/^extern void event_enable_trigger_free(struct event_trigger_ops *ops,$/;"	kind:prototype	signature:(struct event_trigger_ops *ops, struct event_trigger_data *data)
event_enable_trigger_func	trace/trace.h	/^extern int event_enable_trigger_func(struct event_command *cmd_ops,$/;"	kind:prototype	signature:(struct event_command *cmd_ops, struct trace_event_file *file, char *glob, char *cmd, char *param)
event_enable_trigger_print	trace/trace.h	/^extern int event_enable_trigger_print(struct seq_file *m,$/;"	kind:prototype	signature:(struct seq_file *m, struct event_trigger_ops *ops, struct event_trigger_data *data)
event_enable_unregister_trigger	trace/trace.h	/^extern void event_enable_unregister_trigger(char *glob,$/;"	kind:prototype	signature:(char *glob, struct event_trigger_ops *ops, struct event_trigger_data *test, struct trace_event_file *file)
event_file_data	trace/trace.h	/^static inline void *event_file_data(struct file *filp)$/;"	kind:function	signature:(struct file *filp)
event_file_link	trace/trace_probe.h	/^struct event_file_link {$/;"	kind:struct
event_file_link::file	trace/trace_probe.h	/^	struct trace_event_file		*file;$/;"	kind:member	struct:event_file_link	typeref:struct:event_file_link::trace_event_file	access:public
event_file_link::list	trace/trace_probe.h	/^	struct list_head		list;$/;"	kind:member	struct:event_file_link	typeref:struct:event_file_link::list_head	access:public
event_filter	trace/trace.h	/^struct event_filter {$/;"	kind:struct
event_filter::filter_string	trace/trace.h	/^	char			*filter_string;$/;"	kind:member	struct:event_filter	access:public
event_filter::prog	trace/trace.h	/^	struct prog_entry __rcu	*prog;$/;"	kind:member	struct:event_filter	typeref:struct:event_filter::__rcu	access:public
event_hist_fops	trace/trace.h	/^extern const struct file_operations event_hist_fops;$/;"	kind:externvar
event_list	events/internal.h	/^	struct list_head		event_list;$/;"	kind:member	struct:ring_buffer	typeref:struct:ring_buffer::list_head	access:public
event_lock	events/internal.h	/^	spinlock_t			event_lock;$/;"	kind:member	struct:ring_buffer	access:public
event_mutex	trace/trace.h	/^extern struct mutex event_mutex;$/;"	kind:externvar
event_subsystem	trace/trace.h	/^struct event_subsystem {$/;"	kind:struct
event_subsystem::filter	trace/trace.h	/^	struct event_filter	*filter;$/;"	kind:member	struct:event_subsystem	typeref:struct:event_subsystem::event_filter	access:public
event_subsystem::list	trace/trace.h	/^	struct list_head	list;$/;"	kind:member	struct:event_subsystem	typeref:struct:event_subsystem::list_head	access:public
event_subsystem::name	trace/trace.h	/^	const char		*name;$/;"	kind:member	struct:event_subsystem	access:public
event_subsystem::ref_count	trace/trace.h	/^	int			ref_count;$/;"	kind:member	struct:event_subsystem	access:public
event_trace_add_tracer	trace/trace.h	/^extern int event_trace_add_tracer(struct dentry *parent, struct trace_array *tr);$/;"	kind:prototype	signature:(struct dentry *parent, struct trace_array *tr)
event_trace_del_tracer	trace/trace.h	/^extern int event_trace_del_tracer(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
event_trace_init	trace/trace.h	/^extern int event_trace_init(void);$/;"	kind:prototype	signature:(void)
event_trigger_data	trace/trace.h	/^struct event_trigger_data {$/;"	kind:struct
event_trigger_data::cmd_ops	trace/trace.h	/^	struct event_command		*cmd_ops;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::event_command	access:public
event_trigger_data::count	trace/trace.h	/^	unsigned long			count;$/;"	kind:member	struct:event_trigger_data	access:public
event_trigger_data::filter	trace/trace.h	/^	struct event_filter __rcu	*filter;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::__rcu	access:public
event_trigger_data::filter_str	trace/trace.h	/^	char				*filter_str;$/;"	kind:member	struct:event_trigger_data	access:public
event_trigger_data::list	trace/trace.h	/^	struct list_head		list;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::list_head	access:public
event_trigger_data::name	trace/trace.h	/^	char				*name;$/;"	kind:member	struct:event_trigger_data	access:public
event_trigger_data::named_data	trace/trace.h	/^	struct event_trigger_data	*named_data;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::event_trigger_data	access:public
event_trigger_data::named_list	trace/trace.h	/^	struct list_head		named_list;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::list_head	access:public
event_trigger_data::ops	trace/trace.h	/^	struct event_trigger_ops	*ops;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::event_trigger_ops	access:public
event_trigger_data::paused	trace/trace.h	/^	bool				paused;$/;"	kind:member	struct:event_trigger_data	access:public
event_trigger_data::paused_tmp	trace/trace.h	/^	bool				paused_tmp;$/;"	kind:member	struct:event_trigger_data	access:public
event_trigger_data::private_data	trace/trace.h	/^	void				*private_data;$/;"	kind:member	struct:event_trigger_data	access:public
event_trigger_data::ref	trace/trace.h	/^	int				ref;$/;"	kind:member	struct:event_trigger_data	access:public
event_trigger_fops	trace/trace.h	/^extern const struct file_operations event_trigger_fops;$/;"	kind:externvar
event_trigger_init	trace/trace.h	/^extern int event_trigger_init(struct event_trigger_ops *ops,$/;"	kind:prototype	signature:(struct event_trigger_ops *ops, struct event_trigger_data *data)
event_trigger_ops	trace/trace.h	/^struct event_trigger_ops {$/;"	kind:struct
event_trigger_ops::free	trace/trace.h	/^	void			(*free)(struct event_trigger_ops *ops,$/;"	kind:member	struct:event_trigger_ops	access:public
event_trigger_ops::func	trace/trace.h	/^	void			(*func)(struct event_trigger_data *data,$/;"	kind:member	struct:event_trigger_ops	access:public
event_trigger_ops::init	trace/trace.h	/^	int			(*init)(struct event_trigger_ops *ops,$/;"	kind:member	struct:event_trigger_ops	access:public
event_trigger_ops::print	trace/trace.h	/^	int			(*print)(struct seq_file *m,$/;"	kind:member	struct:event_trigger_ops	access:public
event_trigger_unlock_commit	trace/trace.h	/^event_trigger_unlock_commit(struct trace_event_file *file,$/;"	kind:function	signature:(struct trace_event_file *file, struct ring_buffer *buffer, struct ring_buffer_event *event, void *entry, unsigned long irq_flags, int pc)
event_trigger_unlock_commit_regs	trace/trace.h	/^event_trigger_unlock_commit_regs(struct trace_event_file *file,$/;"	kind:function	signature:(struct trace_event_file *file, struct ring_buffer *buffer, struct ring_buffer_event *event, void *entry, unsigned long irq_flags, int pc, struct pt_regs *regs)
events	events/internal.h	/^	local_t				events;		\/* event limit       *\/$/;"	kind:member	struct:ring_buffer	access:public
events	trace/trace.h	/^	struct list_head	events;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
evtdev	time/tick-sched.h	/^	struct clock_event_device *evtdev;$/;"	kind:member	struct:tick_device	typeref:struct:tick_device::clock_event_device	access:public
ex_vector	debug/debug_core.h	/^	int			ex_vector;$/;"	kind:member	struct:kgdb_state	access:public
exception_state	debug/debug_core.h	/^	int			exception_state;$/;"	kind:member	struct:debuggerinfo_struct	access:public
exec_clock	sched/sched.h	/^	u64			exec_clock;$/;"	kind:member	struct:cfs_rq	access:public
execve	audit.h	/^		} execve;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon13	access:public
exit_rcu	rcu/tree_plugin.h	/^void exit_rcu(void)$/;"	kind:function	signature:(void)
exit_syscall_files	trace/trace.h	/^	struct trace_event_file __rcu *exit_syscall_files[NR_syscalls];$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::__rcu	access:public
exp	rcu/tree.h	/^		u8 exp;$/;"	kind:member	struct:rcu_noqs::__anon32	access:public
exp_deferred_qs	rcu/tree.h	/^	bool		exp_deferred_qs; \/* This CPU awaiting a deferred QS? *\/$/;"	kind:member	struct:rcu_data	access:public
exp_dynticks_snap	rcu/tree.h	/^	int exp_dynticks_snap;		\/* Double-check need for IPI. *\/$/;"	kind:member	struct:rcu_data	access:public
exp_funnel_lock	rcu/tree_exp.h	/^static bool exp_funnel_lock(unsigned long s)$/;"	kind:function	signature:(unsigned long s)
exp_mutex	rcu/tree.h	/^	struct mutex exp_mutex;			\/* Serialize expedited GP. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::mutex	access:public
exp_need_flush	rcu/tree.h	/^	bool exp_need_flush;	\/* Need to flush workitem? *\/$/;"	kind:member	struct:rcu_node	access:public
exp_seq_rq	rcu/tree.h	/^	unsigned long exp_seq_rq;$/;"	kind:member	struct:rcu_node	access:public
exp_tasks	rcu/tree.h	/^	struct list_head *exp_tasks;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::list_head	access:public
exp_wake_mutex	rcu/tree.h	/^	struct mutex exp_wake_mutex;		\/* Serialize wakeup. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::mutex	access:public
exp_wq	rcu/tree.h	/^	wait_queue_head_t exp_wq[4];$/;"	kind:member	struct:rcu_node	access:public
expedited_need_qs	rcu/tree.h	/^	atomic_t expedited_need_qs;		\/* # CPUs left to check in. *\/$/;"	kind:member	struct:rcu_state	access:public
expedited_sequence	rcu/tree.h	/^	unsigned long expedited_sequence;	\/* Take a ticket. *\/$/;"	kind:member	struct:rcu_state	access:public
expedited_wq	rcu/tree.h	/^	struct swait_queue_head expedited_wq;	\/* Wait for check-ins. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::swait_queue_head	access:public
expmask	rcu/tree.h	/^	unsigned long expmask;	\/* CPUs or groups that need to check in *\/$/;"	kind:member	struct:rcu_node	access:public
expmaskinit	rcu/tree.h	/^	unsigned long expmaskinit;$/;"	kind:member	struct:rcu_node	access:public
expmaskinitnext	rcu/tree.h	/^	unsigned long expmaskinitnext;$/;"	kind:member	struct:rcu_node	access:public
ext	gcov/gcov.h	/^	const char *ext;$/;"	kind:member	struct:gcov_link	access:public
extra_bw	sched/sched.h	/^	u64			extra_bw;$/;"	kind:member	struct:dl_rq	access:public
fE	audit.h	/^		unsigned int	fE;		\/* effective bit of file cap *\/$/;"	kind:member	union:audit_cap_data::__anon3	access:public
fair_policy	sched/sched.h	/^static inline int fair_policy(int policy)$/;"	kind:function	signature:(int policy)
fair_sched_class	sched/sched.h	/^extern const struct sched_class fair_sched_class;$/;"	kind:externvar
fcap	audit.h	/^	struct audit_cap_data	fcap;$/;"	kind:member	struct:audit_names	typeref:struct:audit_names::audit_cap_data	access:public
fcap_ver	audit.h	/^	unsigned int		fcap_ver;$/;"	kind:member	struct:audit_names	access:public
fd	audit.h	/^			int			fd;$/;"	kind:member	struct:audit_context::__anon4::__anon12	access:public
fds	audit.h	/^	int fds[2];$/;"	kind:member	struct:audit_context	access:public
fetch_apply_bitfield	trace/trace_probe_tmpl.h	/^fetch_apply_bitfield(struct fetch_insn *code, void *buf)$/;"	kind:function	signature:(struct fetch_insn *code, void *buf)
fetch_insn	trace/trace_probe.h	/^struct fetch_insn {$/;"	kind:struct
fetch_insn::__anon15::__anon16::offset	trace/trace_probe.h	/^			int offset;$/;"	kind:member	struct:fetch_insn::__anon15::__anon16	access:public
fetch_insn::__anon15::__anon16::size	trace/trace_probe.h	/^			unsigned int size;$/;"	kind:member	struct:fetch_insn::__anon15::__anon16	access:public
fetch_insn::__anon15::__anon17::basesize	trace/trace_probe.h	/^			unsigned char basesize;$/;"	kind:member	struct:fetch_insn::__anon15::__anon17	access:public
fetch_insn::__anon15::__anon17::lshift	trace/trace_probe.h	/^			unsigned char lshift;$/;"	kind:member	struct:fetch_insn::__anon15::__anon17	access:public
fetch_insn::__anon15::__anon17::rshift	trace/trace_probe.h	/^			unsigned char rshift;$/;"	kind:member	struct:fetch_insn::__anon15::__anon17	access:public
fetch_insn::__anon15::data	trace/trace_probe.h	/^		void *data;$/;"	kind:member	union:fetch_insn::__anon15	access:public
fetch_insn::__anon15::immediate	trace/trace_probe.h	/^		unsigned long immediate;$/;"	kind:member	union:fetch_insn::__anon15	access:public
fetch_insn::__anon15::param	trace/trace_probe.h	/^		unsigned int param;$/;"	kind:member	union:fetch_insn::__anon15	access:public
fetch_insn::op	trace/trace_probe.h	/^	enum fetch_op op;$/;"	kind:member	struct:fetch_insn	typeref:enum:fetch_insn::fetch_op	access:public
fetch_op	trace/trace_probe.h	/^enum fetch_op {$/;"	kind:enum
fetch_store_raw	trace/trace_probe_tmpl.h	/^fetch_store_raw(unsigned long val, struct fetch_insn *code, void *buf)$/;"	kind:function	signature:(unsigned long val, struct fetch_insn *code, void *buf)
fetch_store_string	trace/trace_probe_tmpl.h	/^fetch_store_string(unsigned long addr, void *dest, void *base);$/;"	kind:prototype	signature:(unsigned long addr, void *dest, void *base)
fetch_store_string_user	trace/trace_probe_tmpl.h	/^fetch_store_string_user(unsigned long addr, void *dest, void *base);$/;"	kind:prototype	signature:(unsigned long addr, void *dest, void *base)
fetch_store_strlen	trace/trace_probe_tmpl.h	/^static nokprobe_inline int fetch_store_strlen(unsigned long addr);$/;"	kind:prototype	signature:(unsigned long addr)
fetch_store_strlen_user	trace/trace_probe_tmpl.h	/^static nokprobe_inline int fetch_store_strlen_user(unsigned long addr);$/;"	kind:prototype	signature:(unsigned long addr)
fetch_type	trace/trace_probe.h	/^struct fetch_type {$/;"	kind:struct
fetch_type::fmt	trace/trace_probe.h	/^	const char		*fmt;		\/* Fromat string *\/$/;"	kind:member	struct:fetch_type	access:public
fetch_type::fmttype	trace/trace_probe.h	/^	const char		*fmttype;	\/* Name in format file *\/$/;"	kind:member	struct:fetch_type	access:public
fetch_type::is_signed	trace/trace_probe.h	/^	int			is_signed;	\/* Signed flag *\/$/;"	kind:member	struct:fetch_type	access:public
fetch_type::name	trace/trace_probe.h	/^	const char		*name;		\/* Name of type *\/$/;"	kind:member	struct:fetch_type	access:public
fetch_type::print	trace/trace_probe.h	/^	print_type_func_t	print;		\/* Print functions *\/$/;"	kind:member	struct:fetch_type	access:public
fetch_type::size	trace/trace_probe.h	/^	size_t			size;		\/* Byte size of type *\/$/;"	kind:member	struct:fetch_type	access:public
ffmask	rcu/tree.h	/^	unsigned long ffmask;	\/* Fully functional CPUs. *\/$/;"	kind:member	struct:rcu_node	access:public
fgraph_max_depth	trace/trace.h	/^extern unsigned int fgraph_max_depth;$/;"	kind:externvar
field	trace/trace.h	/^	struct ftrace_event_field *field;$/;"	kind:member	struct:filter_pred	typeref:struct:filter_pred::ftrace_event_field	access:public
field_idx	trace/tracing_map.h	/^	unsigned int			field_idx;$/;"	kind:member	struct:tracing_map_sort_key	access:public
field_len	trace/trace.h	/^	int			field_len;$/;"	kind:member	struct:regex	access:public
fields	trace/tracing_map.h	/^	struct tracing_map_field	*fields;$/;"	kind:member	struct:tracing_map_elt	typeref:struct:tracing_map_elt::tracing_map_field	access:public
fields	trace/tracing_map.h	/^	struct tracing_map_field	fields[TRACING_MAP_FIELDS_MAX];$/;"	kind:member	struct:tracing_map	typeref:struct:tracing_map::tracing_map_field	access:public
file	bpf/map_in_map.h	/^struct file;$/;"	kind:externvar
file	trace/trace.h	/^	struct trace_event_file		*file;$/;"	kind:member	struct:enable_trigger_data	typeref:struct:enable_trigger_data::trace_event_file	access:public
file	trace/trace_probe.h	/^	struct trace_event_file		*file;$/;"	kind:member	struct:event_file_link	typeref:struct:event_file_link::trace_event_file	access:public
files	trace/trace_probe.h	/^	struct list_head 		files;$/;"	kind:member	struct:trace_probe_event	typeref:struct:trace_probe_event::list_head	access:public
filter	trace/trace.h	/^	struct event_filter	*filter;$/;"	kind:member	struct:event_subsystem	typeref:struct:event_subsystem::event_filter	access:public
filter	trace/trace.h	/^	struct event_filter __rcu	*filter;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::__rcu	access:public
filter_assign_type	trace/trace.h	/^extern int filter_assign_type(const char *type);$/;"	kind:prototype	signature:(const char *type)
filter_parse_regex	trace/trace.h	/^filter_parse_regex(char *buff, int len, char **search, int *not);$/;"	kind:prototype	signature:(char *buff, int len, char **search, int *not)
filter_pred	trace/trace.h	/^struct filter_pred {$/;"	kind:struct
filter_pred	trace/trace.h	/^struct filter_pred;$/;"	kind:externvar
filter_pred::field	trace/trace.h	/^	struct ftrace_event_field *field;$/;"	kind:member	struct:filter_pred	typeref:struct:filter_pred::ftrace_event_field	access:public
filter_pred::fn	trace/trace.h	/^	filter_pred_fn_t 	fn;$/;"	kind:member	struct:filter_pred	access:public
filter_pred::not	trace/trace.h	/^	int			not;$/;"	kind:member	struct:filter_pred	access:public
filter_pred::offset	trace/trace.h	/^	int 			offset;$/;"	kind:member	struct:filter_pred	access:public
filter_pred::op	trace/trace.h	/^	int 			op;$/;"	kind:member	struct:filter_pred	access:public
filter_pred::ops	trace/trace.h	/^	unsigned short		*ops;$/;"	kind:member	struct:filter_pred	access:public
filter_pred::regex	trace/trace.h	/^	struct regex		regex;$/;"	kind:member	struct:filter_pred	typeref:struct:filter_pred::regex	access:public
filter_pred::val	trace/trace.h	/^	u64 			val;$/;"	kind:member	struct:filter_pred	access:public
filter_pred_fn_t	trace/trace.h	/^typedef int (*filter_pred_fn_t) (struct filter_pred *pred, void *event);$/;"	kind:typedef
filter_str	trace/trace.h	/^	char				*filter_str;$/;"	kind:member	struct:event_trigger_data	access:public
filter_string	trace/trace.h	/^	char			*filter_string;$/;"	kind:member	struct:event_filter	access:public
filter_type	trace/trace.h	/^	int			filter_type;$/;"	kind:member	struct:ftrace_event_field	access:public
filtered_pids	trace/trace.h	/^	struct trace_pid_list	__rcu *filtered_pids;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::__rcu	access:public
filterkey	audit.h	/^	char		    *filterkey;	\/* key for rule that triggered record *\/$/;"	kind:member	struct:audit_context	access:public
find_event_file	trace/trace.h	/^extern struct trace_event_file *find_event_file(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, const char *system, const char *event)
find_named_trigger	trace/trace.h	/^extern struct event_trigger_data *find_named_trigger(const char *name);$/;"	kind:prototype	signature:(const char *name)
find_numa_distance	sched/sched.h	/^extern bool find_numa_distance(int distance);$/;"	kind:prototype	signature:(int distance)
first	bpf/percpu_freelist.h	/^	struct pcpu_freelist_node *first;$/;"	kind:member	struct:pcpu_freelist_head	typeref:struct:pcpu_freelist_head::pcpu_freelist_node	access:public
first_trees	audit.h	/^	struct audit_tree_refs *trees, *first_trees;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::	access:public
flag_changed	trace/trace.h	/^	int			(*flag_changed)(struct trace_array *tr,$/;"	kind:member	struct:tracer	access:public
flags	audit.h	/^			int			flags;$/;"	kind:member	struct:audit_context::__anon4::__anon12	access:public
flags	cgroup/cgroup-internal.h	/^	unsigned int	flags;			\/* CGRP_ROOT_* flags *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
flags	sched/sched.h	/^	unsigned long flags;$/;"	kind:member	struct:rq_flags	access:public
flags	trace/trace.h	/^	int			flags;$/;"	kind:member	struct:event_command	access:public
flags	trace/trace.h	/^	struct tracer_flags		*flags;$/;"	kind:member	struct:trace_option_dentry	typeref:struct:trace_option_dentry::tracer_flags	access:public
flags	trace/trace.h	/^	struct tracer_flags	*flags;$/;"	kind:member	struct:tracer	typeref:struct:tracer::tracer_flags	access:public
flags	trace/trace.h	/^	unsigned int		flags;$/;"	kind:member	struct:trace_array	access:public
flags	trace/trace.h	/^	unsigned long		flags;$/;"	kind:member	struct:ftrace_hash	access:public
flags	trace/trace_probe.h	/^	unsigned int			flags;	\/* For TP_FLAG_* *\/$/;"	kind:member	struct:trace_probe_event	access:public
flags	workqueue_internal.h	/^	unsigned int		flags;		\/* X: flags *\/$/;"	kind:member	struct:worker	access:public
fmt	trace/trace_probe.h	/^	char			*fmt;	\/* Format string if needed *\/$/;"	kind:member	struct:probe_arg	access:public
fmt	trace/trace_probe.h	/^	const char		*fmt;		\/* Fromat string *\/$/;"	kind:member	struct:fetch_type	access:public
fmttype	trace/trace_probe.h	/^	const char		*fmttype;	\/* Name in format file *\/$/;"	kind:member	struct:fetch_type	access:public
fn	trace/trace.h	/^	filter_pred_fn_t 	fn;$/;"	kind:member	struct:filter_pred	access:public
fops	livepatch/patch.h	/^	struct ftrace_ops fops;$/;"	kind:member	struct:klp_ops	typeref:struct:klp_ops::ftrace_ops	access:public
for_class_range	sched/sched.h	1792;"	kind:macro
for_each_action_of_desc	irq/internals.h	163;"	kind:macro
for_each_class	sched/sched.h	1795;"	kind:macro
for_each_domain	sched/sched.h	1336;"	kind:macro
for_each_dyn_event	trace/trace_dynevent.h	109;"	kind:macro
for_each_dyn_event_safe	trace/trace_dynevent.h	117;"	kind:macro
for_each_hash_entry	locking/qspinlock_paravirt.h	207;"	kind:macro
for_each_leaf_node_cpu_mask	rcu/rcu.h	362;"	kind:macro
for_each_leaf_node_possible_cpu	rcu/rcu.h	352;"	kind:macro
for_each_lower_domain	sched/sched.h	1340;"	kind:macro
for_each_root	cgroup/cgroup-internal.h	156;"	kind:macro
for_each_subsys	cgroup/cgroup-internal.h	164;"	kind:macro
for_each_tracing_cpu	trace/trace.h	756;"	kind:macro
free	trace/trace.h	/^	void			(*free)(struct event_trigger_ops *ops,$/;"	kind:member	struct:event_trigger_ops	access:public
free	trace/trace.h	/^	void			(*free)(struct ftrace_probe_ops *ops,$/;"	kind:member	struct:ftrace_probe_ops	access:public
free	trace/trace_dynevent.h	/^	int (*free)(struct dyn_event *ev);$/;"	kind:member	struct:dyn_event_operations	access:public
free_all_swap_pages	power/power.h	/^extern void free_all_swap_pages(int swap);$/;"	kind:prototype	signature:(int swap)
free_aux	events/internal.h	/^	void				(*free_aux)(void *);$/;"	kind:member	struct:ring_buffer	access:public
free_basic_memory_bitmaps	power/power.h	/^extern void free_basic_memory_bitmaps(void);$/;"	kind:prototype	signature:(void)
free_cpus	sched/cpudeadline.h	/^	cpumask_var_t		free_cpus;$/;"	kind:member	struct:cpudl	access:public
free_event_filter	trace/trace.h	/^extern void free_event_filter(struct event_filter *filter);$/;"	kind:prototype	signature:(struct event_filter *filter)
free_fair_sched_group	sched/sched.h	/^extern void free_fair_sched_group(struct task_group *tg);$/;"	kind:prototype	signature:(struct task_group *tg)
free_ftrace_func_mapper	trace/trace.h	/^void free_ftrace_func_mapper(struct ftrace_func_mapper *mapper,$/;"	kind:prototype	signature:(struct ftrace_func_mapper *mapper, ftrace_mapper_func free_func)
free_rt_sched_group	sched/sched.h	/^extern void free_rt_sched_group(struct task_group *tg);$/;"	kind:prototype	signature:(struct task_group *tg)
freelist	bpf/percpu_freelist.h	/^	struct pcpu_freelist_head __percpu *freelist;$/;"	kind:member	struct:pcpu_freelist	typeref:struct:pcpu_freelist::__percpu	access:public
freezer_test_done	power/power.h	/^extern bool freezer_test_done;$/;"	kind:externvar
fsgid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	kind:member	struct:audit_context	access:public
fsuid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	kind:member	struct:audit_context	access:public
ftrace_clear_pids	trace/trace.h	/^static inline void ftrace_clear_pids(struct trace_array *tr) { }$/;"	kind:function	signature:(struct trace_array *tr)
ftrace_clear_pids	trace/trace.h	/^void ftrace_clear_pids(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
ftrace_create_filter_files	trace/trace.h	/^void ftrace_create_filter_files(struct ftrace_ops *ops,$/;"	kind:prototype	signature:(struct ftrace_ops *ops, struct dentry *parent)
ftrace_create_filter_files	trace/trace.h	1149;"	kind:macro
ftrace_create_function_files	trace/trace.h	/^ftrace_create_function_files(struct trace_array *tr,$/;"	kind:function	signature:(struct trace_array *tr, struct dentry *parent)
ftrace_create_function_files	trace/trace.h	/^int ftrace_create_function_files(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, struct dentry *parent)
ftrace_destroy_filter_files	trace/trace.h	/^void ftrace_destroy_filter_files(struct ftrace_ops *ops);$/;"	kind:prototype	signature:(struct ftrace_ops *ops)
ftrace_destroy_filter_files	trace/trace.h	1150;"	kind:macro
ftrace_destroy_function_files	trace/trace.h	/^static inline void ftrace_destroy_function_files(struct trace_array *tr) { }$/;"	kind:function	signature:(struct trace_array *tr)
ftrace_destroy_function_files	trace/trace.h	/^void ftrace_destroy_function_files(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
ftrace_event_field	trace/trace.h	/^struct ftrace_event_field {$/;"	kind:struct
ftrace_event_field::filter_type	trace/trace.h	/^	int			filter_type;$/;"	kind:member	struct:ftrace_event_field	access:public
ftrace_event_field::is_signed	trace/trace.h	/^	int			is_signed;$/;"	kind:member	struct:ftrace_event_field	access:public
ftrace_event_field::link	trace/trace.h	/^	struct list_head	link;$/;"	kind:member	struct:ftrace_event_field	typeref:struct:ftrace_event_field::list_head	access:public
ftrace_event_field::name	trace/trace.h	/^	const char		*name;$/;"	kind:member	struct:ftrace_event_field	access:public
ftrace_event_field::offset	trace/trace.h	/^	int			offset;$/;"	kind:member	struct:ftrace_event_field	access:public
ftrace_event_field::size	trace/trace.h	/^	int			size;$/;"	kind:member	struct:ftrace_event_field	access:public
ftrace_event_field::type	trace/trace.h	/^	const char		*type;$/;"	kind:member	struct:ftrace_event_field	access:public
ftrace_event_is_function	trace/trace.h	/^bool ftrace_event_is_function(struct trace_event_call *call);$/;"	kind:prototype	signature:(struct trace_event_call *call)
ftrace_events	trace/trace.h	/^extern struct list_head ftrace_events;$/;"	kind:externvar
ftrace_find_event	trace/trace_output.h	/^extern struct trace_event *ftrace_find_event(int type);$/;"	kind:prototype	signature:(int type)
ftrace_func_command	trace/trace.h	/^struct ftrace_func_command {$/;"	kind:struct
ftrace_func_command	trace/trace.h	/^struct ftrace_func_command;$/;"	kind:externvar
ftrace_func_command::func	trace/trace.h	/^	int			(*func)(struct trace_array *tr,$/;"	kind:member	struct:ftrace_func_command	access:public
ftrace_func_command::list	trace/trace.h	/^	struct list_head	list;$/;"	kind:member	struct:ftrace_func_command	typeref:struct:ftrace_func_command::list_head	access:public
ftrace_func_command::name	trace/trace.h	/^	char			*name;$/;"	kind:member	struct:ftrace_func_command	access:public
ftrace_func_mapper	trace/trace.h	/^struct ftrace_func_mapper;$/;"	kind:externvar
ftrace_func_mapper_add_ip	trace/trace.h	/^int ftrace_func_mapper_add_ip(struct ftrace_func_mapper *mapper,$/;"	kind:prototype	signature:(struct ftrace_func_mapper *mapper, unsigned long ip, void *data)
ftrace_func_mapper_find_ip	trace/trace.h	/^void **ftrace_func_mapper_find_ip(struct ftrace_func_mapper *mapper,$/;"	kind:prototype	signature:(struct ftrace_func_mapper *mapper, unsigned long ip)
ftrace_func_mapper_remove_ip	trace/trace.h	/^void *ftrace_func_mapper_remove_ip(struct ftrace_func_mapper *mapper,$/;"	kind:prototype	signature:(struct ftrace_func_mapper *mapper, unsigned long ip)
ftrace_graph_active	trace/ftrace_internal.h	/^extern int ftrace_graph_active;$/;"	kind:externvar
ftrace_graph_active	trace/ftrace_internal.h	68;"	kind:macro
ftrace_graph_addr	trace/trace.h	/^static inline int ftrace_graph_addr(struct ftrace_graph_ent *trace)$/;"	kind:function	signature:(struct ftrace_graph_ent *trace)
ftrace_graph_addr_finish	trace/trace.h	/^static inline void ftrace_graph_addr_finish(struct ftrace_graph_ret *trace)$/;"	kind:function	signature:(struct ftrace_graph_ret *trace)
ftrace_graph_graph_time_control	trace/trace.h	/^extern void ftrace_graph_graph_time_control(bool enable);$/;"	kind:prototype	signature:(bool enable)
ftrace_graph_graph_time_control	trace/trace.h	/^static inline void ftrace_graph_graph_time_control(bool enable) { }$/;"	kind:function	signature:(bool enable)
ftrace_graph_hash	trace/trace.h	/^extern struct ftrace_hash *ftrace_graph_hash;$/;"	kind:externvar
ftrace_graph_ignore_func	trace/trace.h	/^static inline bool ftrace_graph_ignore_func(struct ftrace_graph_ent *trace)$/;"	kind:function	signature:(struct ftrace_graph_ent *trace)
ftrace_graph_notrace_addr	trace/trace.h	/^static inline int ftrace_graph_notrace_addr(unsigned long addr)$/;"	kind:function	signature:(unsigned long addr)
ftrace_graph_notrace_hash	trace/trace.h	/^extern struct ftrace_hash *ftrace_graph_notrace_hash;$/;"	kind:externvar
ftrace_graph_sleep_time_control	trace/trace.h	/^extern void ftrace_graph_sleep_time_control(bool enable);$/;"	kind:prototype	signature:(bool enable)
ftrace_hash	trace/trace.h	/^struct ftrace_hash {$/;"	kind:struct
ftrace_hash	trace/trace.h	/^struct ftrace_hash;$/;"	kind:externvar
ftrace_hash::buckets	trace/trace.h	/^	struct hlist_head	*buckets;$/;"	kind:member	struct:ftrace_hash	typeref:struct:ftrace_hash::hlist_head	access:public
ftrace_hash::count	trace/trace.h	/^	unsigned long		count;$/;"	kind:member	struct:ftrace_hash	access:public
ftrace_hash::flags	trace/trace.h	/^	unsigned long		flags;$/;"	kind:member	struct:ftrace_hash	access:public
ftrace_hash::rcu	trace/trace.h	/^	struct rcu_head		rcu;$/;"	kind:member	struct:ftrace_hash	typeref:struct:ftrace_hash::rcu_head	access:public
ftrace_hash::size_bits	trace/trace.h	/^	unsigned long		size_bits;$/;"	kind:member	struct:ftrace_hash	access:public
ftrace_hash_empty	trace/trace.h	/^static __always_inline bool ftrace_hash_empty(struct ftrace_hash *hash)$/;"	kind:function	signature:(struct ftrace_hash *hash)
ftrace_ignore_pid	trace/trace.h	/^	bool			ftrace_ignore_pid;$/;"	kind:member	struct:trace_array_cpu	access:public
ftrace_init_array_ops	trace/trace.h	/^void ftrace_init_array_ops(struct trace_array *tr, ftrace_func_t func);$/;"	kind:prototype	signature:(struct trace_array *tr, ftrace_func_t func)
ftrace_init_array_ops	trace/trace.h	1079;"	kind:macro
ftrace_init_global_array_ops	trace/trace.h	/^ftrace_init_global_array_ops(struct trace_array *tr) { }$/;"	kind:function	signature:(struct trace_array *tr)
ftrace_init_global_array_ops	trace/trace.h	/^void ftrace_init_global_array_ops(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
ftrace_init_trace_array	trace/trace.h	/^static inline void ftrace_init_trace_array(struct trace_array *tr) { }$/;"	kind:function	signature:(struct trace_array *tr)
ftrace_init_trace_array	trace/trace.h	/^void ftrace_init_trace_array(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
ftrace_init_tracefs	trace/trace.h	/^static inline void ftrace_init_tracefs(struct trace_array *tr, struct dentry *d) { }$/;"	kind:function	signature:(struct trace_array *tr, struct dentry *d)
ftrace_init_tracefs	trace/trace.h	/^void ftrace_init_tracefs(struct trace_array *tr, struct dentry *d_tracer);$/;"	kind:prototype	signature:(struct trace_array *tr, struct dentry *d_tracer)
ftrace_init_tracefs_toplevel	trace/trace.h	/^static inline void ftrace_init_tracefs_toplevel(struct trace_array *tr, struct dentry *d) { }$/;"	kind:function	signature:(struct trace_array *tr, struct dentry *d)
ftrace_init_tracefs_toplevel	trace/trace.h	/^void ftrace_init_tracefs_toplevel(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, struct dentry *d_tracer)
ftrace_is_dead	trace/trace.h	/^extern int ftrace_is_dead(void);$/;"	kind:prototype	signature:(void)
ftrace_is_dead	trace/trace.h	/^static inline int ftrace_is_dead(void) { return 0; }$/;"	kind:function	signature:(void)
ftrace_list_end	trace/ftrace_internal.h	/^extern struct ftrace_ops ftrace_list_end;$/;"	kind:externvar
ftrace_lock	trace/ftrace_internal.h	/^extern struct mutex ftrace_lock;$/;"	kind:externvar
ftrace_lookup_ip	trace/trace.h	/^ftrace_lookup_ip(struct ftrace_hash *hash, unsigned long ip);$/;"	kind:prototype	signature:(struct ftrace_hash *hash, unsigned long ip)
ftrace_mapper_func	trace/trace.h	/^typedef int (*ftrace_mapper_func)(void *data);$/;"	kind:typedef
ftrace_mod_load	trace/trace.h	/^struct ftrace_mod_load {$/;"	kind:struct
ftrace_mod_load::enable	trace/trace.h	/^	int			 enable;$/;"	kind:member	struct:ftrace_mod_load	access:public
ftrace_mod_load::func	trace/trace.h	/^	char			*func;$/;"	kind:member	struct:ftrace_mod_load	access:public
ftrace_mod_load::list	trace/trace.h	/^	struct list_head	list;$/;"	kind:member	struct:ftrace_mod_load	typeref:struct:ftrace_mod_load::list_head	access:public
ftrace_mod_load::module	trace/trace.h	/^	char			*module;$/;"	kind:member	struct:ftrace_mod_load	access:public
ftrace_now	trace/trace.h	/^extern u64 ftrace_now(int cpu);$/;"	kind:prototype	signature:(int cpu)
ftrace_ops_list	trace/ftrace_internal.h	/^extern struct ftrace_ops __rcu *ftrace_ops_list;$/;"	kind:externvar
ftrace_ops_test	trace/ftrace_internal.h	/^ftrace_ops_test(struct ftrace_ops *ops, unsigned long ip, void *regs)$/;"	kind:function	signature:(struct ftrace_ops *ops, unsigned long ip, void *regs)
ftrace_ops_test	trace/ftrace_internal.h	/^int ftrace_ops_test(struct ftrace_ops *ops, unsigned long ip, void *regs);$/;"	kind:prototype	signature:(struct ftrace_ops *ops, unsigned long ip, void *regs)
ftrace_pid_follow_fork	trace/trace.h	/^static inline void ftrace_pid_follow_fork(struct trace_array *tr, bool enable) { }$/;"	kind:function	signature:(struct trace_array *tr, bool enable)
ftrace_pid_follow_fork	trace/trace.h	/^void ftrace_pid_follow_fork(struct trace_array *tr, bool enable);$/;"	kind:prototype	signature:(struct trace_array *tr, bool enable)
ftrace_pids	trace/trace.h	/^extern struct list_head ftrace_pids;$/;"	kind:externvar
ftrace_probe_ops	trace/trace.h	/^struct ftrace_probe_ops {$/;"	kind:struct
ftrace_probe_ops::free	trace/trace.h	/^	void			(*free)(struct ftrace_probe_ops *ops,$/;"	kind:member	struct:ftrace_probe_ops	access:public
ftrace_probe_ops::func	trace/trace.h	/^	void			(*func)(unsigned long ip,$/;"	kind:member	struct:ftrace_probe_ops	access:public
ftrace_probe_ops::init	trace/trace.h	/^	int			(*init)(struct ftrace_probe_ops *ops,$/;"	kind:member	struct:ftrace_probe_ops	access:public
ftrace_probe_ops::print	trace/trace.h	/^	int			(*print)(struct seq_file *m,$/;"	kind:member	struct:ftrace_probe_ops	access:public
ftrace_reset_array_ops	trace/trace.h	/^static inline void ftrace_reset_array_ops(struct trace_array *tr) { }$/;"	kind:function	signature:(struct trace_array *tr)
ftrace_reset_array_ops	trace/trace.h	/^void ftrace_reset_array_ops(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
ftrace_shutdown	trace/ftrace_internal.h	/^int ftrace_shutdown(struct ftrace_ops *ops, int command);$/;"	kind:prototype	signature:(struct ftrace_ops *ops, int command)
ftrace_shutdown	trace/ftrace_internal.h	50;"	kind:macro
ftrace_startup	trace/ftrace_internal.h	/^int ftrace_startup(struct ftrace_ops *ops, int command);$/;"	kind:prototype	signature:(struct ftrace_ops *ops, int command)
ftrace_startup	trace/ftrace_internal.h	43;"	kind:macro
ftrace_trace_arrays	trace/trace.h	/^extern struct list_head ftrace_trace_arrays;$/;"	kind:externvar
ftrace_trace_task	trace/trace.h	/^static inline int ftrace_trace_task(struct trace_array *tr)$/;"	kind:function	signature:(struct trace_array *tr)
ftrace_update_tot_cnt	trace/trace.h	/^extern unsigned long ftrace_update_tot_cnt;$/;"	kind:externvar
func	trace/trace.h	/^	char			*func;$/;"	kind:member	struct:ftrace_mod_load	access:public
func	trace/trace.h	/^	int			(*func)(struct event_command *cmd_ops,$/;"	kind:member	struct:event_command	access:public
func	trace/trace.h	/^	int			(*func)(struct trace_array *tr,$/;"	kind:member	struct:ftrace_func_command	access:public
func	trace/trace.h	/^	unsigned long		func;$/;"	kind:member	struct:kretprobe_trace_entry_head	access:public
func	trace/trace.h	/^	void			(*func)(struct event_trigger_data *data,$/;"	kind:member	struct:event_trigger_ops	access:public
func	trace/trace.h	/^	void			(*func)(unsigned long ip,$/;"	kind:member	struct:ftrace_probe_ops	access:public
func_id_name	bpf/disasm.h	/^const char *func_id_name(int id);$/;"	kind:prototype	signature:(int id)
func_probes	trace/trace.h	/^	struct list_head	func_probes;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
func_stack	livepatch/patch.h	/^	struct list_head func_stack;$/;"	kind:member	struct:klp_ops	typeref:struct:klp_ops::list_head	access:public
function_enabled	trace/trace.h	/^	int			function_enabled;$/;"	kind:member	struct:trace_array	access:public
function_pids	trace/trace.h	/^	struct trace_pid_list	__rcu *function_pids;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::__rcu	access:public
gcov_action	gcov/gcov.h	/^enum gcov_action {$/;"	kind:enum
gcov_enable_events	gcov/gcov.h	/^void gcov_enable_events(void);$/;"	kind:prototype	signature:(void)
gcov_event	gcov/gcov.h	/^void gcov_event(enum gcov_action action, struct gcov_info *info);$/;"	kind:prototype	signature:(enum gcov_action action, struct gcov_info *info)
gcov_events_enabled	gcov/gcov.h	/^extern int gcov_events_enabled;$/;"	kind:externvar
gcov_info	gcov/gcov.h	/^struct gcov_info;$/;"	kind:externvar
gcov_info_add	gcov/gcov.h	/^void gcov_info_add(struct gcov_info *dest, struct gcov_info *source);$/;"	kind:prototype	signature:(struct gcov_info *dest, struct gcov_info *source)
gcov_info_dup	gcov/gcov.h	/^struct gcov_info *gcov_info_dup(struct gcov_info *info);$/;"	kind:prototype	signature:(struct gcov_info *info)
gcov_info_filename	gcov/gcov.h	/^const char *gcov_info_filename(struct gcov_info *info);$/;"	kind:prototype	signature:(struct gcov_info *info)
gcov_info_free	gcov/gcov.h	/^void gcov_info_free(struct gcov_info *info);$/;"	kind:prototype	signature:(struct gcov_info *info)
gcov_info_is_compatible	gcov/gcov.h	/^int gcov_info_is_compatible(struct gcov_info *info1, struct gcov_info *info2);$/;"	kind:prototype	signature:(struct gcov_info *info1, struct gcov_info *info2)
gcov_info_link	gcov/gcov.h	/^void gcov_info_link(struct gcov_info *info);$/;"	kind:prototype	signature:(struct gcov_info *info)
gcov_info_next	gcov/gcov.h	/^struct gcov_info *gcov_info_next(struct gcov_info *info);$/;"	kind:prototype	signature:(struct gcov_info *info)
gcov_info_reset	gcov/gcov.h	/^void gcov_info_reset(struct gcov_info *info);$/;"	kind:prototype	signature:(struct gcov_info *info)
gcov_info_unlink	gcov/gcov.h	/^void gcov_info_unlink(struct gcov_info *prev, struct gcov_info *info);$/;"	kind:prototype	signature:(struct gcov_info *prev, struct gcov_info *info)
gcov_info_version	gcov/gcov.h	/^unsigned int gcov_info_version(struct gcov_info *info);$/;"	kind:prototype	signature:(struct gcov_info *info)
gcov_info_within_module	gcov/gcov.h	/^bool gcov_info_within_module(struct gcov_info *info, struct module *mod);$/;"	kind:prototype	signature:(struct gcov_info *info, struct module *mod)
gcov_iter_free	gcov/gcov.h	/^void gcov_iter_free(struct gcov_iterator *iter);$/;"	kind:prototype	signature:(struct gcov_iterator *iter)
gcov_iter_get_info	gcov/gcov.h	/^struct gcov_info *gcov_iter_get_info(struct gcov_iterator *iter);$/;"	kind:prototype	signature:(struct gcov_iterator *iter)
gcov_iter_new	gcov/gcov.h	/^struct gcov_iterator *gcov_iter_new(struct gcov_info *info);$/;"	kind:prototype	signature:(struct gcov_info *info)
gcov_iter_next	gcov/gcov.h	/^int gcov_iter_next(struct gcov_iterator *iter);$/;"	kind:prototype	signature:(struct gcov_iterator *iter)
gcov_iter_start	gcov/gcov.h	/^void gcov_iter_start(struct gcov_iterator *iter);$/;"	kind:prototype	signature:(struct gcov_iterator *iter)
gcov_iter_write	gcov/gcov.h	/^int gcov_iter_write(struct gcov_iterator *iter, struct seq_file *seq);$/;"	kind:prototype	signature:(struct gcov_iterator *iter, struct seq_file *seq)
gcov_iterator	gcov/gcov.h	/^struct gcov_iterator;$/;"	kind:externvar
gcov_link	gcov/gcov.h	/^extern const struct gcov_link gcov_link[];$/;"	kind:externvar
gcov_link	gcov/gcov.h	/^struct gcov_link {$/;"	kind:struct
gcov_link::OBJ_TREE	gcov/gcov.h	/^		OBJ_TREE,$/;"	kind:enumerator	enum:gcov_link::__anon1
gcov_link::SRC_TREE	gcov/gcov.h	/^		SRC_TREE,$/;"	kind:enumerator	enum:gcov_link::__anon1
gcov_link::dir	gcov/gcov.h	/^	} dir;$/;"	kind:member	struct:gcov_link	typeref:enum:gcov_link::__anon1	access:public
gcov_link::ext	gcov/gcov.h	/^	const char *ext;$/;"	kind:member	struct:gcov_link	access:public
gcov_lock	gcov/gcov.h	/^extern struct mutex gcov_lock;$/;"	kind:externvar
gcov_type	gcov/gcov.h	/^typedef long gcov_type;$/;"	kind:typedef
gcov_type	gcov/gcov.h	/^typedef long long gcov_type;$/;"	kind:typedef
gdb_serial_stub	debug/debug_core.h	/^extern int gdb_serial_stub(struct kgdb_state *ks);$/;"	kind:prototype	signature:(struct kgdb_state *ks)
gdbstub_msg_write	debug/debug_core.h	/^extern void gdbstub_msg_write(const char *s, int len);$/;"	kind:prototype	signature:(const char *s, int len)
gdbstub_state	debug/debug_core.h	/^extern int gdbstub_state(struct kgdb_state *ks, char *cmd);$/;"	kind:prototype	signature:(struct kgdb_state *ks, char *cmd)
get_css_set	cgroup/cgroup-internal.h	/^static inline void get_css_set(struct css_set *cset)$/;"	kind:function	signature:(struct css_set *cset)
get_loc_data	trace/trace_probe.h	/^static nokprobe_inline void *get_loc_data(u32 *dl, void *ent)$/;"	kind:function	signature:(u32 *dl, void *ent)
get_loc_len	trace/trace_probe.h	62;"	kind:macro
get_loc_offs	trace/trace_probe.h	63;"	kind:macro
get_named_trigger_data	trace/trace.h	/^get_named_trigger_data(struct event_trigger_data *data);$/;"	kind:prototype	signature:(struct event_trigger_data *data)
get_next_timer_interrupt	time/tick-internal.h	/^extern u64 get_next_timer_interrupt(unsigned long basej, u64 basem);$/;"	kind:prototype	signature:(unsigned long basej, u64 basem)
get_recursion_context	events/internal.h	/^static inline int get_recursion_context(int *recursion)$/;"	kind:function	signature:(int *recursion)
get_rr_interval	sched/sched.h	/^	unsigned int (*get_rr_interval)(struct rq *rq,$/;"	kind:member	struct:sched_class	access:public
get_syscall_name	trace/trace.h	/^const char *get_syscall_name(int syscall);$/;"	kind:prototype	signature:(int syscall)
get_syscall_name	trace/trace.h	/^static inline const char *get_syscall_name(int syscall)$/;"	kind:function	signature:(int syscall)
get_trigger_ops	trace/trace.h	/^	struct event_trigger_ops *(*get_trigger_ops)(char *cmd, char *param);$/;"	kind:member	struct:event_command	typeref:struct:event_command::get_trigger_ops	access:public
get_usage_chars	locking/lockdep_internals.h	/^extern void get_usage_chars(struct lock_class *class,$/;"	kind:prototype	signature:(struct lock_class *class, char usage[LOCK_USAGE_CHARS])
gid	audit.h	/^			kgid_t			gid;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
gid	audit.h	/^	kgid_t			gid;$/;"	kind:member	struct:audit_names	access:public
gid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	kind:member	struct:audit_context	access:public
global_ops	trace/ftrace_internal.h	/^extern struct ftrace_ops global_ops;$/;"	kind:externvar
global_rt_period	sched/sched.h	/^static inline u64 global_rt_period(void)$/;"	kind:function	signature:(void)
global_rt_runtime	sched/sched.h	/^static inline u64 global_rt_runtime(void)$/;"	kind:function	signature:(void)
got_idle_tick	time/tick-sched.h	/^	unsigned int			got_idle_tick	: 1;$/;"	kind:member	struct:tick_sched	access:public
gp_activity	rcu/tree.h	/^	unsigned long gp_activity;		\/* Time of last GP kthread *\/$/;"	kind:member	struct:rcu_state	access:public
gp_end	rcu/tree.h	/^	unsigned long gp_end;			\/* Time last GP ended, again *\/$/;"	kind:member	struct:rcu_state	access:public
gp_flags	rcu/tree.h	/^	short gp_flags;				\/* Commands for GP task. *\/$/;"	kind:member	struct:rcu_state	access:public
gp_kthread	rcu/tree.h	/^	struct task_struct *gp_kthread;		\/* Task for grace periods. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::task_struct	access:public
gp_max	rcu/tree.h	/^	unsigned long gp_max;			\/* Maximum GP duration in *\/$/;"	kind:member	struct:rcu_state	access:public
gp_req_activity	rcu/tree.h	/^	unsigned long gp_req_activity;		\/* Time of last GP request *\/$/;"	kind:member	struct:rcu_state	access:public
gp_seq	rcu/tree.h	/^	unsigned long	gp_seq;		\/* Track rsp->rcu_gp_seq counter. *\/$/;"	kind:member	struct:rcu_data	access:public
gp_seq	rcu/tree.h	/^	unsigned long gp_seq;			\/* Grace-period sequence #. *\/$/;"	kind:member	struct:rcu_state	access:public
gp_seq	rcu/tree.h	/^	unsigned long gp_seq;	\/* Track rsp->rcu_gp_seq. *\/$/;"	kind:member	struct:rcu_node	access:public
gp_seq_needed	rcu/tree.h	/^	unsigned long	gp_seq_needed;	\/* Track furthest future GP request. *\/$/;"	kind:member	struct:rcu_data	access:public
gp_seq_needed	rcu/tree.h	/^	unsigned long gp_seq_needed; \/* Track furthest future GP request. *\/$/;"	kind:member	struct:rcu_node	access:public
gp_start	rcu/tree.h	/^	unsigned long gp_start;			\/* Time at which GP started, *\/$/;"	kind:member	struct:rcu_state	access:public
gp_state	rcu/tree.h	/^	short gp_state;				\/* GP kthread sleep state. *\/$/;"	kind:member	struct:rcu_state	access:public
gp_state_names	rcu/tree.h	/^static const char * const gp_state_names[] = {$/;"	kind:variable
gp_tasks	rcu/tree.h	/^	struct list_head *gp_tasks;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::list_head	access:public
gp_wake_seq	rcu/tree.h	/^	unsigned long gp_wake_seq;		\/* ->gp_seq at ^^^. *\/$/;"	kind:member	struct:rcu_state	access:public
gp_wake_time	rcu/tree.h	/^	unsigned long gp_wake_time;		\/* Last GP kthread wake. *\/$/;"	kind:member	struct:rcu_state	access:public
gp_wq	rcu/tree.h	/^	struct swait_queue_head gp_wq;		\/* Where GP task waits. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::swait_queue_head	access:public
gpwrap	rcu/tree.h	/^	bool		gpwrap;		\/* Possible ->gp_seq wrap. *\/$/;"	kind:member	struct:rcu_data	access:public
graph_trace_close	trace/trace.h	/^extern void graph_trace_close(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
graph_trace_open	trace/trace.h	/^extern void graph_trace_open(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
group_balance_cpu	sched/sched.h	/^extern int group_balance_cpu(struct sched_group *sg);$/;"	kind:prototype	signature:(struct sched_group *sg)
group_balance_mask	sched/sched.h	/^static inline struct cpumask *group_balance_mask(struct sched_group *sg)$/;"	kind:function	signature:(struct sched_group *sg)
group_first_cpu	sched/sched.h	/^static inline unsigned int group_first_cpu(struct sched_group *group)$/;"	kind:function	signature:(struct sched_group *group)
group_weight	sched/sched.h	/^	unsigned int		group_weight;$/;"	kind:member	struct:sched_group	access:public
grphi	rcu/tree.h	/^	int	grphi;		\/* highest-numbered CPU or group here. *\/$/;"	kind:member	struct:rcu_node	access:public
grplo	rcu/tree.h	/^	int	grplo;		\/* lowest-numbered CPU or group here. *\/$/;"	kind:member	struct:rcu_node	access:public
grpmask	rcu/tree.h	/^	unsigned long grpmask;		\/* Mask to apply to leaf qsmask. *\/$/;"	kind:member	struct:rcu_data	access:public
grpmask	rcu/tree.h	/^	unsigned long grpmask;	\/* Mask to apply to parent qsmask. *\/$/;"	kind:member	struct:rcu_node	access:public
grpnum	rcu/tree.h	/^	u8	grpnum;		\/* CPU\/group number for next level up. *\/$/;"	kind:member	struct:rcu_node	access:public
h_load	sched/sched.h	/^	unsigned long		h_load;$/;"	kind:member	struct:cfs_rq	access:public
h_load_next	sched/sched.h	/^	struct sched_entity	*h_load_next;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity	access:public
h_nr_running	sched/sched.h	/^	unsigned int		h_nr_running;      \/* SCHED_{NORMAL,BATCH,IDLE} *\/$/;"	kind:member	struct:cfs_rq	access:public
handle_irq_event	irq/internals.h	/^irqreturn_t handle_irq_event(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
handle_irq_event_percpu	irq/internals.h	/^irqreturn_t handle_irq_event_percpu(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
hardirqs_off_events	locking/lockdep_internals.h	/^	unsigned long  hardirqs_off_events;$/;"	kind:member	struct:lockdep_stats	access:public
hardirqs_on_events	locking/lockdep_internals.h	/^	unsigned long  hardirqs_on_events;$/;"	kind:member	struct:lockdep_stats	access:public
has_blocked_load	sched/sched.h	/^	unsigned int		has_blocked_load;$/;"	kind:member	struct:rq	access:public
has_perm	audit.h	/^			int			has_perm;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
hash_offset	bpf/bpf_lru_list.h	/^	unsigned int hash_offset;$/;"	kind:member	struct:bpf_lru	access:public
hdr	module-internal.h	/^	Elf_Ehdr *hdr;$/;"	kind:member	struct:load_info	access:public
head	events/internal.h	/^	local_t				head;		\/* write position    *\/$/;"	kind:member	struct:ring_buffer	access:public
head_page	trace/trace.h	/^extern void *head_page(struct trace_array_cpu *data);$/;"	kind:prototype	signature:(struct trace_array_cpu *data)
hentry	workqueue_internal.h	/^		struct hlist_node	hentry;	\/* L: while busy *\/$/;"	kind:member	union:worker::__anon27	typeref:struct:worker::__anon27::hlist_node	access:public
hibernate_image_size_init	power/power.h	/^extern void __init hibernate_image_size_init(void);$/;"	kind:prototype	signature:(void)
hibernate_image_size_init	power/power.h	/^static inline void hibernate_image_size_init(void) {}$/;"	kind:function	signature:(void)
hibernate_preallocate_memory	power/power.h	/^extern int hibernate_preallocate_memory(void);$/;"	kind:prototype	signature:(void)
hibernate_reserved_size_init	power/power.h	/^extern void __init hibernate_reserved_size_init(void);$/;"	kind:prototype	signature:(void)
hibernate_reserved_size_init	power/power.h	/^static inline void hibernate_reserved_size_init(void) {}$/;"	kind:function	signature:(void)
hibernate_resume_nonboot_cpu_disable	power/power.h	/^extern int hibernate_resume_nonboot_cpu_disable(void);$/;"	kind:prototype	signature:(void)
hibernation_platform_enter	power/power.h	/^extern int hibernation_platform_enter(void);$/;"	kind:prototype	signature:(void)
hibernation_restore	power/power.h	/^extern int hibernation_restore(int platform_mode);$/;"	kind:prototype	signature:(int platform_mode)
hibernation_snapshot	power/power.h	/^extern int hibernation_snapshot(int platform_mode);$/;"	kind:prototype	signature:(int platform_mode)
hidden	audit.h	/^	bool			hidden;		\/* don't log this record *\/$/;"	kind:member	struct:audit_names	access:public
hierarchical_quota	sched/sched.h	/^	s64			hierarchical_quota;$/;"	kind:member	struct:cfs_bandwidth	access:public
highest_flag_domain	sched/sched.h	/^static inline struct sched_domain *highest_flag_domain(int cpu, int flag)$/;"	kind:function	signature:(int cpu, int flag)
highest_prio	sched/sched.h	/^	} highest_prio;$/;"	kind:member	struct:rt_rq	typeref:struct:rt_rq::__anon29	access:public
hist	trace/trace.h	/^	bool				hist;$/;"	kind:member	struct:enable_trigger_data	access:public
hist_vars	trace/trace.h	/^	struct list_head	hist_vars;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
hits	trace/tracing_map.h	/^	atomic64_t			hits;$/;"	kind:member	struct:tracing_map	access:public
hrtick_csd	sched/sched.h	/^	call_single_data_t	hrtick_csd;$/;"	kind:member	struct:rq	access:public
hrtick_csd_pending	sched/sched.h	/^	int			hrtick_csd_pending;$/;"	kind:member	struct:rq	access:public
hrtick_enabled	sched/sched.h	/^static inline int hrtick_enabled(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
hrtick_start	sched/sched.h	/^void hrtick_start(struct rq *rq, u64 delay);$/;"	kind:prototype	signature:(struct rq *rq, u64 delay)
hrtick_timer	sched/sched.h	/^	struct hrtimer		hrtick_timer;$/;"	kind:member	struct:rq	typeref:struct:rq::hrtimer	access:public
id	sched/autogroup.h	/^	unsigned long		id;$/;"	kind:member	struct:autogroup	access:public
id	sched/sched.h	/^	int			id;$/;"	kind:member	struct:sched_group_capacity	access:public
id	workqueue_internal.h	/^	int			id;		\/* I: worker id *\/$/;"	kind:member	struct:worker	access:public
idle	sched/sched.h	/^	struct task_struct	*idle;$/;"	kind:member	struct:rq	typeref:struct:rq::task_struct	access:public
idle	sched/sched.h	/^	u8			idle;$/;"	kind:member	struct:cfs_bandwidth	access:public
idle_active	time/tick-sched.h	/^	unsigned int			idle_active	: 1;$/;"	kind:member	struct:tick_sched	access:public
idle_balance	sched/sched.h	/^	unsigned char		idle_balance;$/;"	kind:member	struct:rq	access:public
idle_calls	time/tick-sched.h	/^	unsigned long			idle_calls;$/;"	kind:member	struct:tick_sched	access:public
idle_entrytime	time/tick-sched.h	/^	ktime_t				idle_entrytime;$/;"	kind:member	struct:tick_sched	access:public
idle_exittime	time/tick-sched.h	/^	ktime_t				idle_exittime;$/;"	kind:member	struct:tick_sched	access:public
idle_expires	time/tick-sched.h	/^	ktime_t				idle_expires;$/;"	kind:member	struct:tick_sched	access:public
idle_get_state	sched/sched.h	/^static inline struct cpuidle_state *idle_get_state(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
idle_h_nr_running	sched/sched.h	/^	unsigned int		idle_h_nr_running; \/* SCHED_IDLE *\/$/;"	kind:member	struct:cfs_rq	access:public
idle_jiffies	time/tick-sched.h	/^	unsigned long			idle_jiffies;$/;"	kind:member	struct:tick_sched	access:public
idle_policy	sched/sched.h	/^static inline int idle_policy(int policy)$/;"	kind:function	signature:(int policy)
idle_sched_class	sched/sched.h	/^extern const struct sched_class idle_sched_class;$/;"	kind:externvar
idle_set_state	sched/sched.h	/^static inline void idle_set_state(struct rq *rq,$/;"	kind:function	signature:(struct rq *rq, struct cpuidle_state *idle_state)
idle_sleeps	time/tick-sched.h	/^	unsigned long			idle_sleeps;$/;"	kind:member	struct:tick_sched	access:public
idle_sleeptime	time/tick-sched.h	/^	ktime_t				idle_sleeptime;$/;"	kind:member	struct:tick_sched	access:public
idle_stamp	sched/sched.h	/^	u64			idle_stamp;$/;"	kind:member	struct:rq	access:public
idle_state	sched/sched.h	/^	struct cpuidle_state	*idle_state;$/;"	kind:member	struct:rq	typeref:struct:rq::cpuidle_state	access:public
idle_thread_get	smpboot.h	/^static inline struct task_struct *idle_thread_get(unsigned int cpu) { return NULL; }$/;"	kind:function	signature:(unsigned int cpu)
idle_thread_get	smpboot.h	/^struct task_struct *idle_thread_get(unsigned int cpu);$/;"	kind:prototype	signature:(unsigned int cpu)
idle_thread_set_boot_cpu	smpboot.h	/^static inline void idle_thread_set_boot_cpu(void) { }$/;"	kind:function	signature:(void)
idle_thread_set_boot_cpu	smpboot.h	/^void idle_thread_set_boot_cpu(void);$/;"	kind:prototype	signature:(void)
idle_threads_init	smpboot.h	/^static inline void idle_threads_init(void) { }$/;"	kind:function	signature:(void)
idle_threads_init	smpboot.h	/^void idle_threads_init(void);$/;"	kind:prototype	signature:(void)
idle_waketime	time/tick-sched.h	/^	ktime_t				idle_waketime;$/;"	kind:member	struct:tick_sched	access:public
idx	sched/cpudeadline.h	/^	int			idx;$/;"	kind:member	struct:cpudl_item	access:public
idx	trace/trace.h	/^	unsigned	idx;$/;"	kind:member	struct:trace_parser	access:public
ignore_pid	trace/trace.h	/^	bool			ignore_pid;$/;"	kind:member	struct:trace_array_cpu	access:public
image_pages	power/power.h	/^	unsigned long		image_pages;$/;"	kind:member	struct:swsusp_info	access:public
image_size	power/power.h	/^extern unsigned long image_size;$/;"	kind:externvar
imbalance	sched/sched.h	/^	int			imbalance;		\/* XXX unrelated to capacity but shared group state *\/$/;"	kind:member	struct:sched_group_capacity	access:public
immediate	trace/trace_probe.h	/^		unsigned long immediate;$/;"	kind:member	union:fetch_insn::__anon15	access:public
in_suspend	power/power.h	/^extern int in_suspend;$/;"	kind:externvar
in_syscall	audit.h	/^	int		    in_syscall;	\/* 1 if task is in a syscall *\/$/;"	kind:member	struct:audit_context	access:public
index	module-internal.h	/^	} index;$/;"	kind:member	struct:load_info	typeref:struct:load_info::__anon34	access:public
index	printk/console_cmdline.h	/^	int	index;				\/* Minor dev. to use	    *\/$/;"	kind:member	struct:console_cmdline	access:public
index	trace/trace_probe.h	/^	int		index;$/;"	kind:member	struct:trace_probe_log	access:public
info	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
inheritable	audit.h	/^	kernel_cap_t		inheritable;$/;"	kind:member	struct:audit_cap_data	access:public
inidle	time/tick-sched.h	/^	unsigned int			inidle		: 1;$/;"	kind:member	struct:tick_sched	access:public
init	trace/trace.h	/^	int			(*init)(struct event_trigger_ops *ops,$/;"	kind:member	struct:event_trigger_ops	access:public
init	trace/trace.h	/^	int			(*init)(struct ftrace_probe_ops *ops,$/;"	kind:member	struct:ftrace_probe_ops	access:public
init	trace/trace.h	/^	int			(*init)(struct trace_array *tr);$/;"	kind:member	struct:tracer	access:public
init_cfs_bandwidth	sched/sched.h	/^extern void init_cfs_bandwidth(struct cfs_bandwidth *cfs_b);$/;"	kind:prototype	signature:(struct cfs_bandwidth *cfs_b)
init_cfs_rq	sched/sched.h	/^extern void init_cfs_rq(struct cfs_rq *cfs_rq);$/;"	kind:prototype	signature:(struct cfs_rq *cfs_rq)
init_cgroup_root	cgroup/cgroup-internal.h	/^void init_cgroup_root(struct cgroup_fs_context *ctx);$/;"	kind:prototype	signature:(struct cgroup_fs_context *ctx)
init_defrootdomain	sched/sched.h	/^extern void init_defrootdomain(void);$/;"	kind:prototype	signature:(void)
init_dl_bandwidth	sched/sched.h	/^extern void init_dl_bandwidth(struct dl_bandwidth *dl_b, u64 period, u64 runtime);$/;"	kind:prototype	signature:(struct dl_bandwidth *dl_b, u64 period, u64 runtime)
init_dl_bw	sched/sched.h	/^extern void init_dl_bw(struct dl_bw *dl_b);$/;"	kind:prototype	signature:(struct dl_bw *dl_b)
init_dl_inactive_task_timer	sched/sched.h	/^extern void init_dl_inactive_task_timer(struct sched_dl_entity *dl_se);$/;"	kind:prototype	signature:(struct sched_dl_entity *dl_se)
init_dl_rq	sched/sched.h	/^extern void init_dl_rq(struct dl_rq *dl_rq);$/;"	kind:prototype	signature:(struct dl_rq *dl_rq)
init_dl_rq_bw_ratio	sched/sched.h	/^extern void init_dl_rq_bw_ratio(struct dl_rq *dl_rq);$/;"	kind:prototype	signature:(struct dl_rq *dl_rq)
init_dl_task_timer	sched/sched.h	/^extern void init_dl_task_timer(struct sched_dl_entity *dl_se);$/;"	kind:prototype	signature:(struct sched_dl_entity *dl_se)
init_entity_runnable_average	sched/sched.h	/^extern void init_entity_runnable_average(struct sched_entity *se);$/;"	kind:prototype	signature:(struct sched_entity *se)
init_ftrace_syscalls	trace/trace.h	/^static inline void init_ftrace_syscalls(void) { }$/;"	kind:function	signature:(void)
init_ftrace_syscalls	trace/trace.h	/^void init_ftrace_syscalls(void);$/;"	kind:prototype	signature:(void)
init_function_trace	trace/trace.h	/^int init_function_trace(void);$/;"	kind:prototype	signature:(void)
init_function_trace	trace/trace.h	/^static inline int init_function_trace(void) { return 0; }$/;"	kind:function	signature:(void)
init_header_complete	power/power.h	/^static inline int init_header_complete(struct swsusp_info *info)$/;"	kind:function	signature:(struct swsusp_info *info)
init_kstat_irqs	irq/internals.h	/^extern void init_kstat_irqs(struct irq_desc *desc, int node, int nr);$/;"	kind:prototype	signature:(struct irq_desc *desc, int node, int nr)
init_numa_balancing	sched/sched.h	/^extern void init_numa_balancing(unsigned long clone_flags, struct task_struct *p);$/;"	kind:prototype	signature:(unsigned long clone_flags, struct task_struct *p)
init_numa_balancing	sched/sched.h	/^init_numa_balancing(unsigned long clone_flags, struct task_struct *p)$/;"	kind:function	signature:(unsigned long clone_flags, struct task_struct *p)
init_rt_bandwidth	sched/sched.h	/^extern void init_rt_bandwidth(struct rt_bandwidth *rt_b, u64 period, u64 runtime);$/;"	kind:prototype	signature:(struct rt_bandwidth *rt_b, u64 period, u64 runtime)
init_rt_rq	sched/sched.h	/^extern void init_rt_rq(struct rt_rq *rt_rq);$/;"	kind:prototype	signature:(struct rt_rq *rt_rq)
init_sched_dl_class	sched/sched.h	/^extern void init_sched_dl_class(void);$/;"	kind:prototype	signature:(void)
init_sched_fair_class	sched/sched.h	/^extern void init_sched_fair_class(void);$/;"	kind:prototype	signature:(void)
init_sched_rt_class	sched/sched.h	/^extern void init_sched_rt_class(void);$/;"	kind:prototype	signature:(void)
init_tg_cfs_entry	sched/sched.h	/^extern void init_tg_cfs_entry(struct task_group *tg, struct cfs_rq *cfs_rq,$/;"	kind:prototype	signature:(struct task_group *tg, struct cfs_rq *cfs_rq, struct sched_entity *se, int cpu, struct sched_entity *parent)
init_tg_rt_entry	sched/sched.h	/^extern void init_tg_rt_entry(struct task_group *tg, struct rt_rq *rt_rq,$/;"	kind:prototype	signature:(struct task_group *tg, struct rt_rq *rt_rq, struct sched_rt_entity *rt_se, int cpu, struct sched_rt_entity *parent)
init_typeoffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	kind:member	struct:load_info	access:public
ino	audit.h	/^	unsigned long		ino;$/;"	kind:member	struct:audit_names	access:public
internal_trace_puts	trace/trace.h	1899;"	kind:macro
iowait_sleeptime	time/tick-sched.h	/^	ktime_t				iowait_sleeptime;$/;"	kind:member	struct:tick_sched	access:public
ip	locking/rtmutex_common.h	/^	unsigned long		ip;$/;"	kind:member	struct:rt_mutex_waiter	access:public
ip	trace/trace.h	/^	unsigned long		ip;$/;"	kind:member	struct:kprobe_trace_entry_head	access:public
ipc	audit.h	/^		} ipc;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon6	access:public
irq_activate	irq/internals.h	/^extern int irq_activate(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
irq_activate_and_startup	irq/internals.h	/^extern int irq_activate_and_startup(struct irq_desc *desc, bool resend);$/;"	kind:prototype	signature:(struct irq_desc *desc, bool resend)
irq_add_debugfs_entry	irq/internals.h	/^static inline void irq_add_debugfs_entry(unsigned int irq, struct irq_desc *d)$/;"	kind:function	signature:(unsigned int irq, struct irq_desc *d)
irq_add_debugfs_entry	irq/internals.h	/^void irq_add_debugfs_entry(unsigned int irq, struct irq_desc *desc);$/;"	kind:prototype	signature:(unsigned int irq, struct irq_desc *desc)
irq_can_move_pcntxt	irq/internals.h	/^static inline bool irq_can_move_pcntxt(struct irq_data *data)$/;"	kind:function	signature:(struct irq_data *data)
irq_can_set_affinity_usr	irq/internals.h	/^extern bool irq_can_set_affinity_usr(unsigned int irq);$/;"	kind:prototype	signature:(unsigned int irq)
irq_copy_pending	irq/internals.h	/^irq_copy_pending(struct irq_desc *desc, const struct cpumask *mask)$/;"	kind:function	signature:(struct irq_desc *desc, const struct cpumask *mask)
irq_debugfs_copy_devname	irq/internals.h	/^static inline void irq_debugfs_copy_devname(int irq, struct device *dev)$/;"	kind:function	signature:(int irq, struct device *dev)
irq_debugfs_copy_devname	irq/internals.h	/^void irq_debugfs_copy_devname(int irq, struct device *dev);$/;"	kind:prototype	signature:(int irq, struct device *dev)
irq_depth	debug/debug_core.h	/^	int			irq_depth;$/;"	kind:member	struct:debuggerinfo_struct	access:public
irq_desc_get_node	irq/internals.h	/^static inline int irq_desc_get_node(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_desc_get_pending_mask	irq/internals.h	/^static inline struct cpumask *irq_desc_get_pending_mask(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_desc_is_chained	irq/internals.h	/^static inline int irq_desc_is_chained(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_disable	irq/internals.h	/^extern void irq_disable(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
irq_do_set_affinity	irq/internals.h	/^extern int irq_do_set_affinity(struct irq_data *data,$/;"	kind:prototype	signature:(struct irq_data *data, const struct cpumask *dest, bool force)
irq_domain_activate_irq	irq/internals.h	/^static inline int irq_domain_activate_irq(struct irq_data *data, bool reserve)$/;"	kind:function	signature:(struct irq_data *data, bool reserve)
irq_domain_deactivate_irq	irq/internals.h	/^static inline void irq_domain_deactivate_irq(struct irq_data *data)$/;"	kind:function	signature:(struct irq_data *data)
irq_domain_debugfs_init	irq/internals.h	/^static inline void irq_domain_debugfs_init(struct dentry *root)$/;"	kind:function	signature:(struct dentry *root)
irq_domain_debugfs_init	irq/internals.h	/^void irq_domain_debugfs_init(struct dentry *root);$/;"	kind:prototype	signature:(struct dentry *root)
irq_enable	irq/internals.h	/^extern void irq_enable(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
irq_fixup_move_pending	irq/internals.h	/^bool irq_fixup_move_pending(struct irq_desc *desc, bool force_clear);$/;"	kind:prototype	signature:(struct irq_desc *desc, bool force_clear)
irq_fixup_move_pending	irq/internals.h	/^static inline bool irq_fixup_move_pending(struct irq_desc *desc, bool fclear)$/;"	kind:function	signature:(struct irq_desc *desc, bool fclear)
irq_get_desc_buslock	irq/internals.h	/^irq_get_desc_buslock(unsigned int irq, unsigned long *flags, unsigned int check)$/;"	kind:function	signature:(unsigned int irq, unsigned long *flags, unsigned int check)
irq_get_desc_lock	irq/internals.h	/^irq_get_desc_lock(unsigned int irq, unsigned long *flags, unsigned int check)$/;"	kind:function	signature:(unsigned int irq, unsigned long *flags, unsigned int check)
irq_get_pending	irq/internals.h	/^irq_get_pending(struct cpumask *mask, struct irq_desc *desc)$/;"	kind:function	signature:(struct cpumask *mask, struct irq_desc *desc)
irq_init_generic_chip	irq/internals.h	/^irq_init_generic_chip(struct irq_chip_generic *gc, const char *name,$/;"	kind:function	signature:(struct irq_chip_generic *gc, const char *name, int num_ct, unsigned int irq_base, void __iomem *reg_base, irq_flow_handler_t handler)
irq_init_generic_chip	irq/internals.h	/^void irq_init_generic_chip(struct irq_chip_generic *gc, const char *name,$/;"	kind:prototype	signature:(struct irq_chip_generic *gc, const char *name, int num_ct, unsigned int irq_base, void __iomem *reg_base, irq_flow_handler_t handler)
irq_mark_irq	irq/internals.h	/^extern void irq_mark_irq(unsigned int irq);$/;"	kind:prototype	signature:(unsigned int irq)
irq_mark_irq	irq/internals.h	/^static inline void irq_mark_irq(unsigned int irq) { }$/;"	kind:function	signature:(unsigned int irq)
irq_move_pending	irq/internals.h	/^static inline bool irq_move_pending(struct irq_data *data)$/;"	kind:function	signature:(struct irq_data *data)
irq_percpu_disable	irq/internals.h	/^extern void irq_percpu_disable(struct irq_desc *desc, unsigned int cpu);$/;"	kind:prototype	signature:(struct irq_desc *desc, unsigned int cpu)
irq_percpu_enable	irq/internals.h	/^extern void irq_percpu_enable(struct irq_desc *desc, unsigned int cpu);$/;"	kind:prototype	signature:(struct irq_desc *desc, unsigned int cpu)
irq_pm_check_wakeup	irq/internals.h	/^bool irq_pm_check_wakeup(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
irq_pm_check_wakeup	irq/internals.h	/^static inline bool irq_pm_check_wakeup(struct irq_desc *desc) { return false; }$/;"	kind:function	signature:(struct irq_desc *desc)
irq_pm_install_action	irq/internals.h	/^irq_pm_install_action(struct irq_desc *desc, struct irqaction *action) { }$/;"	kind:function	signature:(struct irq_desc *desc, struct irqaction *action)
irq_pm_install_action	irq/internals.h	/^void irq_pm_install_action(struct irq_desc *desc, struct irqaction *action);$/;"	kind:prototype	signature:(struct irq_desc *desc, struct irqaction *action)
irq_pm_remove_action	irq/internals.h	/^irq_pm_remove_action(struct irq_desc *desc, struct irqaction *action) { }$/;"	kind:function	signature:(struct irq_desc *desc, struct irqaction *action)
irq_pm_remove_action	irq/internals.h	/^void irq_pm_remove_action(struct irq_desc *desc, struct irqaction *action);$/;"	kind:prototype	signature:(struct irq_desc *desc, struct irqaction *action)
irq_put_desc_busunlock	irq/internals.h	/^irq_put_desc_busunlock(struct irq_desc *desc, unsigned long flags)$/;"	kind:function	signature:(struct irq_desc *desc, unsigned long flags)
irq_put_desc_unlock	irq/internals.h	/^irq_put_desc_unlock(struct irq_desc *desc, unsigned long flags)$/;"	kind:function	signature:(struct irq_desc *desc, unsigned long flags)
irq_remove_debugfs_entry	irq/internals.h	/^static inline void irq_remove_debugfs_entry(struct irq_desc *d)$/;"	kind:function	signature:(struct irq_desc *d)
irq_remove_debugfs_entry	irq/internals.h	/^static inline void irq_remove_debugfs_entry(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_remove_timings	irq/internals.h	/^static inline void irq_remove_timings(struct irq_desc *desc) {}$/;"	kind:function	signature:(struct irq_desc *desc)
irq_remove_timings	irq/internals.h	/^static inline void irq_remove_timings(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_select_affinity_usr	irq/internals.h	/^extern int irq_select_affinity_usr(unsigned int irq);$/;"	kind:prototype	signature:(unsigned int irq)
irq_set_thread_affinity	irq/internals.h	/^extern void irq_set_thread_affinity(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
irq_settings_can_autoenable	irq/settings.h	/^static inline bool irq_settings_can_autoenable(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_can_move_pcntxt	irq/settings.h	/^static inline bool irq_settings_can_move_pcntxt(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_can_probe	irq/settings.h	/^static inline bool irq_settings_can_probe(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_can_request	irq/settings.h	/^static inline bool irq_settings_can_request(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_can_thread	irq/settings.h	/^static inline bool irq_settings_can_thread(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_clr_and_set	irq/settings.h	/^irq_settings_clr_and_set(struct irq_desc *desc, u32 clr, u32 set)$/;"	kind:function	signature:(struct irq_desc *desc, u32 clr, u32 set)
irq_settings_clr_disable_unlazy	irq/settings.h	/^static inline void irq_settings_clr_disable_unlazy(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_clr_level	irq/settings.h	/^static inline void irq_settings_clr_level(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_clr_noprobe	irq/settings.h	/^static inline void irq_settings_clr_noprobe(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_clr_norequest	irq/settings.h	/^static inline void irq_settings_clr_norequest(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_clr_nothread	irq/settings.h	/^static inline void irq_settings_clr_nothread(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_disable_unlazy	irq/settings.h	/^static inline bool irq_settings_disable_unlazy(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_get_trigger_mask	irq/settings.h	/^static inline u32 irq_settings_get_trigger_mask(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_has_no_balance_set	irq/settings.h	/^static inline bool irq_settings_has_no_balance_set(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_is_level	irq/settings.h	/^static inline bool irq_settings_is_level(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_is_nested_thread	irq/settings.h	/^static inline bool irq_settings_is_nested_thread(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_is_per_cpu	irq/settings.h	/^static inline bool irq_settings_is_per_cpu(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_is_per_cpu_devid	irq/settings.h	/^static inline bool irq_settings_is_per_cpu_devid(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_is_polled	irq/settings.h	/^static inline bool irq_settings_is_polled(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_set_level	irq/settings.h	/^static inline void irq_settings_set_level(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_set_no_balancing	irq/settings.h	/^static inline void irq_settings_set_no_balancing(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_set_noprobe	irq/settings.h	/^static inline void irq_settings_set_noprobe(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_set_norequest	irq/settings.h	/^static inline void irq_settings_set_norequest(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_set_nothread	irq/settings.h	/^static inline void irq_settings_set_nothread(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_set_per_cpu	irq/settings.h	/^static inline void irq_settings_set_per_cpu(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_settings_set_trigger_mask	irq/settings.h	/^irq_settings_set_trigger_mask(struct irq_desc *desc, u32 mask)$/;"	kind:function	signature:(struct irq_desc *desc, u32 mask)
irq_setup_affinity	irq/internals.h	/^extern int irq_setup_affinity(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
irq_setup_affinity	irq/internals.h	/^static inline int irq_setup_affinity(struct irq_desc *desc) { return 0; }$/;"	kind:function	signature:(struct irq_desc *desc)
irq_setup_timings	irq/internals.h	/^static inline void irq_setup_timings(struct irq_desc *desc, struct irqaction *act)$/;"	kind:function	signature:(struct irq_desc *desc, struct irqaction *act)
irq_setup_timings	irq/internals.h	/^static inline void irq_setup_timings(struct irq_desc *desc,$/;"	kind:function	signature:(struct irq_desc *desc, struct irqaction *act)
irq_shutdown	irq/internals.h	/^extern void irq_shutdown(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
irq_shutdown_and_deactivate	irq/internals.h	/^extern void irq_shutdown_and_deactivate(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
irq_start_time	sched/sched.h	/^	u64			irq_start_time;$/;"	kind:member	struct:irqtime	access:public
irq_startup	irq/internals.h	/^extern int irq_startup(struct irq_desc *desc, bool resend, bool force);$/;"	kind:prototype	signature:(struct irq_desc *desc, bool resend, bool force)
irq_state_set_disabled	irq/internals.h	/^static inline void irq_state_set_disabled(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_state_set_masked	irq/internals.h	/^static inline void irq_state_set_masked(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
irq_time_read	sched/sched.h	/^static inline u64 irq_time_read(int cpu)$/;"	kind:function	signature:(int cpu)
irq_timing_decode	irq/internals.h	/^static inline int irq_timing_decode(u64 value, u64 *timestamp)$/;"	kind:function	signature:(u64 value, u64 *timestamp)
irq_timing_enabled	irq/internals.h	/^DECLARE_STATIC_KEY_FALSE(irq_timing_enabled);$/;"	kind:variable
irq_timing_encode	irq/internals.h	/^static inline u64 irq_timing_encode(u64 timestamp, int irq)$/;"	kind:function	signature:(u64 timestamp, int irq)
irq_timings	irq/internals.h	/^struct irq_timings {$/;"	kind:struct
irq_timings::count	irq/internals.h	/^	int	count;$/;"	kind:member	struct:irq_timings	access:public
irq_timings::values	irq/internals.h	/^	u64	values[IRQ_TIMINGS_SIZE];$/;"	kind:member	struct:irq_timings	access:public
irq_timings_alloc	irq/internals.h	/^extern int irq_timings_alloc(int irq);$/;"	kind:prototype	signature:(int irq)
irq_timings_disable	irq/internals.h	/^extern void irq_timings_disable(void);$/;"	kind:prototype	signature:(void)
irq_timings_enable	irq/internals.h	/^extern void irq_timings_enable(void);$/;"	kind:prototype	signature:(void)
irq_timings_free	irq/internals.h	/^extern void irq_timings_free(int irq);$/;"	kind:prototype	signature:(int irq)
irq_timings_push	irq/internals.h	/^static __always_inline void irq_timings_push(u64 ts, int irq)$/;"	kind:function	signature:(u64 ts, int irq)
irq_wait_for_poll	irq/internals.h	/^bool irq_wait_for_poll(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
irqd_clear	irq/internals.h	/^static inline void irqd_clear(struct irq_data *d, unsigned int mask)$/;"	kind:function	signature:(struct irq_data *d, unsigned int mask)
irqd_clr_managed_shutdown	irq/internals.h	/^static inline void irqd_clr_managed_shutdown(struct irq_data *d)$/;"	kind:function	signature:(struct irq_data *d)
irqd_clr_move_pending	irq/internals.h	/^static inline void irqd_clr_move_pending(struct irq_data *d)$/;"	kind:function	signature:(struct irq_data *d)
irqd_get	irq/internals.h	/^static inline unsigned int irqd_get(struct irq_data *d)$/;"	kind:function	signature:(struct irq_data *d)
irqd_has_set	irq/internals.h	/^static inline bool irqd_has_set(struct irq_data *d, unsigned int mask)$/;"	kind:function	signature:(struct irq_data *d, unsigned int mask)
irqd_set	irq/internals.h	/^static inline void irqd_set(struct irq_data *d, unsigned int mask)$/;"	kind:function	signature:(struct irq_data *d, unsigned int mask)
irqd_set_managed_shutdown	irq/internals.h	/^static inline void irqd_set_managed_shutdown(struct irq_data *d)$/;"	kind:function	signature:(struct irq_data *d)
irqd_set_move_pending	irq/internals.h	/^static inline void irqd_set_move_pending(struct irq_data *d)$/;"	kind:function	signature:(struct irq_data *d)
irqtime	sched/sched.h	/^struct irqtime {$/;"	kind:struct
irqtime::irq_start_time	sched/sched.h	/^	u64			irq_start_time;$/;"	kind:member	struct:irqtime	access:public
irqtime::sync	sched/sched.h	/^	struct u64_stats_sync	sync;$/;"	kind:member	struct:irqtime	typeref:struct:irqtime::u64_stats_sync	access:public
irqtime::tick_delta	sched/sched.h	/^	u64			tick_delta;$/;"	kind:member	struct:irqtime	access:public
irqtime::total	sched/sched.h	/^	u64			total;$/;"	kind:member	struct:irqtime	access:public
is_busy	trace/trace_dynevent.h	/^	bool (*is_busy)(struct dyn_event *ev);$/;"	kind:member	struct:dyn_event_operations	access:public
is_function_field	trace/trace.h	/^static inline bool is_function_field(struct ftrace_event_field *field)$/;"	kind:function	signature:(struct ftrace_event_field *field)
is_good_name	trace/trace_probe.h	/^static inline bool is_good_name(const char *name)$/;"	kind:function	signature:(const char *name)
is_named_trigger	trace/trace.h	/^extern bool is_named_trigger(struct event_trigger_data *test);$/;"	kind:prototype	signature:(struct event_trigger_data *test)
is_signed	trace/trace.h	/^	int			is_signed;$/;"	kind:member	struct:ftrace_event_field	access:public
is_signed	trace/trace_probe.h	/^	int			is_signed;	\/* Signed flag *\/$/;"	kind:member	struct:fetch_type	access:public
is_string_field	trace/trace.h	/^static inline bool is_string_field(struct ftrace_event_field *field)$/;"	kind:function	signature:(struct ftrace_event_field *field)
is_tracing_stopped	trace/trace.h	/^int is_tracing_stopped(void);$/;"	kind:prototype	signature:(void)
istate	irq/internals.h	20;"	kind:macro
jiffies_force_qs	rcu/tree.h	/^	unsigned long jiffies_force_qs;		\/* Time at which to invoke *\/$/;"	kind:member	struct:rcu_state	access:public
jiffies_kick_kthreads	rcu/tree.h	/^	unsigned long jiffies_kick_kthreads;	\/* Time at which to kick *\/$/;"	kind:member	struct:rcu_state	access:public
jiffies_lock	time/timekeeping.h	/^extern seqlock_t jiffies_lock;$/;"	kind:externvar
jiffies_resched	rcu/tree.h	/^	unsigned long jiffies_resched;		\/* Time at which to resched *\/$/;"	kind:member	struct:rcu_state	access:public
jiffies_stall	rcu/tree.h	/^	unsigned long jiffies_stall;		\/* Time at which to check *\/$/;"	kind:member	struct:rcu_state	access:public
k_clock	time/posix-timers.h	/^struct k_clock {$/;"	kind:struct
k_clock::clock_adj	time/posix-timers.h	/^	int	(*clock_adj)(const clockid_t which_clock, struct __kernel_timex *tx);$/;"	kind:member	struct:k_clock	access:public
k_clock::clock_get	time/posix-timers.h	/^	int	(*clock_get)(const clockid_t which_clock,$/;"	kind:member	struct:k_clock	access:public
k_clock::clock_getres	time/posix-timers.h	/^	int	(*clock_getres)(const clockid_t which_clock,$/;"	kind:member	struct:k_clock	access:public
k_clock::clock_set	time/posix-timers.h	/^	int	(*clock_set)(const clockid_t which_clock,$/;"	kind:member	struct:k_clock	access:public
k_clock::nsleep	time/posix-timers.h	/^	int	(*nsleep)(const clockid_t which_clock, int flags,$/;"	kind:member	struct:k_clock	access:public
k_clock::timer_arm	time/posix-timers.h	/^	void	(*timer_arm)(struct k_itimer *timr, ktime_t expires,$/;"	kind:member	struct:k_clock	access:public
k_clock::timer_create	time/posix-timers.h	/^	int	(*timer_create)(struct k_itimer *timer);$/;"	kind:member	struct:k_clock	access:public
k_clock::timer_del	time/posix-timers.h	/^	int	(*timer_del)(struct k_itimer *timr);$/;"	kind:member	struct:k_clock	access:public
k_clock::timer_forward	time/posix-timers.h	/^	s64	(*timer_forward)(struct k_itimer *timr, ktime_t now);$/;"	kind:member	struct:k_clock	access:public
k_clock::timer_get	time/posix-timers.h	/^	void	(*timer_get)(struct k_itimer *timr,$/;"	kind:member	struct:k_clock	access:public
k_clock::timer_rearm	time/posix-timers.h	/^	void	(*timer_rearm)(struct k_itimer *timr);$/;"	kind:member	struct:k_clock	access:public
k_clock::timer_remaining	time/posix-timers.h	/^	ktime_t	(*timer_remaining)(struct k_itimer *timr, ktime_t now);$/;"	kind:member	struct:k_clock	access:public
k_clock::timer_set	time/posix-timers.h	/^	int	(*timer_set)(struct k_itimer *timr, int flags,$/;"	kind:member	struct:k_clock	access:public
k_clock::timer_try_to_cancel	time/posix-timers.h	/^	int	(*timer_try_to_cancel)(struct k_itimer *timr);$/;"	kind:member	struct:k_clock	access:public
k_clock::timer_wait_running	time/posix-timers.h	/^	void	(*timer_wait_running)(struct k_itimer *timr);$/;"	kind:member	struct:k_clock	access:public
kallsyms_symbol_complete	debug/kdb/kdb_private.h	/^extern int kallsyms_symbol_complete(char *prefix_name, int max_len);$/;"	kind:prototype	signature:(char *prefix_name, int max_len)
kallsyms_symbol_next	debug/kdb/kdb_private.h	/^extern int kallsyms_symbol_next(char *prefix_name, int flag, int buf_size);$/;"	kind:prototype	signature:(char *prefix_name, int flag, int buf_size)
kdb_bfd_vma_fmt	debug/kdb/kdb_private.h	45;"	kind:macro
kdb_bfd_vma_fmt	debug/kdb/kdb_private.h	57;"	kind:macro
kdb_bfd_vma_fmt0	debug/kdb/kdb_private.h	46;"	kind:macro
kdb_bfd_vma_fmt0	debug/kdb/kdb_private.h	58;"	kind:macro
kdb_bp_install	debug/kdb/kdb_private.h	/^extern void kdb_bp_install(struct pt_regs *);$/;"	kind:prototype	signature:(struct pt_regs *)
kdb_bp_remove	debug/kdb/kdb_private.h	/^extern void kdb_bp_remove(void);$/;"	kind:prototype	signature:(void)
kdb_bp_t	debug/kdb/kdb_private.h	/^} kdb_bp_t;$/;"	kind:typedef	typeref:struct:_kdb_bp
kdb_breakpoints	debug/kdb/kdb_private.h	/^extern kdb_bp_t kdb_breakpoints[\/* KDB_MAXBPT *\/];$/;"	kind:externvar
kdb_bt	debug/kdb/kdb_private.h	/^extern int kdb_bt(int, const char **);	\/* KDB display back trace *\/$/;"	kind:prototype	signature:(int, const char **)
kdb_cmds	debug/kdb/kdb_private.h	/^extern char *kdb_cmds[];$/;"	kind:externvar
kdb_common_deinit_state	debug/debug_core.h	/^extern int kdb_common_deinit_state(void);$/;"	kind:prototype	signature:(void)
kdb_common_init_state	debug/debug_core.h	/^extern int kdb_common_init_state(struct kgdb_state *ks);$/;"	kind:prototype	signature:(struct kgdb_state *ks)
kdb_curr_task	debug/kdb/kdb_private.h	/^extern struct task_struct *kdb_curr_task(int);$/;"	kind:prototype	signature:(int)
kdb_current_task	debug/kdb/kdb_private.h	/^extern struct task_struct *kdb_current_task;$/;"	kind:externvar
kdb_dbtrap_t	debug/kdb/kdb_private.h	/^} kdb_dbtrap_t;$/;"	kind:typedef	typeref:enum:__anon35
kdb_do_each_thread	debug/kdb/kdb_private.h	233;"	kind:macro
kdb_elfw_addr_fmt	debug/kdb/kdb_private.h	47;"	kind:macro
kdb_elfw_addr_fmt	debug/kdb/kdb_private.h	59;"	kind:macro
kdb_elfw_addr_fmt0	debug/kdb/kdb_private.h	48;"	kind:macro
kdb_elfw_addr_fmt0	debug/kdb/kdb_private.h	60;"	kind:macro
kdb_f_count_fmt	debug/kdb/kdb_private.h	49;"	kind:macro
kdb_f_count_fmt	debug/kdb/kdb_private.h	61;"	kind:macro
kdb_gdb_state_pass	debug/kdb/kdb_private.h	/^extern void kdb_gdb_state_pass(char *buf);$/;"	kind:prototype	signature:(char *buf)
kdb_getarea	debug/kdb/kdb_private.h	97;"	kind:macro
kdb_getarea_size	debug/kdb/kdb_private.h	/^extern int kdb_getarea_size(void *, unsigned long, size_t);$/;"	kind:prototype	signature:(void *, unsigned long, size_t)
kdb_getphysword	debug/kdb/kdb_private.h	/^extern int kdb_getphysword(unsigned long *word,$/;"	kind:prototype	signature:(unsigned long *word, unsigned long addr, size_t size)
kdb_getstr	debug/kdb/kdb_private.h	/^extern char *kdb_getstr(char *, size_t, const char *);$/;"	kind:prototype	signature:(char *, size_t, const char *)
kdb_getword	debug/kdb/kdb_private.h	/^extern int kdb_getword(unsigned long *, unsigned long, size_t);$/;"	kind:prototype	signature:(unsigned long *, unsigned long, size_t)
kdb_grep_leading	debug/kdb/kdb_private.h	/^extern int kdb_grep_leading;$/;"	kind:externvar
kdb_grep_string	debug/kdb/kdb_private.h	/^extern char kdb_grep_string[];$/;"	kind:externvar
kdb_grep_trailing	debug/kdb/kdb_private.h	/^extern int kdb_grep_trailing;$/;"	kind:externvar
kdb_grepping_flag	debug/kdb/kdb_private.h	/^extern int kdb_grepping_flag;$/;"	kind:externvar
kdb_initbptab	debug/kdb/kdb_private.h	/^extern void kdb_initbptab(void);$/;"	kind:prototype	signature:(void)
kdb_kbd_cleanup_state	debug/kdb/kdb_private.h	/^extern void kdb_kbd_cleanup_state(void);$/;"	kind:prototype	signature:(void)
kdb_kbd_cleanup_state	debug/kdb/kdb_private.h	248;"	kind:macro
kdb_machreg_fmt	debug/kdb/kdb_private.h	43;"	kind:macro
kdb_machreg_fmt	debug/kdb/kdb_private.h	55;"	kind:macro
kdb_machreg_fmt0	debug/kdb/kdb_private.h	44;"	kind:macro
kdb_machreg_fmt0	debug/kdb/kdb_private.h	56;"	kind:macro
kdb_main_loop	debug/kdb/kdb_private.h	/^extern int kdb_main_loop(kdb_reason_t, kdb_reason_t,$/;"	kind:prototype	signature:(kdb_reason_t, kdb_reason_t, int, kdb_dbtrap_t, struct pt_regs *)
kdb_meminfo_proc_show	debug/kdb/kdb_private.h	/^extern void kdb_meminfo_proc_show(void);$/;"	kind:prototype	signature:(void)
kdb_modules	debug/kdb/kdb_private.h	/^extern struct list_head *kdb_modules;$/;"	kind:externvar
kdb_nextline	debug/kdb/kdb_private.h	/^extern int kdb_nextline; \/* Current number of lines displayed *\/$/;"	kind:externvar
kdb_parse	debug/debug_core.h	/^extern int kdb_parse(const char *cmdstr);$/;"	kind:prototype	signature:(const char *cmdstr)
kdb_print_nameval	debug/kdb/kdb_private.h	/^extern void kdb_print_nameval(const char *name, unsigned long val);$/;"	kind:prototype	signature:(const char *name, unsigned long val)
kdb_print_state	debug/kdb/kdb_private.h	/^extern void kdb_print_state(const char *, int);$/;"	kind:prototype	signature:(const char *, int)
kdb_prompt_str	debug/kdb/kdb_private.h	/^extern char kdb_prompt_str[];$/;"	kind:externvar
kdb_ps1	debug/kdb/kdb_private.h	/^extern void kdb_ps1(const struct task_struct *p);$/;"	kind:prototype	signature:(const struct task_struct *p)
kdb_ps_suppressed	debug/kdb/kdb_private.h	/^extern void kdb_ps_suppressed(void);$/;"	kind:prototype	signature:(void)
kdb_putarea	debug/kdb/kdb_private.h	98;"	kind:macro
kdb_putarea_size	debug/kdb/kdb_private.h	/^extern int kdb_putarea_size(unsigned long, void *, size_t);$/;"	kind:prototype	signature:(unsigned long, void *, size_t)
kdb_putword	debug/kdb/kdb_private.h	/^extern int kdb_putword(unsigned long, unsigned long, size_t);$/;"	kind:prototype	signature:(unsigned long, unsigned long, size_t)
kdb_send_sig	debug/kdb/kdb_private.h	/^extern void kdb_send_sig(struct task_struct *p, int sig);$/;"	kind:prototype	signature:(struct task_struct *p, int sig)
kdb_set_current_task	debug/kdb/kdb_private.h	/^extern void kdb_set_current_task(struct task_struct *);$/;"	kind:prototype	signature:(struct task_struct *)
kdb_state	debug/kdb/kdb_private.h	/^extern int kdb_state;$/;"	kind:externvar
kdb_strdup	debug/kdb/kdb_private.h	/^extern char *kdb_strdup(const char *str, gfp_t type);$/;"	kind:prototype	signature:(const char *str, gfp_t type)
kdb_stub	debug/debug_core.h	/^extern int kdb_stub(struct kgdb_state *ks);$/;"	kind:prototype	signature:(struct kgdb_state *ks)
kdb_stub	debug/debug_core.h	/^static inline int kdb_stub(struct kgdb_state *ks)$/;"	kind:function	signature:(struct kgdb_state *ks)
kdb_symbol_print	debug/kdb/kdb_private.h	/^extern void kdb_symbol_print(unsigned long, const kdb_symtab_t *, unsigned int);$/;"	kind:prototype	signature:(unsigned long, const kdb_symtab_t *, unsigned int)
kdb_symtab_t	debug/kdb/kdb_private.h	/^		} kdb_symtab_t;$/;"	kind:typedef	typeref:struct:__ksymtab
kdb_task_has_cpu	debug/kdb/kdb_private.h	230;"	kind:macro
kdb_task_state	debug/kdb/kdb_private.h	/^extern unsigned long kdb_task_state(const struct task_struct *p,$/;"	kind:prototype	signature:(const struct task_struct *p, unsigned long mask)
kdb_task_state_char	debug/kdb/kdb_private.h	/^extern char kdb_task_state_char (const struct task_struct *);$/;"	kind:prototype	signature:(const struct task_struct *)
kdb_task_state_string	debug/kdb/kdb_private.h	/^extern unsigned long kdb_task_state_string(const char *);$/;"	kind:prototype	signature:(const char *)
kdb_while_each_thread	debug/kdb/kdb_private.h	234;"	kind:macro
kdbgetaddrarg	debug/kdb/kdb_private.h	/^extern int kdbgetaddrarg(int, const char **, int*, unsigned long *,$/;"	kind:prototype	signature:(int, const char **, int*, unsigned long *, long *, char **)
kdbgetenv	debug/kdb/kdb_private.h	/^extern char *kdbgetenv(const char *);$/;"	kind:prototype	signature:(const char *)
kdbgetsymval	debug/kdb/kdb_private.h	/^extern int kdbgetsymval(const char *, kdb_symtab_t *);$/;"	kind:prototype	signature:(const char *, kdb_symtab_t *)
kdbgetu64arg	debug/kdb/kdb_private.h	/^extern int kdbgetu64arg(const char *, u64 *);$/;"	kind:prototype	signature:(const char *, u64 *)
kdbgetularg	debug/kdb/kdb_private.h	/^extern int kdbgetularg(const char *, unsigned long *);$/;"	kind:prototype	signature:(const char *, unsigned long *)
kdbnearsym	debug/kdb/kdb_private.h	/^extern int kdbnearsym(unsigned long, kdb_symtab_t *);$/;"	kind:prototype	signature:(unsigned long, kdb_symtab_t *)
kdbnearsym_cleanup	debug/kdb/kdb_private.h	/^extern void kdbnearsym_cleanup(void);$/;"	kind:prototype	signature:(void)
kdbtab_t	debug/kdb/kdb_private.h	/^} kdbtab_t;$/;"	kind:typedef	typeref:struct:_kdbtab
kexec_mutex	kexec_internal.h	/^extern struct mutex kexec_mutex;$/;"	kind:externvar
kexec_purgatory	kexec_internal.h	/^extern char kexec_purgatory[];$/;"	kind:externvar
kexec_purgatory_size	kexec_internal.h	/^extern size_t kexec_purgatory_size;$/;"	kind:externvar
key	trace/tracing_map.h	/^	u32				key;$/;"	kind:member	struct:tracing_map_entry	access:public
key	trace/tracing_map.h	/^	void				*key;$/;"	kind:member	struct:tracing_map_elt	access:public
key	trace/tracing_map.h	/^	void				*key;$/;"	kind:member	struct:tracing_map_sort_entry	access:public
key_idx	trace/tracing_map.h	/^	int				key_idx[TRACING_MAP_KEYS_MAX];$/;"	kind:member	struct:tracing_map	access:public
key_size	trace/tracing_map.h	/^	unsigned int			key_size;$/;"	kind:member	struct:tracing_map	access:public
kfc	cgroup/cgroup-internal.h	/^	struct kernfs_fs_context kfc;$/;"	kind:member	struct:cgroup_fs_context	typeref:struct:cgroup_fs_context::kernfs_fs_context	access:public
kfree	rcu/rcu.h	/^void kfree(const void *);$/;"	kind:prototype	signature:(const void *)
kgdb_info	debug/debug_core.h	/^extern struct debuggerinfo_struct kgdb_info[];$/;"	kind:externvar
kgdb_state	debug/debug_core.h	/^struct kgdb_state {$/;"	kind:struct
kgdb_state::cpu	debug/debug_core.h	/^	int			cpu;$/;"	kind:member	struct:kgdb_state	access:public
kgdb_state::err_code	debug/debug_core.h	/^	int			err_code;$/;"	kind:member	struct:kgdb_state	access:public
kgdb_state::ex_vector	debug/debug_core.h	/^	int			ex_vector;$/;"	kind:member	struct:kgdb_state	access:public
kgdb_state::kgdb_usethreadid	debug/debug_core.h	/^	long			kgdb_usethreadid;$/;"	kind:member	struct:kgdb_state	access:public
kgdb_state::linux_regs	debug/debug_core.h	/^	struct pt_regs		*linux_regs;$/;"	kind:member	struct:kgdb_state	typeref:struct:kgdb_state::pt_regs	access:public
kgdb_state::pass_exception	debug/debug_core.h	/^	int			pass_exception;$/;"	kind:member	struct:kgdb_state	access:public
kgdb_state::send_ready	debug/debug_core.h	/^	atomic_t		*send_ready;$/;"	kind:member	struct:kgdb_state	access:public
kgdb_state::signo	debug/debug_core.h	/^	int			signo;$/;"	kind:member	struct:kgdb_state	access:public
kgdb_state::thr_query	debug/debug_core.h	/^	unsigned long		thr_query;$/;"	kind:member	struct:kgdb_state	access:public
kgdb_state::threadid	debug/debug_core.h	/^	unsigned long		threadid;$/;"	kind:member	struct:kgdb_state	access:public
kgdb_usethreadid	debug/debug_core.h	/^	long			kgdb_usethreadid;$/;"	kind:member	struct:kgdb_state	access:public
killed_trees	audit.h	/^	struct list_head killed_trees;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::list_head	access:public
kimage_file_post_load_cleanup	kexec_internal.h	/^static inline void kimage_file_post_load_cleanup(struct kimage *image) { }$/;"	kind:function	signature:(struct kimage *image)
kimage_file_post_load_cleanup	kexec_internal.h	/^void kimage_file_post_load_cleanup(struct kimage *image);$/;"	kind:prototype	signature:(struct kimage *image)
kimage_free	kexec_internal.h	/^void kimage_free(struct kimage *image);$/;"	kind:prototype	signature:(struct kimage *image)
kimage_free_page_list	kexec_internal.h	/^void kimage_free_page_list(struct list_head *list);$/;"	kind:prototype	signature:(struct list_head *list)
kimage_is_destination_range	kexec_internal.h	/^int kimage_is_destination_range(struct kimage *image,$/;"	kind:prototype	signature:(struct kimage *image, unsigned long start, unsigned long end)
kimage_load_segment	kexec_internal.h	/^int kimage_load_segment(struct kimage *image, struct kexec_segment *segment);$/;"	kind:prototype	signature:(struct kimage *image, struct kexec_segment *segment)
kimage_terminate	kexec_internal.h	/^void kimage_terminate(struct kimage *image);$/;"	kind:prototype	signature:(struct kimage *image)
klp_cancel_transition	livepatch/transition.h	/^void klp_cancel_transition(void);$/;"	kind:prototype	signature:(void)
klp_discard_nops	livepatch/core.h	/^void klp_discard_nops(struct klp_patch *new_patch);$/;"	kind:prototype	signature:(struct klp_patch *new_patch)
klp_discard_replaced_patches	livepatch/core.h	/^void klp_discard_replaced_patches(struct klp_patch *new_patch);$/;"	kind:prototype	signature:(struct klp_patch *new_patch)
klp_find_ops	livepatch/patch.h	/^struct klp_ops *klp_find_ops(void *old_func);$/;"	kind:prototype	signature:(void *old_func)
klp_for_each_patch	livepatch/core.h	13;"	kind:macro
klp_for_each_patch_safe	livepatch/core.h	10;"	kind:macro
klp_force_transition	livepatch/transition.h	/^void klp_force_transition(void);$/;"	kind:prototype	signature:(void)
klp_free_patch_start	livepatch/core.h	/^void klp_free_patch_start(struct klp_patch *patch);$/;"	kind:prototype	signature:(struct klp_patch *patch)
klp_init_transition	livepatch/transition.h	/^void klp_init_transition(struct klp_patch *patch, int state);$/;"	kind:prototype	signature:(struct klp_patch *patch, int state)
klp_is_object_loaded	livepatch/core.h	/^static inline bool klp_is_object_loaded(struct klp_object *obj)$/;"	kind:function	signature:(struct klp_object *obj)
klp_mutex	livepatch/core.h	/^extern struct mutex klp_mutex;$/;"	kind:externvar
klp_ops	livepatch/patch.h	/^struct klp_ops {$/;"	kind:struct
klp_ops::fops	livepatch/patch.h	/^	struct ftrace_ops fops;$/;"	kind:member	struct:klp_ops	typeref:struct:klp_ops::ftrace_ops	access:public
klp_ops::func_stack	livepatch/patch.h	/^	struct list_head func_stack;$/;"	kind:member	struct:klp_ops	typeref:struct:klp_ops::list_head	access:public
klp_ops::node	livepatch/patch.h	/^	struct list_head node;$/;"	kind:member	struct:klp_ops	typeref:struct:klp_ops::list_head	access:public
klp_patch_object	livepatch/patch.h	/^int klp_patch_object(struct klp_object *obj);$/;"	kind:prototype	signature:(struct klp_object *obj)
klp_patches	livepatch/core.h	/^extern struct list_head klp_patches;$/;"	kind:externvar
klp_post_patch_callback	livepatch/core.h	/^static inline void klp_post_patch_callback(struct klp_object *obj)$/;"	kind:function	signature:(struct klp_object *obj)
klp_post_unpatch_callback	livepatch/core.h	/^static inline void klp_post_unpatch_callback(struct klp_object *obj)$/;"	kind:function	signature:(struct klp_object *obj)
klp_pre_patch_callback	livepatch/core.h	/^static inline int klp_pre_patch_callback(struct klp_object *obj)$/;"	kind:function	signature:(struct klp_object *obj)
klp_pre_unpatch_callback	livepatch/core.h	/^static inline void klp_pre_unpatch_callback(struct klp_object *obj)$/;"	kind:function	signature:(struct klp_object *obj)
klp_reverse_transition	livepatch/transition.h	/^void klp_reverse_transition(void);$/;"	kind:prototype	signature:(void)
klp_start_transition	livepatch/transition.h	/^void klp_start_transition(void);$/;"	kind:prototype	signature:(void)
klp_transition_patch	livepatch/transition.h	/^extern struct klp_patch *klp_transition_patch;$/;"	kind:externvar
klp_try_complete_transition	livepatch/transition.h	/^void klp_try_complete_transition(void);$/;"	kind:prototype	signature:(void)
klp_unpatch_object	livepatch/patch.h	/^void klp_unpatch_object(struct klp_object *obj);$/;"	kind:prototype	signature:(struct klp_object *obj)
klp_unpatch_objects	livepatch/patch.h	/^void klp_unpatch_objects(struct klp_patch *patch);$/;"	kind:prototype	signature:(struct klp_patch *patch)
klp_unpatch_objects_dynamic	livepatch/patch.h	/^void klp_unpatch_objects_dynamic(struct klp_patch *patch);$/;"	kind:prototype	signature:(struct klp_patch *patch)
kprobe_trace_entry_head	trace/trace.h	/^struct kprobe_trace_entry_head {$/;"	kind:struct
kprobe_trace_entry_head::ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	kind:member	struct:kprobe_trace_entry_head	typeref:struct:kprobe_trace_entry_head::trace_entry	access:public
kprobe_trace_entry_head::ip	trace/trace.h	/^	unsigned long		ip;$/;"	kind:member	struct:kprobe_trace_entry_head	access:public
kprobe_trace_selftest_target	trace/trace_kprobe_selftest.h	/^int kprobe_trace_selftest_target(int a1, int a2, int a3, int a4, int a5, int a6);$/;"	kind:prototype	signature:(int a1, int a2, int a3, int a4, int a5, int a6)
kref	sched/autogroup.h	/^	struct kref		kref;$/;"	kind:member	struct:autogroup	typeref:struct:autogroup::kref	access:public
kretprobe_trace_entry_head	trace/trace.h	/^struct kretprobe_trace_entry_head {$/;"	kind:struct
kretprobe_trace_entry_head::ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	kind:member	struct:kretprobe_trace_entry_head	typeref:struct:kretprobe_trace_entry_head::trace_entry	access:public
kretprobe_trace_entry_head::func	trace/trace.h	/^	unsigned long		func;$/;"	kind:member	struct:kretprobe_trace_entry_head	access:public
kretprobe_trace_entry_head::ret_ip	trace/trace.h	/^	unsigned long		ret_ip;$/;"	kind:member	struct:kretprobe_trace_entry_head	access:public
kstat_incr_irqs_this_cpu	irq/internals.h	/^static inline void kstat_incr_irqs_this_cpu(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
ktime_get_update_offsets_now	time/timekeeping.h	/^extern ktime_t ktime_get_update_offsets_now(unsigned int *cwsseq,$/;"	kind:prototype	signature:(unsigned int *cwsseq, ktime_t *offs_real, ktime_t *offs_boot, ktime_t *offs_tai)
last	sched/sched.h	/^	struct sched_entity	*last;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity	access:public
last_accelerate	rcu/tree.h	/^	unsigned long last_accelerate;	\/* Last jiffy CBs were accelerated. *\/$/;"	kind:member	struct:rcu_data	access:public
last_active	workqueue_internal.h	/^	unsigned long		last_active;	\/* L: last active timestamp *\/$/;"	kind:member	struct:worker	access:public
last_advance_all	rcu/tree.h	/^	unsigned long last_advance_all;	\/* Last jiffy CBs were all advanced. *\/$/;"	kind:member	struct:rcu_data	access:public
last_blocked_load_update_tick	sched/sched.h	/^	unsigned long		last_blocked_load_update_tick;$/;"	kind:member	struct:rq	access:public
last_fqs_resched	rcu/tree.h	/^	unsigned long last_fqs_resched;	\/* Time of last rcu_resched(). *\/$/;"	kind:member	struct:rcu_data	access:public
last_func	workqueue_internal.h	/^	work_func_t		last_func;$/;"	kind:member	struct:worker	access:public
last_h_load_update	sched/sched.h	/^	u64			last_h_load_update;$/;"	kind:member	struct:cfs_rq	access:public
last_jiffies	time/tick-sched.h	/^	unsigned long			last_jiffies;$/;"	kind:member	struct:tick_sched	access:public
last_load_update_tick	sched/sched.h	/^	unsigned long		last_load_update_tick;$/;"	kind:member	struct:rq	access:public
last_tick	time/tick-sched.h	/^	ktime_t				last_tick;$/;"	kind:member	struct:tick_sched	access:public
leaf_cfs_rq_list	sched/sched.h	/^	struct list_head	leaf_cfs_rq_list;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::list_head	access:public
leaf_cfs_rq_list	sched/sched.h	/^	struct list_head	leaf_cfs_rq_list;$/;"	kind:member	struct:rq	typeref:struct:rq::list_head	access:public
leaf_node_cpu_bit	rcu/tree.h	134;"	kind:macro
len	audit.h	/^	int	len;	\/* length of the cmdline field. *\/$/;"	kind:member	struct:audit_proctitle	access:public
len	module-internal.h	/^	unsigned long len;$/;"	kind:member	struct:load_info	access:public
len	trace/trace.h	/^	int			len;$/;"	kind:member	struct:regex	access:public
level	rcu/tree.h	/^	struct rcu_node *level[RCU_NUM_LVLS + 1];$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::rcu_node	access:public
level	rcu/tree.h	/^	u8	level;		\/* root is at level 0. *\/$/;"	kind:member	struct:rcu_node	access:public
link	trace/trace.h	/^	struct list_head	link;$/;"	kind:member	struct:ftrace_event_field	typeref:struct:ftrace_event_field::list_head	access:public
linux_regs	debug/debug_core.h	/^	struct pt_regs		*linux_regs;$/;"	kind:member	struct:kgdb_state	typeref:struct:kgdb_state::pt_regs	access:public
list	audit.h	/^	struct list_head	list;		\/* audit_context->names_list *\/$/;"	kind:member	struct:audit_names	typeref:struct:audit_names::list_head	access:public
list	audit.h	/^	struct list_head	list;$/;"	kind:member	struct:audit_entry	typeref:struct:audit_entry::list_head	access:public
list	bpf/bpf_lru_list.h	/^	struct list_head list;$/;"	kind:member	struct:bpf_lru_node	typeref:struct:bpf_lru_node::list_head	access:public
list	sched/sched.h	/^	struct list_head	list;$/;"	kind:member	struct:task_group	typeref:struct:task_group::list_head	access:public
list	trace/trace.h	/^	struct list_head		list;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::list_head	access:public
list	trace/trace.h	/^	struct list_head		list;$/;"	kind:member	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::list_head	access:public
list	trace/trace.h	/^	struct list_head	list;$/;"	kind:member	struct:event_command	typeref:struct:event_command::list_head	access:public
list	trace/trace.h	/^	struct list_head	list;$/;"	kind:member	struct:event_subsystem	typeref:struct:event_subsystem::list_head	access:public
list	trace/trace.h	/^	struct list_head	list;$/;"	kind:member	struct:ftrace_func_command	typeref:struct:ftrace_func_command::list_head	access:public
list	trace/trace.h	/^	struct list_head	list;$/;"	kind:member	struct:ftrace_mod_load	typeref:struct:ftrace_mod_load::list_head	access:public
list	trace/trace.h	/^	struct list_head	list;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
list	trace/trace_dynevent.h	/^	struct list_head		list;$/;"	kind:member	struct:dyn_event	typeref:struct:dyn_event::list_head	access:public
list	trace/trace_dynevent.h	/^	struct list_head	list;$/;"	kind:member	struct:dyn_event_operations	typeref:struct:dyn_event_operations::list_head	access:public
list	trace/trace_probe.h	/^	struct list_head		list;$/;"	kind:member	struct:event_file_link	typeref:struct:event_file_link::list_head	access:public
list	trace/trace_probe.h	/^	struct list_head		list;$/;"	kind:member	struct:trace_probe	typeref:struct:trace_probe::list_head	access:public
lists	bpf/bpf_lru_list.h	/^	struct list_head lists[NR_BPF_LRU_LIST_T];$/;"	kind:member	struct:bpf_lru_list	typeref:struct:bpf_lru_list::list_head	access:public
lists	bpf/bpf_lru_list.h	/^	struct list_head lists[NR_BPF_LRU_LOCAL_LIST_T];$/;"	kind:member	struct:bpf_lru_locallist	typeref:struct:bpf_lru_locallist::list_head	access:public
load	sched/sched.h	/^	struct load_weight	load;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::load_weight	access:public
load_avg	sched/sched.h	/^		unsigned long	load_avg;$/;"	kind:member	struct:cfs_rq::__anon28	access:public
load_info	module-internal.h	/^struct load_info {$/;"	kind:struct
load_info::__anon34::info	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
load_info::__anon34::mod	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
load_info::__anon34::pcpu	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
load_info::__anon34::str	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
load_info::__anon34::sym	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
load_info::__anon34::vers	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
load_info::core_typeoffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	kind:member	struct:load_info	access:public
load_info::debug	module-internal.h	/^	struct _ddebug *debug;$/;"	kind:member	struct:load_info	typeref:struct:load_info::_ddebug	access:public
load_info::hdr	module-internal.h	/^	Elf_Ehdr *hdr;$/;"	kind:member	struct:load_info	access:public
load_info::index	module-internal.h	/^	} index;$/;"	kind:member	struct:load_info	typeref:struct:load_info::__anon34	access:public
load_info::init_typeoffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	kind:member	struct:load_info	access:public
load_info::len	module-internal.h	/^	unsigned long len;$/;"	kind:member	struct:load_info	access:public
load_info::mod	module-internal.h	/^	struct module *mod;$/;"	kind:member	struct:load_info	typeref:struct:load_info::module	access:public
load_info::mod_kallsyms_init_off	module-internal.h	/^	unsigned long mod_kallsyms_init_off;$/;"	kind:member	struct:load_info	access:public
load_info::name	module-internal.h	/^	const char *name;$/;"	kind:member	struct:load_info	access:public
load_info::num_debug	module-internal.h	/^	unsigned int num_debug;$/;"	kind:member	struct:load_info	access:public
load_info::sechdrs	module-internal.h	/^	Elf_Shdr *sechdrs;$/;"	kind:member	struct:load_info	access:public
load_info::secstrings	module-internal.h	/^	char *secstrings, *strtab;$/;"	kind:member	struct:load_info	access:public
load_info::sig_ok	module-internal.h	/^	bool sig_ok;$/;"	kind:member	struct:load_info	access:public
load_info::stroffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	kind:member	struct:load_info	access:public
load_info::strtab	module-internal.h	/^	char *secstrings, *strtab;$/;"	kind:member	struct:load_info	access:public
load_info::symoffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	kind:member	struct:load_info	access:public
load_last_update_time_copy	sched/sched.h	/^	u64			load_last_update_time_copy;$/;"	kind:member	struct:cfs_rq	access:public
local_list	bpf/bpf_lru_list.h	/^	struct bpf_lru_locallist __percpu *local_list;$/;"	kind:member	struct:bpf_common_lru	typeref:struct:bpf_common_lru::__percpu	access:public
lock	bpf/bpf_lru_list.h	/^	raw_spinlock_t lock;$/;"	kind:member	struct:bpf_lru_locallist	access:public
lock	bpf/percpu_freelist.h	/^	raw_spinlock_t lock;$/;"	kind:member	struct:pcpu_freelist_head	access:public
lock	locking/qspinlock_paravirt.h	/^	struct qspinlock *lock;$/;"	kind:member	struct:pv_hash_entry	typeref:struct:pv_hash_entry::qspinlock	access:public
lock	locking/rtmutex_common.h	/^	struct rt_mutex		*lock;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rt_mutex	access:public
lock	rcu/tree.h	/^	raw_spinlock_t __private lock;	\/* Root rcu_node's lock protects *\/$/;"	kind:member	struct:rcu_node	access:public
lock	sched/autogroup.h	/^	struct rw_semaphore	lock;$/;"	kind:member	struct:autogroup	typeref:struct:autogroup::rw_semaphore	access:public
lock	sched/cpudeadline.h	/^	raw_spinlock_t		lock;$/;"	kind:member	struct:cpudl	access:public
lock	sched/sched.h	/^	raw_spinlock_t		lock;$/;"	kind:member	struct:cfs_bandwidth	access:public
lock	sched/sched.h	/^	raw_spinlock_t		lock;$/;"	kind:member	struct:dl_bw	access:public
lock	sched/sched.h	/^	raw_spinlock_t		lock;$/;"	kind:member	struct:rq	access:public
lock_chain_count	locking/lockdep_internals.h	/^unsigned long lock_chain_count(void);$/;"	kind:prototype	signature:(void)
lock_chain_get_class	locking/lockdep_internals.h	/^struct lock_class *lock_chain_get_class(struct lock_chain *chain, int i);$/;"	kind:prototype	signature:(struct lock_chain *chain, int i)
lock_chains	locking/lockdep_internals.h	/^extern struct lock_chain lock_chains[];$/;"	kind:externvar
lock_class_ops	locking/lockdep_internals.h	/^	unsigned long lock_class_ops[MAX_LOCKDEP_KEYS];$/;"	kind:member	struct:lockdep_stats	access:public
lock_classes	locking/lockdep_internals.h	/^extern struct lock_class lock_classes[MAX_LOCKDEP_KEYS];$/;"	kind:externvar
lock_events	locking/lock_events.h	/^enum lock_events {$/;"	kind:enum
lock_usage_bit	locking/lockdep_internals.h	/^enum lock_usage_bit {$/;"	kind:enum
lockdep_count_backward_deps	locking/lockdep_internals.h	/^extern unsigned long lockdep_count_backward_deps(struct lock_class *);$/;"	kind:prototype	signature:(struct lock_class *)
lockdep_count_backward_deps	locking/lockdep_internals.h	/^lockdep_count_backward_deps(struct lock_class *class)$/;"	kind:function	signature:(struct lock_class *class)
lockdep_count_forward_deps	locking/lockdep_internals.h	/^extern unsigned long lockdep_count_forward_deps(struct lock_class *);$/;"	kind:prototype	signature:(struct lock_class *)
lockdep_count_forward_deps	locking/lockdep_internals.h	/^lockdep_count_forward_deps(struct lock_class *class)$/;"	kind:function	signature:(struct lock_class *class)
lockdep_next_lockchain	locking/lockdep_internals.h	/^long lockdep_next_lockchain(long i);$/;"	kind:prototype	signature:(long i)
lockdep_stack_hash_count	locking/lockdep_internals.h	/^u64 lockdep_stack_hash_count(void);$/;"	kind:prototype	signature:(void)
lockdep_stack_trace_count	locking/lockdep_internals.h	/^u64 lockdep_stack_trace_count(void);$/;"	kind:prototype	signature:(void)
lockdep_stats	locking/lockdep_internals.h	/^struct lockdep_stats {$/;"	kind:struct
lockdep_stats::chain_lookup_hits	locking/lockdep_internals.h	/^	unsigned long  chain_lookup_hits;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::chain_lookup_misses	locking/lockdep_internals.h	/^	unsigned int   chain_lookup_misses;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::hardirqs_off_events	locking/lockdep_internals.h	/^	unsigned long  hardirqs_off_events;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::hardirqs_on_events	locking/lockdep_internals.h	/^	unsigned long  hardirqs_on_events;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::lock_class_ops	locking/lockdep_internals.h	/^	unsigned long lock_class_ops[MAX_LOCKDEP_KEYS];$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::nr_cyclic_checks	locking/lockdep_internals.h	/^	unsigned int   nr_cyclic_checks;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::nr_find_usage_backwards_checks	locking/lockdep_internals.h	/^	unsigned int   nr_find_usage_backwards_checks;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::nr_find_usage_forwards_checks	locking/lockdep_internals.h	/^	unsigned int   nr_find_usage_forwards_checks;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::nr_redundant	locking/lockdep_internals.h	/^	unsigned int   nr_redundant;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::nr_redundant_checks	locking/lockdep_internals.h	/^	unsigned int   nr_redundant_checks;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::nr_unused_locks	locking/lockdep_internals.h	/^	int            nr_unused_locks;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::redundant_hardirqs_off	locking/lockdep_internals.h	/^	unsigned long  redundant_hardirqs_off;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::redundant_hardirqs_on	locking/lockdep_internals.h	/^	unsigned long  redundant_hardirqs_on;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::redundant_softirqs_off	locking/lockdep_internals.h	/^	unsigned long  redundant_softirqs_off;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::redundant_softirqs_on	locking/lockdep_internals.h	/^	unsigned long  redundant_softirqs_on;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::softirqs_off_events	locking/lockdep_internals.h	/^	unsigned long  softirqs_off_events;$/;"	kind:member	struct:lockdep_stats	access:public
lockdep_stats::softirqs_on_events	locking/lockdep_internals.h	/^	unsigned long  softirqs_on_events;$/;"	kind:member	struct:lockdep_stats	access:public
locked	locking/mcs_spinlock.h	/^	int locked; \/* 1 if lock acquired *\/$/;"	kind:member	struct:mcs_spinlock	access:public
lockevent_add	locking/lock_events.h	51;"	kind:macro
lockevent_add	locking/lock_events.h	56;"	kind:macro
lockevent_cond_inc	locking/lock_events.h	44;"	kind:macro
lockevent_cond_inc	locking/lock_events.h	57;"	kind:macro
lockevent_inc	locking/lock_events.h	43;"	kind:macro
lockevent_inc	locking/lock_events.h	55;"	kind:macro
lockevent_num	locking/lock_events.h	/^	lockevent_num,	\/* Total number of lock event counts *\/$/;"	kind:enumerator	enum:lock_events
lockevent_pv_hop	locking/qspinlock_stat.h	/^static inline void lockevent_pv_hop(int hopcnt)	{ }$/;"	kind:function	signature:(int hopcnt)
lockevent_pv_hop	locking/qspinlock_stat.h	/^static inline void lockevent_pv_hop(int hopcnt)$/;"	kind:function	signature:(int hopcnt)
lockevent_read	locking/qspinlock_stat.h	/^ssize_t lockevent_read(struct file *file, char __user *user_buf,$/;"	kind:function	signature:(struct file *file, char __user *user_buf, size_t count, loff_t *ppos)
logbuf_lock	printk/internal.h	/^extern raw_spinlock_t logbuf_lock;$/;"	kind:externvar
lost	events/internal.h	/^	local_t				lost;		\/* nr records lost   *\/$/;"	kind:member	struct:ring_buffer	access:public
lost_idle_time	sched/sched.h	/^	unsigned long		lost_idle_time;$/;"	kind:member	struct:rq	access:public
lowest_flag_domain	sched/sched.h	/^static inline struct sched_domain *lowest_flag_domain(int cpu, int flag)$/;"	kind:function	signature:(int cpu, int flag)
lru_list	bpf/bpf_lru_list.h	/^	struct bpf_lru_list lru_list;$/;"	kind:member	struct:bpf_common_lru	typeref:struct:bpf_common_lru::bpf_lru_list	access:public
lshift	trace/trace_probe.h	/^			unsigned char lshift;$/;"	kind:member	struct:fetch_insn::__anon15::__anon17	access:public
major	audit.h	/^	int		    major;      \/* syscall number *\/$/;"	kind:member	struct:audit_context	access:public
make_data_loc	trace/trace_probe.h	60;"	kind:macro
map	trace/tracing_map.h	/^	struct tracing_map		*map;$/;"	kind:member	struct:tracing_map_elt	typeref:struct:tracing_map_elt::tracing_map	access:public
map	trace/tracing_map.h	/^	struct tracing_map_array	*map;$/;"	kind:member	struct:tracing_map	typeref:struct:tracing_map::tracing_map_array	access:public
map_bits	trace/tracing_map.h	/^	unsigned int			map_bits;$/;"	kind:member	struct:tracing_map	access:public
map_size	trace/tracing_map.h	/^	unsigned int			map_size;$/;"	kind:member	struct:tracing_map	access:public
mask	sched/cpupri.h	/^	cpumask_var_t		mask;$/;"	kind:member	struct:cpupri_vec	access:public
mask_irq	irq/internals.h	/^extern void mask_irq(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
match	trace/trace.h	/^	regex_match_func	match;$/;"	kind:member	struct:regex	access:public
match	trace/trace_dynevent.h	/^	bool (*match)(const char *system, const char *event,$/;"	kind:member	struct:dyn_event_operations	access:public
max_bfs_queue_depth	locking/lockdep_internals.h	/^extern unsigned int max_bfs_queue_depth;$/;"	kind:externvar
max_buffer	trace/trace.h	/^	struct trace_buffer	max_buffer;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::trace_buffer	access:public
max_capacity	sched/sched.h	/^	unsigned long		max_capacity;		\/* Max per-CPU capacity in group *\/$/;"	kind:member	struct:sched_group_capacity	access:public
max_cpu_capacity	sched/sched.h	/^	unsigned long		max_cpu_capacity;$/;"	kind:member	struct:root_domain	access:public
max_elts	trace/tracing_map.h	/^	unsigned int			max_elts;$/;"	kind:member	struct:tracing_map	access:public
max_idle_balance_cost	sched/sched.h	/^	u64			max_idle_balance_cost;$/;"	kind:member	struct:rq	access:public
max_latency	trace/trace.h	/^	unsigned long		max_latency;$/;"	kind:member	struct:trace_array	access:public
max_lock	trace/trace.h	/^	arch_spinlock_t		max_lock;$/;"	kind:member	struct:trace_array	access:public
max_lockdep_depth	locking/lockdep_internals.h	/^extern unsigned int max_lockdep_depth;$/;"	kind:externvar
mcs	locking/qspinlock_paravirt.h	/^	struct mcs_spinlock	mcs;$/;"	kind:member	struct:pv_node	typeref:struct:pv_node::mcs_spinlock	access:public
mcs_spin_lock	locking/mcs_spinlock.h	/^void mcs_spin_lock(struct mcs_spinlock **lock, struct mcs_spinlock *node)$/;"	kind:function	signature:(struct mcs_spinlock **lock, struct mcs_spinlock *node)
mcs_spin_unlock	locking/mcs_spinlock.h	/^void mcs_spin_unlock(struct mcs_spinlock **lock, struct mcs_spinlock *node)$/;"	kind:function	signature:(struct mcs_spinlock **lock, struct mcs_spinlock *node)
mcs_spinlock	locking/mcs_spinlock.h	/^struct mcs_spinlock {$/;"	kind:struct
mcs_spinlock::count	locking/mcs_spinlock.h	/^	int count;  \/* nesting count, see qspinlock.c *\/$/;"	kind:member	struct:mcs_spinlock	access:public
mcs_spinlock::locked	locking/mcs_spinlock.h	/^	int locked; \/* 1 if lock acquired *\/$/;"	kind:member	struct:mcs_spinlock	access:public
mcs_spinlock::next	locking/mcs_spinlock.h	/^	struct mcs_spinlock *next;$/;"	kind:member	struct:mcs_spinlock	typeref:struct:mcs_spinlock::mcs_spinlock	access:public
mem_sleep_current	power/power.h	194;"	kind:macro
mem_sleep_states	power/power.h	/^extern const char *mem_sleep_states[];$/;"	kind:externvar
membarrier_state	sched/sched.h	/^	int membarrier_state;$/;"	kind:member	struct:rq	access:public
membarrier_switch_mm	sched/sched.h	/^static inline void membarrier_switch_mm(struct rq *rq,$/;"	kind:function	signature:(struct rq *rq, struct mm_struct *prev_mm, struct mm_struct *next_mm)
memcpy_common	events/internal.h	/^memcpy_common(void *dst, const void *src, unsigned long n)$/;"	kind:function	signature:(void *dst, const void *src, unsigned long n)
memcpy_skip	events/internal.h	/^memcpy_skip(void *dst, const void *src, unsigned long n)$/;"	kind:function	signature:(void *dst, const void *src, unsigned long n)
migrate_swap	sched/sched.h	/^extern int migrate_swap(struct task_struct *p, struct task_struct *t,$/;"	kind:prototype	signature:(struct task_struct *p, struct task_struct *t, int cpu, int scpu)
migrate_task_rq	sched/sched.h	/^	void (*migrate_task_rq)(struct task_struct *p, int new_cpu);$/;"	kind:member	struct:sched_class	access:public
migrate_task_to	sched/sched.h	/^extern int migrate_task_to(struct task_struct *p, int cpu);$/;"	kind:prototype	signature:(struct task_struct *p, int cpu)
min_capacity	sched/sched.h	/^	unsigned long		min_capacity;		\/* Min per-CPU capacity in group *\/$/;"	kind:member	struct:sched_group_capacity	access:public
min_vruntime	sched/sched.h	/^	u64			min_vruntime;$/;"	kind:member	struct:cfs_rq	access:public
min_vruntime_copy	sched/sched.h	/^	u64			min_vruntime_copy;$/;"	kind:member	struct:cfs_rq	access:public
misfit_task_load	sched/sched.h	/^	unsigned long		misfit_task_load;$/;"	kind:member	struct:rq	access:public
mmap	audit.h	/^		} mmap;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon12	access:public
mmap_count	events/internal.h	/^	atomic_t			mmap_count;$/;"	kind:member	struct:ring_buffer	access:public
mmap_locked	events/internal.h	/^	unsigned long			mmap_locked;$/;"	kind:member	struct:ring_buffer	access:public
mmap_user	events/internal.h	/^	struct user_struct		*mmap_user;$/;"	kind:member	struct:ring_buffer	typeref:struct:ring_buffer::user_struct	access:public
mod	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
mod	module-internal.h	/^	struct module *mod;$/;"	kind:member	struct:load_info	typeref:struct:load_info::module	access:public
mod_end	debug/kdb/kdb_private.h	/^		unsigned long mod_end;$/;"	kind:member	struct:__ksymtab	access:public
mod_kallsyms_init_off	module-internal.h	/^	unsigned long mod_kallsyms_init_off;$/;"	kind:member	struct:load_info	access:public
mod_name	debug/kdb/kdb_private.h	/^		const char *mod_name;	\/* Module containing symbol or$/;"	kind:member	struct:__ksymtab	access:public
mod_notrace	trace/trace.h	/^	struct list_head	mod_notrace;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
mod_start	debug/kdb/kdb_private.h	/^		unsigned long mod_start;$/;"	kind:member	struct:__ksymtab	access:public
mod_trace	trace/trace.h	/^	struct list_head	mod_trace;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
mod_verify_sig	module-internal.h	/^extern int mod_verify_sig(const void *mod, struct load_info *info);$/;"	kind:prototype	signature:(const void *mod, struct load_info *info)
mode	audit.h	/^			umode_t			mode;$/;"	kind:member	struct:audit_context::__anon4::__anon10	access:public
mode	audit.h	/^			umode_t			mode;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
mode	audit.h	/^	umode_t			mode;$/;"	kind:member	struct:audit_names	access:public
mode	time/tick-sched.h	/^	enum tick_device_mode mode;$/;"	kind:member	struct:tick_device	typeref:enum:tick_device::tick_device_mode	access:public
module	audit.h	/^		} module;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon14	access:public
module	trace/trace.h	/^	char			*module;$/;"	kind:member	struct:ftrace_mod_load	access:public
mq_getsetattr	audit.h	/^		} mq_getsetattr;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon7	access:public
mq_notify	audit.h	/^		} mq_notify;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon8	access:public
mq_open	audit.h	/^		} mq_open;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon10	access:public
mq_sendrecv	audit.h	/^		} mq_sendrecv;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon9	access:public
mqdes	audit.h	/^			mqd_t			mqdes;$/;"	kind:member	struct:audit_context::__anon4::__anon7	access:public
mqdes	audit.h	/^			mqd_t			mqdes;$/;"	kind:member	struct:audit_context::__anon4::__anon8	access:public
mqdes	audit.h	/^			mqd_t			mqdes;$/;"	kind:member	struct:audit_context::__anon4::__anon9	access:public
mqstat	audit.h	/^			struct mq_attr		mqstat;$/;"	kind:member	struct:audit_context::__anon4::__anon7	typeref:struct:audit_context::__anon4::__anon7::mq_attr	access:public
msg_len	audit.h	/^			size_t			msg_len;$/;"	kind:member	struct:audit_context::__anon4::__anon9	access:public
msg_prio	audit.h	/^			unsigned int		msg_prio;$/;"	kind:member	struct:audit_context::__anon4::__anon9	access:public
mutex_remove_waiter	locking/mutex-debug.h	/^extern void mutex_remove_waiter(struct mutex *lock, struct mutex_waiter *waiter,$/;"	kind:prototype	signature:(struct mutex *lock, struct mutex_waiter *waiter, struct task_struct *task)
mutex_remove_waiter	locking/mutex.h	13;"	kind:macro
mynode	rcu/tree.h	/^	struct rcu_node *mynode;	\/* This CPU's leaf of hierarchy *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::rcu_node	access:public
n_err_log_entries	trace/trace.h	/^	unsigned int		n_err_log_entries;$/;"	kind:member	struct:trace_array	access:public
n_fields	trace/tracing_map.h	/^	unsigned int			n_fields;$/;"	kind:member	struct:tracing_map	access:public
n_force_qs	rcu/tree.h	/^	unsigned long n_force_qs;		\/* Number of calls to *\/$/;"	kind:member	struct:rcu_state	access:public
n_force_qs_gpstart	rcu/tree.h	/^	unsigned long n_force_qs_gpstart;	\/* Snapshot of n_force_qs at *\/$/;"	kind:member	struct:rcu_state	access:public
n_force_qs_snap	rcu/tree.h	/^	unsigned long	n_force_qs_snap;$/;"	kind:member	struct:rcu_data	access:public
n_keys	trace/tracing_map.h	/^	unsigned int			n_keys;$/;"	kind:member	struct:tracing_map	access:public
n_pages	trace/tracing_map.h	/^	unsigned int n_pages;$/;"	kind:member	struct:tracing_map_array	access:public
n_vars	trace/tracing_map.h	/^	unsigned int			n_vars;$/;"	kind:member	struct:tracing_map	access:public
name	audit.h	/^			char			*name;$/;"	kind:member	struct:audit_context::__anon4::__anon14	access:public
name	audit.h	/^	struct filename		*name;$/;"	kind:member	struct:audit_names	typeref:struct:audit_names::filename	access:public
name	cgroup/cgroup-internal.h	/^	char		*name;			\/* Hierarchy name *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
name	module-internal.h	/^	const char *name;$/;"	kind:member	struct:load_info	access:public
name	printk/console_cmdline.h	/^	char	name[16];			\/* Name of the driver	    *\/$/;"	kind:member	struct:console_cmdline	access:public
name	rcu/tree.h	/^	const char *name;			\/* Name of structure. *\/$/;"	kind:member	struct:rcu_state	access:public
name	trace/trace.h	/^	char				*name;$/;"	kind:member	struct:event_trigger_data	access:public
name	trace/trace.h	/^	char			*name;$/;"	kind:member	struct:event_command	access:public
name	trace/trace.h	/^	char			*name;$/;"	kind:member	struct:ftrace_func_command	access:public
name	trace/trace.h	/^	char			*name;$/;"	kind:member	struct:trace_array	access:public
name	trace/trace.h	/^	const char		*name;$/;"	kind:member	struct:event_subsystem	access:public
name	trace/trace.h	/^	const char		*name;$/;"	kind:member	struct:ftrace_event_field	access:public
name	trace/trace.h	/^	const char		*name;$/;"	kind:member	struct:tracer	access:public
name	trace/trace.h	/^	const char	*name; \/* Will appear on the trace_options file *\/$/;"	kind:member	struct:tracer_opt	access:public
name	trace/trace_probe.h	/^	const char		*name;		\/* Name of type *\/$/;"	kind:member	struct:fetch_type	access:public
name	trace/trace_probe.h	/^	const char		*name;	\/* Name of this argument *\/$/;"	kind:member	struct:probe_arg	access:public
name	trace/trace_stat.h	/^	const char		*name;$/;"	kind:member	struct:tracer_stat	access:public
name_count	audit.h	/^	int		    name_count; \/* total records in names_list *\/$/;"	kind:member	struct:audit_context	access:public
name_len	audit.h	/^	int			name_len;	\/* number of chars to log *\/$/;"	kind:member	struct:audit_names	access:public
named_data	trace/trace.h	/^	struct event_trigger_data	*named_data;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::event_trigger_data	access:public
named_list	trace/trace.h	/^	struct list_head		named_list;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::list_head	access:public
names_list	audit.h	/^	struct list_head    names_list;	\/* struct audit_names->list anchor *\/$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::list_head	access:public
nargs	audit.h	/^			int nargs;$/;"	kind:member	struct:audit_context::__anon4::__anon5	access:public
ncpus	rcu/tree.h	/^	int ncpus;				\/* # CPUs seen so far. *\/$/;"	kind:member	struct:rcu_state	access:public
ncpus_snap	rcu/tree.h	/^	int ncpus_snap;				\/* # CPUs seen last time. *\/$/;"	kind:member	struct:rcu_state	access:public
nest	events/internal.h	/^	unsigned int			nest;		\/* nested writers    *\/$/;"	kind:member	struct:ring_buffer	access:public
net	audit.h	/^	struct net *net;$/;"	kind:member	struct:audit_netlink_list	typeref:struct:audit_netlink_list::net	access:public
newidle_balance	sched/sched.h	/^extern int newidle_balance(struct rq *this_rq, struct rq_flags *rf);$/;"	kind:prototype	signature:(struct rq *this_rq, struct rq_flags *rf)
newidle_balance	sched/sched.h	/^static inline int newidle_balance(struct rq *this_rq, struct rq_flags *rf) { return 0; }$/;"	kind:function	signature:(struct rq *this_rq, struct rq_flags *rf)
next	bpf/percpu_freelist.h	/^	struct pcpu_freelist_node *next;$/;"	kind:member	struct:pcpu_freelist_node	typeref:struct:pcpu_freelist_node::pcpu_freelist_node	access:public
next	locking/mcs_spinlock.h	/^	struct mcs_spinlock *next;$/;"	kind:member	struct:mcs_spinlock	typeref:struct:mcs_spinlock::mcs_spinlock	access:public
next	sched/sched.h	/^		int		next; \/* next highest *\/$/;"	kind:member	struct:rt_rq::__anon29	access:public
next	sched/sched.h	/^		u64		next;$/;"	kind:member	struct:dl_rq::__anon30	access:public
next	sched/sched.h	/^	const struct sched_class *next;$/;"	kind:member	struct:sched_class	typeref:struct:sched_class::sched_class	access:public
next	sched/sched.h	/^	struct perf_domain *next;$/;"	kind:member	struct:perf_domain	typeref:struct:perf_domain::perf_domain	access:public
next	sched/sched.h	/^	struct sched_entity	*next;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity	access:public
next	sched/sched.h	/^	struct sched_group	*next;			\/* Must be a circular list *\/$/;"	kind:member	struct:sched_group	typeref:struct:sched_group::sched_group	access:public
next	trace/trace.h	/^	struct tracer		*next;$/;"	kind:member	struct:tracer	typeref:struct:tracer::tracer	access:public
next_balance	sched/sched.h	/^	unsigned long		next_balance;$/;"	kind:member	struct:rq	access:public
next_elt	trace/tracing_map.h	/^	atomic_t			next_elt;$/;"	kind:member	struct:tracing_map	access:public
next_inactive_rotation	bpf/bpf_lru_list.h	/^	struct list_head *next_inactive_rotation;$/;"	kind:member	struct:bpf_lru_list	typeref:struct:bpf_lru_list::list_head	access:public
next_steal	bpf/bpf_lru_list.h	/^	u16 next_steal;$/;"	kind:member	struct:bpf_lru_locallist	access:public
next_tick	time/tick-sched.h	/^	ktime_t				next_tick;$/;"	kind:member	struct:tick_sched	access:public
next_timer	time/tick-sched.h	/^	u64				next_timer;$/;"	kind:member	struct:tick_sched	access:public
next_update	sched/sched.h	/^	unsigned long		next_update;$/;"	kind:member	struct:sched_group_capacity	access:public
nice	sched/autogroup.h	/^	int			nice;$/;"	kind:member	struct:autogroup	access:public
nice	trace/trace.h	/^	unsigned long		nice;$/;"	kind:member	struct:trace_array_cpu	access:public
noboot	trace/trace.h	/^	bool			noboot;$/;"	kind:member	struct:tracer	access:public
nocb_bypass	rcu/tree.h	/^	struct rcu_cblist nocb_bypass;	\/* Lock-contention-bypass CB list. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::rcu_cblist	access:public
nocb_bypass_first	rcu/tree.h	/^	unsigned long nocb_bypass_first; \/* Time (jiffies) of first enqueue. *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_bypass_timer	rcu/tree.h	/^	struct timer_list nocb_bypass_timer; \/* Force nocb_bypass flush. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::timer_list	access:public
nocb_cb_kthread	rcu/tree.h	/^	struct task_struct *nocb_cb_kthread;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::task_struct	access:public
nocb_cb_sleep	rcu/tree.h	/^	bool nocb_cb_sleep;		\/* Is the nocb CB thread asleep? *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_cb_wait	rcu/tree_plugin.h	/^static void nocb_cb_wait(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
nocb_cb_wq	rcu/tree.h	/^	struct swait_queue_head nocb_cb_wq; \/* For nocb kthreads to sleep on. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::swait_queue_head	access:public
nocb_defer_wakeup	rcu/tree.h	/^	int nocb_defer_wakeup;		\/* Defer wakeup of nocb_kthread. *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_gp_adv_time	rcu/tree.h	/^	unsigned long nocb_gp_adv_time;	\/* Last call_rcu() CB adv (jiffies). *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_gp_bypass	rcu/tree.h	/^	u8 nocb_gp_bypass;		\/* Found a bypass on last scan? *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_gp_gp	rcu/tree.h	/^	u8 nocb_gp_gp;			\/* GP to wait for on last scan? *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_gp_kthread	rcu/tree.h	/^	struct task_struct *nocb_gp_kthread;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::task_struct	access:public
nocb_gp_loops	rcu/tree.h	/^	unsigned long nocb_gp_loops;	\/* # passes through wait code. *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_gp_seq	rcu/tree.h	/^	unsigned long nocb_gp_seq;	\/*  If so, ->gp_seq to wait for. *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_gp_sleep	rcu/tree.h	/^	u8 nocb_gp_sleep;		\/* Is the nocb GP thread asleep? *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_gp_wait	rcu/tree_plugin.h	/^static void nocb_gp_wait(struct rcu_data *my_rdp)$/;"	kind:function	signature:(struct rcu_data *my_rdp)
nocb_gp_wq	rcu/tree.h	/^	struct swait_queue_head nocb_gp_wq; \/* For nocb kthreads to sleep on. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::swait_queue_head	access:public
nocb_gp_wq	rcu/tree.h	/^	struct swait_queue_head nocb_gp_wq[2];$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::swait_queue_head	access:public
nocb_lock	rcu/tree.h	/^	raw_spinlock_t nocb_lock;	\/* Guard following pair of fields. *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_lock_contended	rcu/tree.h	/^	atomic_t nocb_lock_contended;	\/* Contention experienced. *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_next_cb_rdp	rcu/tree.h	/^	struct rcu_data *nocb_next_cb_rdp;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::rcu_data	access:public
nocb_nobypass_count	rcu/tree.h	/^	int nocb_nobypass_count;	\/* # ->cblist enqueues at ^^^ time. *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_nobypass_last	rcu/tree.h	/^	unsigned long nocb_nobypass_last; \/* Last ->cblist enqueue (jiffies). *\/$/;"	kind:member	struct:rcu_data	access:public
nocb_nobypass_lim_per_jiffy	rcu/tree_plugin.h	/^int nocb_nobypass_lim_per_jiffy = 16 * 1000 \/ HZ;$/;"	kind:variable
nocb_timer	rcu/tree.h	/^	struct timer_list nocb_timer;	\/* Enforce finite deferral. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::timer_list	access:public
node	livepatch/patch.h	/^	struct list_head node;$/;"	kind:member	struct:klp_ops	typeref:struct:klp_ops::list_head	access:public
node	locking/qspinlock_paravirt.h	/^	struct pv_node   *node;$/;"	kind:member	struct:pv_hash_entry	typeref:struct:pv_hash_entry::pv_node	access:public
node	rcu/tree.h	/^	struct rcu_node node[NUM_RCU_NODES];	\/* Hierarchy. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::rcu_node	access:public
node	workqueue_internal.h	/^	struct list_head	node;		\/* A: anchored at pool->workers *\/$/;"	kind:member	struct:worker	typeref:struct:worker::list_head	access:public
nohz_balance_exit_idle	sched/sched.h	/^extern void nohz_balance_exit_idle(struct rq *rq);$/;"	kind:prototype	signature:(struct rq *rq)
nohz_balance_exit_idle	sched/sched.h	/^static inline void nohz_balance_exit_idle(struct rq *rq) { }$/;"	kind:function	signature:(struct rq *rq)
nohz_flags	sched/sched.h	/^	atomic_t nohz_flags;$/;"	kind:member	struct:rq	access:public
nohz_flags	sched/sched.h	2209;"	kind:macro
nohz_mode	time/tick-sched.h	/^	enum tick_nohz_mode		nohz_mode;$/;"	kind:member	struct:tick_sched	typeref:enum:tick_sched::tick_nohz_mode	access:public
nohz_tick_stopped	sched/sched.h	/^	unsigned int		nohz_tick_stopped;$/;"	kind:member	struct:rq	access:public
noirqdebug	irq/internals.h	/^extern bool noirqdebug;$/;"	kind:externvar
none	cgroup/cgroup-internal.h	/^	bool		none;			\/* User explicitly requested empty subsystem *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
nop_trace	trace/trace.h	/^extern struct tracer nop_trace;$/;"	kind:externvar
norm	rcu/tree.h	/^		u8 norm;$/;"	kind:member	struct:rcu_noqs::__anon32	access:public
not	trace/trace.h	/^	int			not;$/;"	kind:member	struct:filter_pred	access:public
notify_on_release	cgroup/cgroup-internal.h	/^static inline bool notify_on_release(const struct cgroup *cgrp)$/;"	kind:function	signature:(const struct cgroup *cgrp)
nr	sched/sched.h	/^		int		nr;$/;"	kind:member	struct:cfs_rq::__anon28	access:public
nr	trace/trace.h	/^	int			nr;$/;"	kind:member	struct:syscall_trace_enter	access:public
nr	trace/trace.h	/^	int			nr;$/;"	kind:member	struct:syscall_trace_exit	access:public
nr_args	trace/trace_probe.h	/^	unsigned int			nr_args;$/;"	kind:member	struct:trace_probe	access:public
nr_chain_hlocks	locking/lockdep_internals.h	/^extern int nr_chain_hlocks;$/;"	kind:externvar
nr_cyclic_checks	locking/lockdep_internals.h	/^	unsigned int   nr_cyclic_checks;$/;"	kind:member	struct:lockdep_stats	access:public
nr_events	trace/trace.h	/^	int				nr_events;$/;"	kind:member	struct:trace_subsystem_dir	access:public
nr_find_usage_backwards_checks	locking/lockdep_internals.h	/^	unsigned int   nr_find_usage_backwards_checks;$/;"	kind:member	struct:lockdep_stats	access:public
nr_find_usage_forwards_checks	locking/lockdep_internals.h	/^	unsigned int   nr_find_usage_forwards_checks;$/;"	kind:member	struct:lockdep_stats	access:public
nr_hardirq_chains	locking/lockdep_internals.h	/^extern unsigned int nr_hardirq_chains;$/;"	kind:externvar
nr_iowait	sched/sched.h	/^	atomic_t		nr_iowait;$/;"	kind:member	struct:rq	access:public
nr_list_entries	locking/lockdep_internals.h	/^extern unsigned long nr_list_entries;$/;"	kind:externvar
nr_load_updates	sched/sched.h	/^	unsigned long		nr_load_updates;$/;"	kind:member	struct:rq	access:public
nr_lock_classes	locking/lockdep_internals.h	/^extern unsigned long nr_lock_classes;$/;"	kind:externvar
nr_numa_running	sched/sched.h	/^	unsigned int		nr_numa_running;$/;"	kind:member	struct:rq	access:public
nr_pages	events/internal.h	/^	int				nr_pages;	\/* nr of data pages  *\/$/;"	kind:member	struct:ring_buffer	access:public
nr_periods	sched/sched.h	/^	int			nr_periods;$/;"	kind:member	struct:cfs_bandwidth	access:public
nr_preferred_running	sched/sched.h	/^	unsigned int		nr_preferred_running;$/;"	kind:member	struct:rq	access:public
nr_process_chains	locking/lockdep_internals.h	/^extern unsigned int nr_process_chains;$/;"	kind:externvar
nr_redundant	locking/lockdep_internals.h	/^	unsigned int   nr_redundant;$/;"	kind:member	struct:lockdep_stats	access:public
nr_redundant_checks	locking/lockdep_internals.h	/^	unsigned int   nr_redundant_checks;$/;"	kind:member	struct:lockdep_stats	access:public
nr_running	sched/sched.h	/^	unsigned int		nr_running;$/;"	kind:member	struct:cfs_rq	access:public
nr_running	sched/sched.h	/^	unsigned int		nr_running;$/;"	kind:member	struct:rq	access:public
nr_scans	bpf/bpf_lru_list.h	/^	unsigned int nr_scans;$/;"	kind:member	struct:bpf_lru	access:public
nr_softirq_chains	locking/lockdep_internals.h	/^extern unsigned int nr_softirq_chains;$/;"	kind:externvar
nr_spread_over	sched/sched.h	/^	unsigned int		nr_spread_over;$/;"	kind:member	struct:cfs_rq	access:public
nr_stack_trace_entries	locking/lockdep_internals.h	/^extern unsigned long nr_stack_trace_entries;$/;"	kind:externvar
nr_switches	sched/sched.h	/^	u64			nr_switches;$/;"	kind:member	struct:rq	access:public
nr_tasks	cgroup/cgroup-internal.h	/^	int			nr_tasks;$/;"	kind:member	struct:cgroup_taskset	access:public
nr_throttled	sched/sched.h	/^	int			nr_throttled;$/;"	kind:member	struct:cfs_bandwidth	access:public
nr_topts	trace/trace.h	/^	int			nr_topts;$/;"	kind:member	struct:trace_array	access:public
nr_uninterruptible	sched/sched.h	/^	unsigned long		nr_uninterruptible;$/;"	kind:member	struct:rq	access:public
nr_unused_locks	locking/lockdep_internals.h	/^	int            nr_unused_locks;$/;"	kind:member	struct:lockdep_stats	access:public
ns	cgroup/cgroup-internal.h	/^	struct cgroup_namespace	*ns;$/;"	kind:member	struct:cgroup_fs_context	typeref:struct:cgroup_fs_context::cgroup_namespace	access:public
ns2usecs	trace/trace.h	/^extern unsigned long long ns2usecs(u64 nsec);$/;"	kind:prototype	signature:(u64 nsec)
nsecs_to_usecs	trace/trace.h	/^extern unsigned long nsecs_to_usecs(unsigned long nsecs);$/;"	kind:prototype	signature:(unsigned long nsecs)
nsleep	time/posix-timers.h	/^	int	(*nsleep)(const clockid_t which_clock, int flags,$/;"	kind:member	struct:k_clock	access:public
ntp_clear	time/ntp_internal.h	/^extern void ntp_clear(void);$/;"	kind:prototype	signature:(void)
ntp_get_next_leap	time/ntp_internal.h	/^extern ktime_t ntp_get_next_leap(void);$/;"	kind:prototype	signature:(void)
ntp_init	time/ntp_internal.h	/^extern void ntp_init(void);$/;"	kind:prototype	signature:(void)
ntp_tick_length	time/ntp_internal.h	/^extern u64 ntp_tick_length(void);$/;"	kind:prototype	signature:(void)
num_debug	module-internal.h	/^	unsigned int num_debug;$/;"	kind:member	struct:load_info	access:public
num_physpages	power/power.h	/^	unsigned long		num_physpages;$/;"	kind:member	struct:swsusp_info	access:public
num_rcu_lvl	rcu/rcu.h	/^extern int num_rcu_lvl[];$/;"	kind:externvar
numa_faults_stats	sched/sched.h	/^enum numa_faults_stats {$/;"	kind:enum
numa_migrate_on	sched/sched.h	/^	unsigned int		numa_migrate_on;$/;"	kind:member	struct:rq	access:public
numa_topology_type	sched/sched.h	/^enum numa_topology_type {$/;"	kind:enum
offset	trace/trace.h	/^	int			offset;$/;"	kind:member	struct:ftrace_event_field	access:public
offset	trace/trace.h	/^	int 			offset;$/;"	kind:member	struct:filter_pred	access:public
offset	trace/trace_probe.h	/^			int offset;$/;"	kind:member	struct:fetch_insn::__anon15::__anon16	access:public
offset	trace/trace_probe.h	/^	unsigned int		offset;	\/* Offset from argument entry *\/$/;"	kind:member	struct:probe_arg	access:public
offset	trace/tracing_map.h	/^		unsigned int			offset;$/;"	kind:member	union:tracing_map_field::__anon22	access:public
oflag	audit.h	/^			int			oflag;$/;"	kind:member	struct:audit_context::__anon4::__anon10	access:public
on_list	sched/sched.h	/^	int			on_list;$/;"	kind:member	struct:cfs_rq	access:public
online	sched/sched.h	/^	cpumask_var_t		online;$/;"	kind:member	struct:root_domain	access:public
online	sched/sched.h	/^	int			online;$/;"	kind:member	struct:rq	access:public
online_fair_sched_group	sched/sched.h	/^extern void online_fair_sched_group(struct task_group *tg);$/;"	kind:prototype	signature:(struct task_group *tg)
op	trace/trace.h	/^	int 			op;$/;"	kind:member	struct:filter_pred	access:public
op	trace/trace_probe.h	/^	enum fetch_op op;$/;"	kind:member	struct:fetch_insn	typeref:enum:fetch_insn::fetch_op	access:public
open	trace/trace.h	/^	void			(*open)(struct trace_iterator *iter);$/;"	kind:member	struct:tracer	access:public
ops	trace/trace.h	/^	struct event_trigger_ops	*ops;$/;"	kind:member	struct:event_trigger_data	typeref:struct:event_trigger_data::event_trigger_ops	access:public
ops	trace/trace.h	/^	struct ftrace_ops	*ops;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::ftrace_ops	access:public
ops	trace/trace.h	/^	unsigned short		*ops;$/;"	kind:member	struct:filter_pred	access:public
ops	trace/trace_dynevent.h	/^	struct dyn_event_operations	*ops;$/;"	kind:member	struct:dyn_event	typeref:struct:dyn_event::dyn_event_operations	access:public
ops	trace/tracing_map.h	/^	const struct tracing_map_ops	*ops;$/;"	kind:member	struct:tracing_map	typeref:struct:tracing_map::tracing_map_ops	access:public
opt	trace/trace.h	/^	struct tracer_opt		*opt;$/;"	kind:member	struct:trace_option_dentry	typeref:struct:trace_option_dentry::tracer_opt	access:public
options	printk/console_cmdline.h	/^	char	*options;			\/* Options for the driver   *\/$/;"	kind:member	struct:console_cmdline	access:public
options	trace/trace.h	/^	struct dentry		*options;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::dentry	access:public
opts	trace/trace.h	/^	struct tracer_opt	*opts;$/;"	kind:member	struct:tracer_flags	typeref:struct:tracer_flags::tracer_opt	access:public
osid	audit.h	/^			u32			osid;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
osid	audit.h	/^	u32			osid;$/;"	kind:member	struct:audit_names	access:public
overloaded	sched/sched.h	/^	int			overloaded;$/;"	kind:member	struct:dl_rq	access:public
overloaded	sched/sched.h	/^	int			overloaded;$/;"	kind:member	struct:rt_rq	access:public
overutilized	sched/sched.h	/^	int			overutilized;$/;"	kind:member	struct:root_domain	access:public
overwrite	events/internal.h	/^	int				overwrite;	\/* can overwrite itself *\/$/;"	kind:member	struct:ring_buffer	access:public
page_order	events/internal.h	/^	int				page_order;	\/* allocation order  *\/$/;"	kind:member	struct:ring_buffer	access:public
page_order	events/internal.h	/^static inline int page_order(struct ring_buffer *rb)$/;"	kind:function	signature:(struct ring_buffer *rb)
pages	power/power.h	/^	unsigned long		pages;$/;"	kind:member	struct:swsusp_info	access:public
pages	trace/tracing_map.h	/^	void **pages;$/;"	kind:member	struct:tracing_map_array	access:public
panic_on_rcu_stall	rcu/tree_stall.h	/^static void panic_on_rcu_stall(void)$/;"	kind:function	signature:(void)
param	trace/trace_probe.h	/^		unsigned int param;$/;"	kind:member	union:fetch_insn::__anon15	access:public
parent	rcu/tree.h	/^	struct rcu_node *parent;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::rcu_node	access:public
parent	sched/sched.h	/^	struct task_group	*parent;$/;"	kind:member	struct:task_group	typeref:struct:task_group::task_group	access:public
parent_len	audit.h	/^extern int parent_len(const char *path);$/;"	kind:prototype	signature:(const char *path)
parse_rcu_nocb_poll	rcu/tree_plugin.h	/^static int __init parse_rcu_nocb_poll(char *arg)$/;"	kind:function	signature:(char *arg)
pass_exception	debug/debug_core.h	/^	int			pass_exception;$/;"	kind:member	struct:kgdb_state	access:public
pattern	trace/trace.h	/^	char			pattern[MAX_FILTER_STR_VAL];$/;"	kind:member	struct:regex	access:public
pause_named_trigger	trace/trace.h	/^extern void pause_named_trigger(struct event_trigger_data *data);$/;"	kind:prototype	signature:(struct event_trigger_data *data)
paused	events/internal.h	/^	int				paused;		\/* can write into ring buffer *\/$/;"	kind:member	struct:ring_buffer	access:public
paused	trace/trace.h	/^	bool				paused;$/;"	kind:member	struct:event_trigger_data	access:public
paused_tmp	trace/trace.h	/^	bool				paused_tmp;$/;"	kind:member	struct:event_trigger_data	access:public
pcpu	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
pcpu_freelist	bpf/percpu_freelist.h	/^struct pcpu_freelist {$/;"	kind:struct
pcpu_freelist::freelist	bpf/percpu_freelist.h	/^	struct pcpu_freelist_head __percpu *freelist;$/;"	kind:member	struct:pcpu_freelist	typeref:struct:pcpu_freelist::__percpu	access:public
pcpu_freelist_destroy	bpf/percpu_freelist.h	/^void pcpu_freelist_destroy(struct pcpu_freelist *s);$/;"	kind:prototype	signature:(struct pcpu_freelist *s)
pcpu_freelist_head	bpf/percpu_freelist.h	/^struct pcpu_freelist_head {$/;"	kind:struct
pcpu_freelist_head::first	bpf/percpu_freelist.h	/^	struct pcpu_freelist_node *first;$/;"	kind:member	struct:pcpu_freelist_head	typeref:struct:pcpu_freelist_head::pcpu_freelist_node	access:public
pcpu_freelist_head::lock	bpf/percpu_freelist.h	/^	raw_spinlock_t lock;$/;"	kind:member	struct:pcpu_freelist_head	access:public
pcpu_freelist_init	bpf/percpu_freelist.h	/^int pcpu_freelist_init(struct pcpu_freelist *);$/;"	kind:prototype	signature:(struct pcpu_freelist *)
pcpu_freelist_node	bpf/percpu_freelist.h	/^struct pcpu_freelist_node {$/;"	kind:struct
pcpu_freelist_node::next	bpf/percpu_freelist.h	/^	struct pcpu_freelist_node *next;$/;"	kind:member	struct:pcpu_freelist_node	typeref:struct:pcpu_freelist_node::pcpu_freelist_node	access:public
pcpu_freelist_pop	bpf/percpu_freelist.h	/^struct pcpu_freelist_node *pcpu_freelist_pop(struct pcpu_freelist *);$/;"	kind:prototype	signature:(struct pcpu_freelist *)
pcpu_freelist_populate	bpf/percpu_freelist.h	/^void pcpu_freelist_populate(struct pcpu_freelist *s, void *buf, u32 elem_size,$/;"	kind:prototype	signature:(struct pcpu_freelist *s, void *buf, u32 elem_size, u32 nr_elems)
pcpu_freelist_push	bpf/percpu_freelist.h	/^void pcpu_freelist_push(struct pcpu_freelist *, struct pcpu_freelist_node *);$/;"	kind:prototype	signature:(struct pcpu_freelist *, struct pcpu_freelist_node *)
pd	sched/sched.h	/^	struct perf_domain __rcu *pd;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::__rcu	access:public
percpu	bpf/bpf_lru_list.h	/^	bool percpu;$/;"	kind:member	struct:bpf_lru	access:public
percpu_dir	trace/trace.h	/^	struct dentry		*percpu_dir;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::dentry	access:public
percpu_lru	bpf/bpf_lru_list.h	/^		struct bpf_lru_list __percpu *percpu_lru;$/;"	kind:member	union:bpf_lru::__anon33	typeref:struct:bpf_lru::__anon33::__percpu	access:public
perf_aux_size	events/internal.h	/^static inline unsigned long perf_aux_size(struct ring_buffer *rb)$/;"	kind:function	signature:(struct ring_buffer *rb)
perf_data_size	events/internal.h	/^static inline unsigned long perf_data_size(struct ring_buffer *rb)$/;"	kind:function	signature:(struct ring_buffer *rb)
perf_domain	sched/sched.h	/^struct perf_domain {$/;"	kind:struct
perf_domain::em_pd	sched/sched.h	/^	struct em_perf_domain *em_pd;$/;"	kind:member	struct:perf_domain	typeref:struct:perf_domain::em_perf_domain	access:public
perf_domain::next	sched/sched.h	/^	struct perf_domain *next;$/;"	kind:member	struct:perf_domain	typeref:struct:perf_domain::perf_domain	access:public
perf_domain::rcu	sched/sched.h	/^	struct rcu_head rcu;$/;"	kind:member	struct:perf_domain	typeref:struct:perf_domain::rcu_head	access:public
perf_domain_span	sched/sched.h	2454;"	kind:macro
perf_domain_span	sched/sched.h	2465;"	kind:macro
perf_event_aux_event	events/internal.h	/^void perf_event_aux_event(struct perf_event *event, unsigned long head,$/;"	kind:prototype	signature:(struct perf_event *event, unsigned long head, unsigned long size, u64 flags)
perf_event_wakeup	events/internal.h	/^extern void perf_event_wakeup(struct perf_event *event);$/;"	kind:prototype	signature:(struct perf_event *event)
perf_ftrace_event_register	trace/trace.h	/^int perf_ftrace_event_register(struct trace_event_call *call,$/;"	kind:prototype	signature:(struct trace_event_call *call, enum trace_reg type, void *data)
perf_ftrace_event_register	trace/trace.h	1920;"	kind:macro
perf_mmap_to_page	events/internal.h	/^perf_mmap_to_page(struct ring_buffer *rb, unsigned long pgoff);$/;"	kind:prototype	signature:(struct ring_buffer *rb, unsigned long pgoff)
perf_user_stack_pointer	events/internal.h	239;"	kind:macro
perf_user_stack_pointer	events/internal.h	246;"	kind:macro
period	sched/sched.h	/^	ktime_t			period;$/;"	kind:member	struct:cfs_bandwidth	access:public
period_active	sched/sched.h	/^	u8			period_active;$/;"	kind:member	struct:cfs_bandwidth	access:public
period_timer	sched/sched.h	/^	struct hrtimer		period_timer;$/;"	kind:member	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::hrtimer	access:public
perm_gid	audit.h	/^			gid_t			perm_gid;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
perm_mode	audit.h	/^			umode_t			perm_mode;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
perm_uid	audit.h	/^			uid_t			perm_uid;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
permitted	audit.h	/^	kernel_cap_t		permitted;$/;"	kind:member	struct:audit_cap_data	access:public
personality	audit.h	/^	unsigned long	    personality;$/;"	kind:member	struct:audit_context	access:public
pi_tree_entry	locking/rtmutex_common.h	/^	struct rb_node          pi_tree_entry;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rb_node	access:public
pick_next_task	sched/sched.h	/^	struct task_struct * (*pick_next_task)(struct rq *rq,$/;"	kind:member	struct:sched_class	typeref:struct:sched_class::pick_next_task	access:public
pid	audit.h	/^			pid_t			pid;$/;"	kind:member	struct:audit_context::__anon4::__anon11	access:public
pid	audit.h	/^	pid_t		    pid, ppid;$/;"	kind:member	struct:audit_context	access:public
pid	trace/trace.h	/^	pid_t			pid;$/;"	kind:member	struct:trace_array_cpu	access:public
pid_max	trace/trace.h	/^	int				pid_max;$/;"	kind:member	struct:trace_pid_list	access:public
pid_max	trace/trace.h	/^extern int pid_max;$/;"	kind:externvar
pids	trace/trace.h	/^	unsigned long			*pids;$/;"	kind:member	struct:trace_pid_list	access:public
pipe_close	trace/trace.h	/^	void			(*pipe_close)(struct trace_iterator *iter);$/;"	kind:member	struct:tracer	access:public
pipe_open	trace/trace.h	/^	void			(*pipe_open)(struct trace_iterator *iter);$/;"	kind:member	struct:tracer	access:public
pm_autosleep_init	power/power.h	/^extern int pm_autosleep_init(void);$/;"	kind:prototype	signature:(void)
pm_autosleep_init	power/power.h	/^static inline int pm_autosleep_init(void) { return 0; }$/;"	kind:function	signature:(void)
pm_autosleep_lock	power/power.h	/^extern int pm_autosleep_lock(void);$/;"	kind:prototype	signature:(void)
pm_autosleep_lock	power/power.h	/^static inline int pm_autosleep_lock(void) { return 0; }$/;"	kind:function	signature:(void)
pm_autosleep_set_state	power/power.h	/^extern int pm_autosleep_set_state(suspend_state_t state);$/;"	kind:prototype	signature:(suspend_state_t state)
pm_autosleep_state	power/power.h	/^extern suspend_state_t pm_autosleep_state(void);$/;"	kind:prototype	signature:(void)
pm_autosleep_state	power/power.h	/^static inline suspend_state_t pm_autosleep_state(void) { return PM_SUSPEND_ON; }$/;"	kind:function	signature:(void)
pm_autosleep_unlock	power/power.h	/^extern void pm_autosleep_unlock(void);$/;"	kind:prototype	signature:(void)
pm_autosleep_unlock	power/power.h	/^static inline void pm_autosleep_unlock(void) {}$/;"	kind:function	signature:(void)
pm_labels	power/power.h	/^extern const char * const pm_labels[];$/;"	kind:externvar
pm_notifier_call_chain	power/power.h	/^extern int pm_notifier_call_chain(unsigned long val);$/;"	kind:prototype	signature:(unsigned long val)
pm_show_wakelocks	power/power.h	/^extern ssize_t pm_show_wakelocks(char *buf, bool show_active);$/;"	kind:prototype	signature:(char *buf, bool show_active)
pm_states	power/power.h	/^extern const char *pm_states[];$/;"	kind:externvar
pm_test_level	power/power.h	/^extern int pm_test_level;$/;"	kind:externvar
pm_test_level	power/power.h	246;"	kind:macro
pm_wake_lock	power/power.h	/^extern int pm_wake_lock(const char *buf);$/;"	kind:prototype	signature:(const char *buf)
pm_wake_unlock	power/power.h	/^extern int pm_wake_unlock(const char *buf);$/;"	kind:prototype	signature:(const char *buf)
policy	trace/trace.h	/^	unsigned long		policy;$/;"	kind:member	struct:trace_array_cpu	access:public
poll	events/internal.h	/^	atomic_t			poll;		\/* POLL_ for wakeups *\/$/;"	kind:member	struct:ring_buffer	access:public
pool	workqueue_internal.h	/^	struct worker_pool	*pool;		\/* A: the associated pool *\/$/;"	kind:member	struct:worker	typeref:struct:worker::worker_pool	access:public
portid	audit.h	/^	__u32 portid;$/;"	kind:member	struct:audit_netlink_list	access:public
posix_timer_event	time/posix-timers.h	/^int posix_timer_event(struct k_itimer *timr, int si_private);$/;"	kind:prototype	signature:(struct k_itimer *timr, int si_private)
post_init_entity_util_avg	sched/sched.h	/^extern void post_init_entity_util_avg(struct task_struct *p);$/;"	kind:prototype	signature:(struct task_struct *p)
power_attr	power/power.h	78;"	kind:macro
power_attr_ro	power/power.h	88;"	kind:macro
ppid	audit.h	/^	pid_t		    pid, ppid;$/;"	kind:member	struct:audit_context	access:public
preallocated_names	audit.h	/^	struct audit_names  preallocated_names[AUDIT_NAMES];$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::audit_names	access:public
preempt_timestamp	trace/trace.h	/^	u64			preempt_timestamp;$/;"	kind:member	struct:trace_array_cpu	access:public
preloaded_dst_csets	cgroup/cgroup-internal.h	/^	struct list_head	preloaded_dst_csets;$/;"	kind:member	struct:cgroup_mgctx	typeref:struct:cgroup_mgctx::list_head	access:public
preloaded_src_csets	cgroup/cgroup-internal.h	/^	struct list_head	preloaded_src_csets;$/;"	kind:member	struct:cgroup_mgctx	typeref:struct:cgroup_mgctx::list_head	access:public
prev_irq_time	sched/sched.h	/^	u64			prev_irq_time;$/;"	kind:member	struct:rq	access:public
prev_mm	sched/sched.h	/^	struct mm_struct	*prev_mm;$/;"	kind:member	struct:rq	typeref:struct:rq::mm_struct	access:public
prev_steal_time	sched/sched.h	/^	u64			prev_steal_time;$/;"	kind:member	struct:rq	access:public
prev_steal_time_rq	sched/sched.h	/^	u64			prev_steal_time_rq;$/;"	kind:member	struct:rq	access:public
pri_to_cpu	sched/cpupri.h	/^	struct cpupri_vec	pri_to_cpu[CPUPRI_NR_PRIORITIES];$/;"	kind:member	struct:cpupri	typeref:struct:cpupri::cpupri_vec	access:public
print	trace/trace.h	/^	int			(*print)(struct seq_file *m,$/;"	kind:member	struct:event_trigger_ops	access:public
print	trace/trace.h	/^	int			(*print)(struct seq_file *m,$/;"	kind:member	struct:ftrace_probe_ops	access:public
print	trace/trace_probe.h	/^	print_type_func_t	print;		\/* Print functions *\/$/;"	kind:member	struct:fetch_type	access:public
print_bpf_insn	bpf/disasm.h	/^void print_bpf_insn(const struct bpf_insn_cbs *cbs,$/;"	kind:prototype	signature:(const struct bpf_insn_cbs *cbs, const struct bpf_insn *insn, bool allow_ptr_leaks)
print_cfs_rq	sched/sched.h	/^extern void print_cfs_rq(struct seq_file *m, int cpu, struct cfs_rq *cfs_rq);$/;"	kind:prototype	signature:(struct seq_file *m, int cpu, struct cfs_rq *cfs_rq)
print_cfs_stats	sched/sched.h	/^extern void print_cfs_stats(struct seq_file *m, int cpu);$/;"	kind:prototype	signature:(struct seq_file *m, int cpu)
print_cpu_stall	rcu/tree_stall.h	/^static void print_cpu_stall(void)$/;"	kind:function	signature:(void)
print_cpu_stall_fast_no_hz	rcu/tree_stall.h	/^static void print_cpu_stall_fast_no_hz(char *cp, int cpu)$/;"	kind:function	signature:(char *cp, int cpu)
print_cpu_stall_info	rcu/tree_stall.h	/^static void print_cpu_stall_info(int cpu)$/;"	kind:function	signature:(int cpu)
print_dl_rq	sched/sched.h	/^extern void print_dl_rq(struct seq_file *m, int cpu, struct dl_rq *dl_rq);$/;"	kind:prototype	signature:(struct seq_file *m, int cpu, struct dl_rq *dl_rq)
print_dl_stats	sched/sched.h	/^extern void print_dl_stats(struct seq_file *m, int cpu);$/;"	kind:prototype	signature:(struct seq_file *m, int cpu)
print_event_filter	trace/trace.h	/^extern void print_event_filter(struct trace_event_file *file,$/;"	kind:prototype	signature:(struct trace_event_file *file, struct trace_seq *s)
print_graph_function_flags	trace/trace.h	/^print_graph_function_flags(struct trace_iterator *iter, u32 flags)$/;"	kind:function	signature:(struct trace_iterator *iter, u32 flags)
print_graph_function_flags	trace/trace.h	/^print_graph_function_flags(struct trace_iterator *iter, u32 flags);$/;"	kind:prototype	signature:(struct trace_iterator *iter, u32 flags)
print_graph_headers_flags	trace/trace.h	/^extern void print_graph_headers_flags(struct seq_file *s, u32 flags);$/;"	kind:prototype	signature:(struct seq_file *s, u32 flags)
print_header	trace/trace.h	/^	void			(*print_header)(struct seq_file *m);$/;"	kind:member	struct:tracer	access:public
print_irq_desc	irq/debug.h	/^static inline void print_irq_desc(unsigned int irq, struct irq_desc *desc)$/;"	kind:function	signature:(unsigned int irq, struct irq_desc *desc)
print_line	trace/trace.h	/^	enum print_line_t	(*print_line)(struct trace_iterator *iter);$/;"	kind:member	struct:tracer	typeref:enum:tracer::print_line	access:public
print_max	trace/trace.h	/^	bool			print_max;$/;"	kind:member	struct:tracer	access:public
print_numa_stats	sched/sched.h	/^print_numa_stats(struct seq_file *m, int node, unsigned long tsf,$/;"	kind:prototype	signature:(struct seq_file *m, int node, unsigned long tsf, unsigned long tpf, unsigned long gsf, unsigned long gpf)
print_other_cpu_stall	rcu/tree_stall.h	/^static void print_other_cpu_stall(unsigned long gp_seq)$/;"	kind:function	signature:(unsigned long gp_seq)
print_probe_args	trace/trace_probe_tmpl.h	/^print_probe_args(struct trace_seq *s, struct probe_arg *args, int nr_args,$/;"	kind:function	signature:(struct trace_seq *s, struct probe_arg *args, int nr_args, u8 *data, void *field)
print_rt_rq	sched/sched.h	/^extern void print_rt_rq(struct seq_file *m, int cpu, struct rt_rq *rt_rq);$/;"	kind:prototype	signature:(struct seq_file *m, int cpu, struct rt_rq *rt_rq)
print_rt_stats	sched/sched.h	/^extern void print_rt_stats(struct seq_file *m, int cpu);$/;"	kind:prototype	signature:(struct seq_file *m, int cpu)
print_subsystem_event_filter	trace/trace.h	/^extern void print_subsystem_event_filter(struct event_subsystem *system,$/;"	kind:prototype	signature:(struct event_subsystem *system, struct trace_seq *s)
print_trace_header	trace/trace.h	/^void print_trace_header(struct seq_file *m, struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct seq_file *m, struct trace_iterator *iter)
print_trace_line	trace/trace.h	/^enum print_line_t print_trace_line(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
print_type_func_t	trace/trace_probe.h	/^typedef int (*print_type_func_t)(struct trace_seq *, void *, void *);$/;"	kind:typedef
printk_safe_enter_irq	printk/internal.h	38;"	kind:macro
printk_safe_enter_irq	printk/internal.h	64;"	kind:macro
printk_safe_enter_irqsave	printk/internal.h	26;"	kind:macro
printk_safe_enter_irqsave	printk/internal.h	61;"	kind:macro
printk_safe_exit_irq	printk/internal.h	44;"	kind:macro
printk_safe_exit_irq	printk/internal.h	65;"	kind:macro
printk_safe_exit_irqrestore	printk/internal.h	32;"	kind:macro
printk_safe_exit_irqrestore	printk/internal.h	62;"	kind:macro
prio	audit.h	/^	u64		    prio;$/;"	kind:member	struct:audit_context	access:public
prio	locking/rtmutex_common.h	/^	int prio;$/;"	kind:member	struct:rt_mutex_waiter	access:public
prio_changed	sched/sched.h	/^	void (*prio_changed) (struct rq *this_rq, struct task_struct *task,$/;"	kind:member	struct:sched_class	access:public
private_data	bpf/disasm.h	/^	void			*private_data;$/;"	kind:member	struct:bpf_insn_cbs	access:public
private_data	trace/trace.h	/^	void				*private_data;$/;"	kind:member	struct:event_trigger_data	access:public
private_data	trace/tracing_map.h	/^	void				*private_data;$/;"	kind:member	struct:tracing_map	access:public
private_data	trace/tracing_map.h	/^	void				*private_data;$/;"	kind:member	struct:tracing_map_elt	access:public
probe_arg	trace/trace_probe.h	/^struct probe_arg {$/;"	kind:struct
probe_arg::code	trace/trace_probe.h	/^	struct fetch_insn	*code;$/;"	kind:member	struct:probe_arg	typeref:struct:probe_arg::fetch_insn	access:public
probe_arg::comm	trace/trace_probe.h	/^	const char		*comm;	\/* Command of this argument *\/$/;"	kind:member	struct:probe_arg	access:public
probe_arg::count	trace/trace_probe.h	/^	unsigned int		count;	\/* Array count *\/$/;"	kind:member	struct:probe_arg	access:public
probe_arg::dynamic	trace/trace_probe.h	/^	bool			dynamic;\/* Dynamic array (string) is used *\/$/;"	kind:member	struct:probe_arg	access:public
probe_arg::fmt	trace/trace_probe.h	/^	char			*fmt;	\/* Format string if needed *\/$/;"	kind:member	struct:probe_arg	access:public
probe_arg::name	trace/trace_probe.h	/^	const char		*name;	\/* Name of this argument *\/$/;"	kind:member	struct:probe_arg	access:public
probe_arg::offset	trace/trace_probe.h	/^	unsigned int		offset;	\/* Offset from argument entry *\/$/;"	kind:member	struct:probe_arg	access:public
probe_arg::type	trace/trace_probe.h	/^	const struct fetch_type	*type;	\/* Type of this argument *\/$/;"	kind:member	struct:probe_arg	typeref:struct:probe_arg::fetch_type	access:public
probe_mem_read	trace/trace_probe_tmpl.h	/^probe_mem_read(void *dest, void *src, size_t size);$/;"	kind:prototype	signature:(void *dest, void *src, size_t size)
probe_mem_read_user	trace/trace_probe_tmpl.h	/^probe_mem_read_user(void *dest, void *src, size_t size);$/;"	kind:prototype	signature:(void *dest, void *src, size_t size)
probes	trace/trace_probe.h	/^	struct list_head		probes;$/;"	kind:member	struct:trace_probe_event	typeref:struct:trace_probe_event::list_head	access:public
proc_cgroupstats_show	cgroup/cgroup-internal.h	/^int proc_cgroupstats_show(struct seq_file *m, void *v);$/;"	kind:prototype	signature:(struct seq_file *m, void *v)
process_fetch_insn	trace/trace_probe_tmpl.h	/^process_fetch_insn(struct fetch_insn *code, struct pt_regs *regs,$/;"	kind:prototype	signature:(struct fetch_insn *code, struct pt_regs *regs, void *dest, void *base)
process_fetch_insn_bottom	trace/trace_probe_tmpl.h	/^process_fetch_insn_bottom(struct fetch_insn *code, unsigned long val,$/;"	kind:function	signature:(struct fetch_insn *code, unsigned long val, void *dest, void *base)
proctitle	audit.h	/^	struct audit_proctitle proctitle;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::audit_proctitle	access:public
prog	trace/trace.h	/^	struct prog_entry __rcu	*prog;$/;"	kind:member	struct:event_filter	typeref:struct:event_filter::__rcu	access:public
prog_entry	trace/trace.h	/^struct prog_entry;$/;"	kind:externvar
prop_runnable_sum	sched/sched.h	/^	long			prop_runnable_sum;$/;"	kind:member	struct:cfs_rq	access:public
propagate	sched/sched.h	/^	long			propagate;$/;"	kind:member	struct:cfs_rq	access:public
psi_dequeue	sched/stats.h	/^static inline void psi_dequeue(struct task_struct *p, bool sleep) {}$/;"	kind:function	signature:(struct task_struct *p, bool sleep)
psi_dequeue	sched/stats.h	/^static inline void psi_dequeue(struct task_struct *p, bool sleep)$/;"	kind:function	signature:(struct task_struct *p, bool sleep)
psi_enqueue	sched/stats.h	/^static inline void psi_enqueue(struct task_struct *p, bool wakeup) {}$/;"	kind:function	signature:(struct task_struct *p, bool wakeup)
psi_enqueue	sched/stats.h	/^static inline void psi_enqueue(struct task_struct *p, bool wakeup)$/;"	kind:function	signature:(struct task_struct *p, bool wakeup)
psi_task_tick	sched/stats.h	/^static inline void psi_task_tick(struct rq *rq) {}$/;"	kind:function	signature:(struct rq *rq)
psi_task_tick	sched/stats.h	/^static inline void psi_task_tick(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
psi_ttwu_dequeue	sched/stats.h	/^static inline void psi_ttwu_dequeue(struct task_struct *p) {}$/;"	kind:function	signature:(struct task_struct *p)
psi_ttwu_dequeue	sched/stats.h	/^static inline void psi_ttwu_dequeue(struct task_struct *p)$/;"	kind:function	signature:(struct task_struct *p)
push_cpu	sched/sched.h	/^	int			push_cpu;$/;"	kind:member	struct:rq	access:public
pushable_dl_tasks_root	sched/sched.h	/^	struct rb_root_cached	pushable_dl_tasks_root;$/;"	kind:member	struct:dl_rq	typeref:struct:dl_rq::rb_root_cached	access:public
pushable_tasks	sched/sched.h	/^	struct plist_head	pushable_tasks;$/;"	kind:member	struct:rt_rq	typeref:struct:rt_rq::plist_head	access:public
put_css_set	cgroup/cgroup-internal.h	/^static inline void put_css_set(struct css_set *cset)$/;"	kind:function	signature:(struct css_set *cset)
put_css_set_locked	cgroup/cgroup-internal.h	/^void put_css_set_locked(struct css_set *cset);$/;"	kind:prototype	signature:(struct css_set *cset)
put_prev_task	sched/sched.h	/^	void (*put_prev_task)(struct rq *rq, struct task_struct *p);$/;"	kind:member	struct:sched_class	access:public
put_prev_task	sched/sched.h	/^static inline void put_prev_task(struct rq *rq, struct task_struct *prev)$/;"	kind:function	signature:(struct rq *rq, struct task_struct *prev)
put_recursion_context	events/internal.h	/^static inline void put_recursion_context(int *recursion, int rctx)$/;"	kind:function	signature:(int *recursion, int rctx)
pv_hash	locking/qspinlock_paravirt.h	/^static struct qspinlock **pv_hash(struct qspinlock *lock, struct pv_node *node)$/;"	kind:function	signature:(struct qspinlock *lock, struct pv_node *node)
pv_hash_entry	locking/qspinlock_paravirt.h	/^struct pv_hash_entry {$/;"	kind:struct
pv_hash_entry::lock	locking/qspinlock_paravirt.h	/^	struct qspinlock *lock;$/;"	kind:member	struct:pv_hash_entry	typeref:struct:pv_hash_entry::qspinlock	access:public
pv_hash_entry::node	locking/qspinlock_paravirt.h	/^	struct pv_node   *node;$/;"	kind:member	struct:pv_hash_entry	typeref:struct:pv_hash_entry::pv_node	access:public
pv_hybrid_queued_unfair_trylock	locking/qspinlock_paravirt.h	/^static inline bool pv_hybrid_queued_unfair_trylock(struct qspinlock *lock)$/;"	kind:function	signature:(struct qspinlock *lock)
pv_init_node	locking/qspinlock_paravirt.h	/^static void pv_init_node(struct mcs_spinlock *node)$/;"	kind:function	signature:(struct mcs_spinlock *node)
pv_kick	locking/qspinlock_stat.h	133;"	kind:macro
pv_kick_node	locking/qspinlock_paravirt.h	/^static void pv_kick_node(struct qspinlock *lock, struct mcs_spinlock *node)$/;"	kind:function	signature:(struct qspinlock *lock, struct mcs_spinlock *node)
pv_lock_hash	locking/qspinlock_paravirt.h	/^static struct pv_hash_entry *pv_lock_hash;$/;"	kind:variable	typeref:struct:pv_hash_entry
pv_node	locking/qspinlock_paravirt.h	/^struct pv_node {$/;"	kind:struct
pv_node::cpu	locking/qspinlock_paravirt.h	/^	int			cpu;$/;"	kind:member	struct:pv_node	access:public
pv_node::mcs	locking/qspinlock_paravirt.h	/^	struct mcs_spinlock	mcs;$/;"	kind:member	struct:pv_node	typeref:struct:pv_node::mcs_spinlock	access:public
pv_node::state	locking/qspinlock_paravirt.h	/^	u8			state;$/;"	kind:member	struct:pv_node	access:public
pv_unhash	locking/qspinlock_paravirt.h	/^static struct pv_node *pv_unhash(struct qspinlock *lock)$/;"	kind:function	signature:(struct qspinlock *lock)
pv_wait	locking/qspinlock_stat.h	134;"	kind:macro
pv_wait_early	locking/qspinlock_paravirt.h	/^pv_wait_early(struct pv_node *prev, int loop)$/;"	kind:function	signature:(struct pv_node *prev, int loop)
pv_wait_head_or_lock	locking/qspinlock_paravirt.h	/^pv_wait_head_or_lock(struct qspinlock *lock, struct mcs_spinlock *node)$/;"	kind:function	signature:(struct qspinlock *lock, struct mcs_spinlock *node)
pv_wait_node	locking/qspinlock_paravirt.h	/^static void pv_wait_node(struct mcs_spinlock *node, struct mcs_spinlock *prev)$/;"	kind:function	signature:(struct mcs_spinlock *node, struct mcs_spinlock *prev)
pwd	audit.h	/^	struct path	    pwd;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::path	access:public
q	audit.h	/^	struct sk_buff_head q;$/;"	kind:member	struct:audit_netlink_list	typeref:struct:audit_netlink_list::sk_buff_head	access:public
qbytes	audit.h	/^			unsigned long		qbytes;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
qlen_last_fqs_check	rcu/tree.h	/^	long		qlen_last_fqs_check;$/;"	kind:member	struct:rcu_data	access:public
qsmask	rcu/tree.h	/^	unsigned long qsmask;	\/* CPUs or groups that need to switch in *\/$/;"	kind:member	struct:rcu_node	access:public
qsmaskinit	rcu/tree.h	/^	unsigned long qsmaskinit;$/;"	kind:member	struct:rcu_node	access:public
qsmaskinitnext	rcu/tree.h	/^	unsigned long qsmaskinitnext;$/;"	kind:member	struct:rcu_node	access:public
queue	sched/sched.h	/^	struct list_head queue[MAX_RT_PRIO];$/;"	kind:member	struct:rt_prio_array	typeref:struct:rt_prio_array::list_head	access:public
queue_balance_callback	sched/sched.h	/^queue_balance_callback(struct rq *rq,$/;"	kind:function	signature:(struct rq *rq, struct callback_head *head, void (*func)(struct rq *rq))
queued_spin_trylock	locking/qspinlock_paravirt.h	80;"	kind:macro
quota	sched/sched.h	/^	u64			quota;$/;"	kind:member	struct:cfs_bandwidth	access:public
raw_lockdep_assert_held_rcu_node	rcu/rcu.h	416;"	kind:macro
raw_rq	sched/sched.h	1049;"	kind:macro
raw_spin_lock_irq_rcu_node	rcu/rcu.h	389;"	kind:macro
raw_spin_lock_irqsave_rcu_node	rcu/rcu.h	398;"	kind:macro
raw_spin_lock_rcu_node	rcu/rcu.h	381;"	kind:macro
raw_spin_trylock_rcu_node	rcu/rcu.h	407;"	kind:macro
raw_spin_unlock_irq_rcu_node	rcu/rcu.h	395;"	kind:macro
raw_spin_unlock_irqrestore_rcu_node	rcu/rcu.h	404;"	kind:macro
raw_spin_unlock_rcu_node	rcu/rcu.h	387;"	kind:macro
rb_alloc	events/internal.h	/^rb_alloc(int nr_pages, long watermark, int cpu, int flags);$/;"	kind:prototype	signature:(int nr_pages, long watermark, int cpu, int flags)
rb_alloc_aux	events/internal.h	/^extern int rb_alloc_aux(struct ring_buffer *rb, struct perf_event *event,$/;"	kind:prototype	signature:(struct ring_buffer *rb, struct perf_event *event, pgoff_t pgoff, int nr_pages, long watermark, int flags)
rb_free	events/internal.h	/^extern void rb_free(struct ring_buffer *rb);$/;"	kind:prototype	signature:(struct ring_buffer *rb)
rb_free_aux	events/internal.h	/^extern void rb_free_aux(struct ring_buffer *rb);$/;"	kind:prototype	signature:(struct ring_buffer *rb)
rb_free_rcu	events/internal.h	/^static inline void rb_free_rcu(struct rcu_head *rcu_head)$/;"	kind:function	signature:(struct rcu_head *rcu_head)
rb_has_aux	events/internal.h	/^static inline bool rb_has_aux(struct ring_buffer *rb)$/;"	kind:function	signature:(struct ring_buffer *rb)
rb_toggle_paused	events/internal.h	/^static inline void rb_toggle_paused(struct ring_buffer *rb, bool pause)$/;"	kind:function	signature:(struct ring_buffer *rb, bool pause)
rcu	audit.h	/^	struct rcu_head		rcu;$/;"	kind:member	struct:audit_entry	typeref:struct:audit_entry::rcu_head	access:public
rcu	sched/sched.h	/^	struct rcu_head		rcu;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::rcu_head	access:public
rcu	sched/sched.h	/^	struct rcu_head		rcu;$/;"	kind:member	struct:task_group	typeref:struct:task_group::rcu_head	access:public
rcu	sched/sched.h	/^	struct rcu_head rcu;$/;"	kind:member	struct:perf_domain	typeref:struct:perf_domain::rcu_head	access:public
rcu	trace/trace.h	/^	struct rcu_head		rcu;$/;"	kind:member	struct:ftrace_hash	typeref:struct:ftrace_hash::rcu_head	access:public
rcu_all_qs	rcu/tree_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_all_qs);$/;"	kind:variable
rcu_all_qs	rcu/tree_plugin.h	/^void rcu_all_qs(void)$/;"	kind:function	signature:(void)
rcu_bind_current_to_nocb	rcu/rcu.h	/^static inline void rcu_bind_current_to_nocb(void) { }$/;"	kind:function	signature:(void)
rcu_bind_current_to_nocb	rcu/rcu.h	/^void rcu_bind_current_to_nocb(void);$/;"	kind:prototype	signature:(void)
rcu_bind_current_to_nocb	rcu/tree_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_bind_current_to_nocb);$/;"	kind:variable
rcu_bind_current_to_nocb	rcu/tree_plugin.h	/^void rcu_bind_current_to_nocb(void)$/;"	kind:function	signature:(void)
rcu_bind_gp_kthread	rcu/tree.h	/^static void rcu_bind_gp_kthread(void);$/;"	kind:prototype	signature:(void)
rcu_bind_gp_kthread	rcu/tree_plugin.h	/^static void rcu_bind_gp_kthread(void)$/;"	kind:function	signature:(void)
rcu_boost	rcu/tree_plugin.h	/^static int rcu_boost(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_boost_kthread	rcu/tree_plugin.h	/^static int rcu_boost_kthread(void *arg)$/;"	kind:function	signature:(void *arg)
rcu_boost_kthread_setaffinity	rcu/tree_plugin.h	/^static void rcu_boost_kthread_setaffinity(struct rcu_node *rnp, int outgoingcpu)$/;"	kind:function	signature:(struct rcu_node *rnp, int outgoingcpu)
rcu_boot_init_nocb_percpu_data	rcu/tree.h	/^static void rcu_boot_init_nocb_percpu_data(struct rcu_data *rdp);$/;"	kind:prototype	signature:(struct rcu_data *rdp)
rcu_boot_init_nocb_percpu_data	rcu/tree_plugin.h	/^static void __init rcu_boot_init_nocb_percpu_data(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
rcu_bootup_announce	rcu/tree.h	/^static void rcu_bootup_announce(void);$/;"	kind:prototype	signature:(void)
rcu_bootup_announce	rcu/tree_plugin.h	/^static void __init rcu_bootup_announce(void)$/;"	kind:function	signature:(void)
rcu_bootup_announce_oddness	rcu/tree_plugin.h	/^static void __init rcu_bootup_announce_oddness(void)$/;"	kind:function	signature:(void)
rcu_cblist_dequeue	rcu/rcu_segcblist.h	/^struct rcu_head *rcu_cblist_dequeue(struct rcu_cblist *rclp);$/;"	kind:prototype	signature:(struct rcu_cblist *rclp)
rcu_cblist_dequeued_lazy	rcu/rcu_segcblist.h	/^static inline void rcu_cblist_dequeued_lazy(struct rcu_cblist *rclp)$/;"	kind:function	signature:(struct rcu_cblist *rclp)
rcu_cblist_enqueue	rcu/rcu_segcblist.h	/^void rcu_cblist_enqueue(struct rcu_cblist *rclp, struct rcu_head *rhp);$/;"	kind:prototype	signature:(struct rcu_cblist *rclp, struct rcu_head *rhp)
rcu_cblist_flush_enqueue	rcu/rcu_segcblist.h	/^void rcu_cblist_flush_enqueue(struct rcu_cblist *drclp,$/;"	kind:prototype	signature:(struct rcu_cblist *drclp, struct rcu_cblist *srclp, struct rcu_head *rhp)
rcu_cblist_init	rcu/rcu_segcblist.h	/^void rcu_cblist_init(struct rcu_cblist *rclp);$/;"	kind:prototype	signature:(struct rcu_cblist *rclp)
rcu_cblist_n_cbs	rcu/rcu_segcblist.h	/^static inline long rcu_cblist_n_cbs(struct rcu_cblist *rclp)$/;"	kind:function	signature:(struct rcu_cblist *rclp)
rcu_check_gp_kthread_starvation	rcu/tree_stall.h	/^static void rcu_check_gp_kthread_starvation(void)$/;"	kind:function	signature:(void)
rcu_check_gp_start_stall	rcu/tree.h	/^static void rcu_check_gp_start_stall(struct rcu_node *rnp, struct rcu_data *rdp,$/;"	kind:prototype	signature:(struct rcu_node *rnp, struct rcu_data *rdp, const unsigned long gpssdelay)
rcu_check_gp_start_stall	rcu/tree_stall.h	/^static void rcu_check_gp_start_stall(struct rcu_node *rnp, struct rcu_data *rdp,$/;"	kind:function	signature:(struct rcu_node *rnp, struct rcu_data *rdp, const unsigned long gpssdelay)
rcu_cleanup_after_idle	rcu/tree.h	/^static void rcu_cleanup_after_idle(void);$/;"	kind:prototype	signature:(void)
rcu_cleanup_after_idle	rcu/tree_plugin.h	/^static void rcu_cleanup_after_idle(void)$/;"	kind:function	signature:(void)
rcu_cpu_has_work	rcu/tree.h	/^	char rcu_cpu_has_work;$/;"	kind:member	struct:rcu_data	access:public
rcu_cpu_kthread_setup	rcu/tree.h	/^static void rcu_cpu_kthread_setup(unsigned int cpu);$/;"	kind:prototype	signature:(unsigned int cpu)
rcu_cpu_kthread_setup	rcu/tree_plugin.h	/^static void rcu_cpu_kthread_setup(unsigned int cpu)$/;"	kind:function	signature:(unsigned int cpu)
rcu_cpu_kthread_status	rcu/tree.h	/^	unsigned int rcu_cpu_kthread_status;$/;"	kind:member	struct:rcu_data	access:public
rcu_cpu_kthread_task	rcu/tree.h	/^	struct task_struct *rcu_cpu_kthread_task;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::task_struct	access:public
rcu_cpu_stall_ftrace_dump	rcu/rcu.h	/^extern int rcu_cpu_stall_ftrace_dump;$/;"	kind:externvar
rcu_cpu_stall_reset	rcu/tree_stall.h	/^void rcu_cpu_stall_reset(void)$/;"	kind:function	signature:(void)
rcu_cpu_stall_suppress	rcu/rcu.h	/^extern int rcu_cpu_stall_suppress;$/;"	kind:externvar
rcu_cpu_stall_timeout	rcu/rcu.h	/^extern int rcu_cpu_stall_timeout;$/;"	kind:externvar
rcu_data	rcu/tree.h	/^struct rcu_data {$/;"	kind:struct
rcu_data::____cacheline_internodealigned_in_smp	rcu/tree.h	/^	raw_spinlock_t nocb_bypass_lock ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_data	access:public
rcu_data::____cacheline_internodealigned_in_smp	rcu/tree.h	/^	raw_spinlock_t nocb_gp_lock ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_data	access:public
rcu_data::____cacheline_internodealigned_in_smp	rcu/tree.h	/^	struct rcu_data *nocb_gp_rdp ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::nocb_gp_rdp	access:public
rcu_data::all_lazy	rcu/tree.h	/^	bool all_lazy;			\/* All CPU's CBs lazy at idle start? *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::barrier_head	rcu/tree.h	/^	struct rcu_head barrier_head;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::rcu_head	access:public
rcu_data::beenonline	rcu/tree.h	/^	bool		beenonline;	\/* CPU online at least once. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::blimit	rcu/tree.h	/^	long		blimit;		\/* Upper limit on a processed batch *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::cblist	rcu/tree.h	/^	struct rcu_segcblist cblist;	\/* Segmented callback list, with *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::rcu_segcblist	access:public
rcu_data::core_needs_qs	rcu/tree.h	/^	bool		core_needs_qs;	\/* Core waits for quiesc state. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::cpu	rcu/tree.h	/^	int cpu;$/;"	kind:member	struct:rcu_data	access:public
rcu_data::cpu_no_qs	rcu/tree.h	/^	union rcu_noqs	cpu_no_qs;	\/* No QSes yet for this CPU. *\/$/;"	kind:member	struct:rcu_data	typeref:union:rcu_data::rcu_noqs	access:public
rcu_data::defer_qs_iw	rcu/tree.h	/^	struct irq_work defer_qs_iw;	\/* Obtain later scheduler attention. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::irq_work	access:public
rcu_data::defer_qs_iw_pending	rcu/tree.h	/^	bool defer_qs_iw_pending;	\/* Scheduler attention pending? *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::dynticks	rcu/tree.h	/^	atomic_t dynticks;		\/* Even value for idle, else odd. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::dynticks_nesting	rcu/tree.h	/^	long dynticks_nesting;		\/* Track process nesting level. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::dynticks_nmi_nesting	rcu/tree.h	/^	long dynticks_nmi_nesting;	\/* Track irq\/NMI nesting level. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::dynticks_snap	rcu/tree.h	/^	int dynticks_snap;		\/* Per-GP tracking for dynticks. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::exp_deferred_qs	rcu/tree.h	/^	bool		exp_deferred_qs; \/* This CPU awaiting a deferred QS? *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::exp_dynticks_snap	rcu/tree.h	/^	int exp_dynticks_snap;		\/* Double-check need for IPI. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::gp_seq	rcu/tree.h	/^	unsigned long	gp_seq;		\/* Track rsp->rcu_gp_seq counter. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::gp_seq_needed	rcu/tree.h	/^	unsigned long	gp_seq_needed;	\/* Track furthest future GP request. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::gpwrap	rcu/tree.h	/^	bool		gpwrap;		\/* Possible ->gp_seq wrap. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::grpmask	rcu/tree.h	/^	unsigned long grpmask;		\/* Mask to apply to leaf qsmask. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::last_accelerate	rcu/tree.h	/^	unsigned long last_accelerate;	\/* Last jiffy CBs were accelerated. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::last_advance_all	rcu/tree.h	/^	unsigned long last_advance_all;	\/* Last jiffy CBs were all advanced. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::last_fqs_resched	rcu/tree.h	/^	unsigned long last_fqs_resched;	\/* Time of last rcu_resched(). *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::mynode	rcu/tree.h	/^	struct rcu_node *mynode;	\/* This CPU's leaf of hierarchy *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::rcu_node	access:public
rcu_data::n_force_qs_snap	rcu/tree.h	/^	unsigned long	n_force_qs_snap;$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_bypass	rcu/tree.h	/^	struct rcu_cblist nocb_bypass;	\/* Lock-contention-bypass CB list. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::rcu_cblist	access:public
rcu_data::nocb_bypass_first	rcu/tree.h	/^	unsigned long nocb_bypass_first; \/* Time (jiffies) of first enqueue. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_bypass_timer	rcu/tree.h	/^	struct timer_list nocb_bypass_timer; \/* Force nocb_bypass flush. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::timer_list	access:public
rcu_data::nocb_cb_kthread	rcu/tree.h	/^	struct task_struct *nocb_cb_kthread;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::task_struct	access:public
rcu_data::nocb_cb_sleep	rcu/tree.h	/^	bool nocb_cb_sleep;		\/* Is the nocb CB thread asleep? *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_cb_wq	rcu/tree.h	/^	struct swait_queue_head nocb_cb_wq; \/* For nocb kthreads to sleep on. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::swait_queue_head	access:public
rcu_data::nocb_defer_wakeup	rcu/tree.h	/^	int nocb_defer_wakeup;		\/* Defer wakeup of nocb_kthread. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_gp_adv_time	rcu/tree.h	/^	unsigned long nocb_gp_adv_time;	\/* Last call_rcu() CB adv (jiffies). *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_gp_bypass	rcu/tree.h	/^	u8 nocb_gp_bypass;		\/* Found a bypass on last scan? *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_gp_gp	rcu/tree.h	/^	u8 nocb_gp_gp;			\/* GP to wait for on last scan? *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_gp_kthread	rcu/tree.h	/^	struct task_struct *nocb_gp_kthread;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::task_struct	access:public
rcu_data::nocb_gp_loops	rcu/tree.h	/^	unsigned long nocb_gp_loops;	\/* # passes through wait code. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_gp_seq	rcu/tree.h	/^	unsigned long nocb_gp_seq;	\/*  If so, ->gp_seq to wait for. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_gp_sleep	rcu/tree.h	/^	u8 nocb_gp_sleep;		\/* Is the nocb GP thread asleep? *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_gp_wq	rcu/tree.h	/^	struct swait_queue_head nocb_gp_wq; \/* For nocb kthreads to sleep on. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::swait_queue_head	access:public
rcu_data::nocb_lock	rcu/tree.h	/^	raw_spinlock_t nocb_lock;	\/* Guard following pair of fields. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_lock_contended	rcu/tree.h	/^	atomic_t nocb_lock_contended;	\/* Contention experienced. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_next_cb_rdp	rcu/tree.h	/^	struct rcu_data *nocb_next_cb_rdp;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::rcu_data	access:public
rcu_data::nocb_nobypass_count	rcu/tree.h	/^	int nocb_nobypass_count;	\/* # ->cblist enqueues at ^^^ time. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_nobypass_last	rcu/tree.h	/^	unsigned long nocb_nobypass_last; \/* Last ->cblist enqueue (jiffies). *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::nocb_timer	rcu/tree.h	/^	struct timer_list nocb_timer;	\/* Enforce finite deferral. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::timer_list	access:public
rcu_data::qlen_last_fqs_check	rcu/tree.h	/^	long		qlen_last_fqs_check;$/;"	kind:member	struct:rcu_data	access:public
rcu_data::rcu_cpu_has_work	rcu/tree.h	/^	char rcu_cpu_has_work;$/;"	kind:member	struct:rcu_data	access:public
rcu_data::rcu_cpu_kthread_status	rcu/tree.h	/^	unsigned int rcu_cpu_kthread_status;$/;"	kind:member	struct:rcu_data	access:public
rcu_data::rcu_cpu_kthread_task	rcu/tree.h	/^	struct task_struct *rcu_cpu_kthread_task;$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::task_struct	access:public
rcu_data::rcu_iw	rcu/tree.h	/^	struct irq_work rcu_iw;		\/* Check for non-irq activity. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::irq_work	access:public
rcu_data::rcu_iw_gp_seq	rcu/tree.h	/^	unsigned long rcu_iw_gp_seq;	\/* ->gp_seq associated with ->rcu_iw. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::rcu_iw_pending	rcu/tree.h	/^	bool rcu_iw_pending;		\/* Is ->rcu_iw pending? *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::rcu_need_heavy_qs	rcu/tree.h	/^	bool rcu_need_heavy_qs;		\/* GP old, so heavy quiescent state! *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::rcu_ofl_gp_flags	rcu/tree.h	/^	short rcu_ofl_gp_flags;		\/* ->gp_flags at last offline. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::rcu_ofl_gp_seq	rcu/tree.h	/^	unsigned long rcu_ofl_gp_seq;	\/* ->gp_seq at last offline. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::rcu_onl_gp_flags	rcu/tree.h	/^	short rcu_onl_gp_flags;		\/* ->gp_flags at last online. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::rcu_onl_gp_seq	rcu/tree.h	/^	unsigned long rcu_onl_gp_seq;	\/* ->gp_seq at last online. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::rcu_urgent_qs	rcu/tree.h	/^	bool rcu_urgent_qs;		\/* GP old need light quiescent state. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::softirq_snap	rcu/tree.h	/^	unsigned int softirq_snap;	\/* Snapshot of softirq activity. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::tick_nohz_enabled_snap	rcu/tree.h	/^	int tick_nohz_enabled_snap;	\/* Previously seen value from sysfs. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_data::ticks_this_gp	rcu/tree.h	/^	unsigned long	ticks_this_gp;	\/* The number of scheduling-clock *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_dereference_check_sched_domain	sched/sched.h	1325;"	kind:macro
rcu_dump_cpu_stacks	rcu/tree_stall.h	/^static void rcu_dump_cpu_stacks(void)$/;"	kind:function	signature:(void)
rcu_dynticks_snap	rcu/tree.h	/^int rcu_dynticks_snap(struct rcu_data *rdp);$/;"	kind:prototype	signature:(struct rcu_data *rdp)
rcu_dynticks_task_enter	rcu/tree.h	/^static void rcu_dynticks_task_enter(void);$/;"	kind:prototype	signature:(void)
rcu_dynticks_task_enter	rcu/tree_plugin.h	/^static void rcu_dynticks_task_enter(void)$/;"	kind:function	signature:(void)
rcu_dynticks_task_exit	rcu/tree.h	/^static void rcu_dynticks_task_exit(void);$/;"	kind:prototype	signature:(void)
rcu_dynticks_task_exit	rcu/tree_plugin.h	/^static void rcu_dynticks_task_exit(void)$/;"	kind:function	signature:(void)
rcu_early_boot_tests	rcu/rcu.h	/^void rcu_early_boot_tests(void);$/;"	kind:prototype	signature:(void)
rcu_exp_batches_completed	rcu/rcu.h	/^static inline unsigned long rcu_exp_batches_completed(void) { return 0; }$/;"	kind:function	signature:(void)
rcu_exp_batches_completed	rcu/rcu.h	/^unsigned long rcu_exp_batches_completed(void);$/;"	kind:prototype	signature:(void)
rcu_exp_gp_seq_done	rcu/tree_exp.h	/^static bool rcu_exp_gp_seq_done(unsigned long s)$/;"	kind:function	signature:(unsigned long s)
rcu_exp_gp_seq_end	rcu/tree_exp.h	/^static void rcu_exp_gp_seq_end(void)$/;"	kind:function	signature:(void)
rcu_exp_gp_seq_endval	rcu/tree_exp.h	/^static __maybe_unused unsigned long rcu_exp_gp_seq_endval(void)$/;"	kind:function	signature:(void)
rcu_exp_gp_seq_snap	rcu/tree_exp.h	/^static unsigned long rcu_exp_gp_seq_snap(void)$/;"	kind:function	signature:(void)
rcu_exp_gp_seq_start	rcu/tree_exp.h	/^static void rcu_exp_gp_seq_start(void)$/;"	kind:function	signature:(void)
rcu_exp_handler	rcu/tree_exp.h	/^static void rcu_exp_handler(void *unused)$/;"	kind:function	signature:(void *unused)
rcu_exp_handler	rcu/tree_exp.h	/^static void rcu_exp_handler(void *unused);$/;"	kind:prototype	signature:(void *unused)
rcu_exp_need_qs	rcu/tree_exp.h	/^static void rcu_exp_need_qs(void)$/;"	kind:function	signature:(void)
rcu_exp_sel_wait_wake	rcu/tree_exp.h	/^static void rcu_exp_sel_wait_wake(unsigned long s)$/;"	kind:function	signature:(unsigned long s)
rcu_exp_wait_wake	rcu/tree_exp.h	/^static void rcu_exp_wait_wake(unsigned long s)$/;"	kind:function	signature:(unsigned long s)
rcu_exp_work	rcu/tree.h	/^struct rcu_exp_work {$/;"	kind:struct
rcu_exp_work::rew_s	rcu/tree.h	/^	unsigned long rew_s;$/;"	kind:member	struct:rcu_exp_work	access:public
rcu_exp_work::rew_work	rcu/tree.h	/^	struct work_struct rew_work;$/;"	kind:member	struct:rcu_exp_work	typeref:struct:rcu_exp_work::work_struct	access:public
rcu_expedite_gp	rcu/rcu.h	/^static inline void rcu_expedite_gp(void) { }$/;"	kind:function	signature:(void)
rcu_expedite_gp	rcu/rcu.h	/^void rcu_expedite_gp(void);$/;"	kind:prototype	signature:(void)
rcu_fanout_exact	rcu/rcu.h	/^static bool rcu_fanout_exact;$/;"	kind:variable
rcu_fanout_leaf	rcu/rcu.h	/^static int rcu_fanout_leaf;$/;"	kind:variable
rcu_find_next_bit	rcu/rcu.h	360;"	kind:macro
rcu_first_leaf_node	rcu/rcu.h	320;"	kind:macro
rcu_flavor_sched_clock_irq	rcu/tree.h	/^static void rcu_flavor_sched_clock_irq(int user);$/;"	kind:prototype	signature:(int user)
rcu_flavor_sched_clock_irq	rcu/tree_plugin.h	/^static void rcu_flavor_sched_clock_irq(int user)$/;"	kind:function	signature:(int user)
rcu_for_each_leaf_node	rcu/rcu.h	345;"	kind:macro
rcu_for_each_node_breadth_first	rcu/rcu.h	336;"	kind:macro
rcu_force_quiescent_state	rcu/rcu.h	/^static inline void rcu_force_quiescent_state(void) { }$/;"	kind:function	signature:(void)
rcu_force_quiescent_state	rcu/rcu.h	/^void rcu_force_quiescent_state(void);$/;"	kind:prototype	signature:(void)
rcu_ftrace_dump	rcu/rcu.h	262;"	kind:macro
rcu_ftrace_dump_stall_suppress	rcu/rcu.h	235;"	kind:macro
rcu_ftrace_dump_stall_suppress	rcu/rcu.h	248;"	kind:macro
rcu_ftrace_dump_stall_unsuppress	rcu/rcu.h	241;"	kind:macro
rcu_ftrace_dump_stall_unsuppress	rcu/rcu.h	249;"	kind:macro
rcu_fwd_progress_check	rcu/rcu.h	/^static inline void rcu_fwd_progress_check(unsigned long j) { }$/;"	kind:function	signature:(unsigned long j)
rcu_fwd_progress_check	rcu/rcu.h	/^void rcu_fwd_progress_check(unsigned long j);$/;"	kind:prototype	signature:(unsigned long j)
rcu_fwd_progress_check	rcu/tree_stall.h	/^EXPORT_SYMBOL_GPL(rcu_fwd_progress_check);$/;"	kind:variable
rcu_fwd_progress_check	rcu/tree_stall.h	/^void rcu_fwd_progress_check(unsigned long j)$/;"	kind:function	signature:(unsigned long j)
rcu_get_gp_kthreads_prio	rcu/rcu.h	/^int rcu_get_gp_kthreads_prio(void);$/;"	kind:prototype	signature:(void)
rcu_get_gp_kthreads_prio	rcu/rcu.h	/^static inline int rcu_get_gp_kthreads_prio(void) { return 0; }$/;"	kind:function	signature:(void)
rcu_get_gp_seq	rcu/rcu.h	/^static inline unsigned long rcu_get_gp_seq(void) { return 0; }$/;"	kind:function	signature:(void)
rcu_get_gp_seq	rcu/rcu.h	/^unsigned long rcu_get_gp_seq(void);$/;"	kind:prototype	signature:(void)
rcu_gp_init_mask	rcu/tree.h	/^	unsigned long rcu_gp_init_mask;	\/* Mask of offline CPUs at GP init. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_gp_is_expedited	rcu/rcu.h	/^bool rcu_gp_is_expedited(void);  \/* Internal RCU use. *\/$/;"	kind:prototype	signature:(void)
rcu_gp_is_expedited	rcu/rcu.h	/^static inline bool rcu_gp_is_expedited(void) { return false; }$/;"	kind:function	signature:(void)
rcu_gp_is_normal	rcu/rcu.h	/^bool rcu_gp_is_normal(void);     \/* Internal RCU use. *\/$/;"	kind:prototype	signature:(void)
rcu_gp_is_normal	rcu/rcu.h	/^static inline bool rcu_gp_is_normal(void) { return true; }$/;"	kind:function	signature:(void)
rcu_gp_wq	rcu/rcu.h	/^extern struct workqueue_struct *rcu_gp_wq;$/;"	kind:externvar
rcu_head	events/internal.h	/^	struct rcu_head			rcu_head;$/;"	kind:member	struct:ring_buffer	typeref:struct:ring_buffer::rcu_head	access:public
rcu_idle_gp_delay	rcu/tree_plugin.h	/^static int rcu_idle_gp_delay = RCU_IDLE_GP_DELAY;$/;"	kind:variable
rcu_idle_lazy_gp_delay	rcu/tree_plugin.h	/^static int rcu_idle_lazy_gp_delay = RCU_IDLE_LAZY_GP_DELAY;$/;"	kind:variable
rcu_init_levelspread	rcu/rcu.h	/^static inline void rcu_init_levelspread(int *levelspread, const int *levelcnt)$/;"	kind:function	signature:(int *levelspread, const int *levelcnt)
rcu_init_nohz	rcu/tree_plugin.h	/^void __init rcu_init_nohz(void)$/;"	kind:function	signature:(void)
rcu_init_one_nocb	rcu/tree.h	/^static void rcu_init_one_nocb(struct rcu_node *rnp);$/;"	kind:prototype	signature:(struct rcu_node *rnp)
rcu_init_one_nocb	rcu/tree_plugin.h	/^static void rcu_init_one_nocb(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_initiate_boost	rcu/tree.h	/^static void rcu_initiate_boost(struct rcu_node *rnp, unsigned long flags);$/;"	kind:prototype	signature:(struct rcu_node *rnp, unsigned long flags)
rcu_is_callbacks_kthread	rcu/tree.h	/^static bool rcu_is_callbacks_kthread(void);$/;"	kind:prototype	signature:(void)
rcu_is_callbacks_kthread	rcu/tree_plugin.h	/^static bool rcu_is_callbacks_kthread(void)$/;"	kind:function	signature:(void)
rcu_is_last_leaf_node	rcu/rcu.h	326;"	kind:macro
rcu_is_leaf_node	rcu/rcu.h	323;"	kind:macro
rcu_is_nocb_cpu	rcu/rcu.h	/^bool rcu_is_nocb_cpu(int cpu);$/;"	kind:prototype	signature:(int cpu)
rcu_is_nocb_cpu	rcu/rcu.h	/^static inline bool rcu_is_nocb_cpu(int cpu) { return false; }$/;"	kind:function	signature:(int cpu)
rcu_is_nocb_cpu	rcu/tree_plugin.h	/^bool rcu_is_nocb_cpu(int cpu)$/;"	kind:function	signature:(int cpu)
rcu_iw	rcu/tree.h	/^	struct irq_work rcu_iw;		\/* Check for non-irq activity. *\/$/;"	kind:member	struct:rcu_data	typeref:struct:rcu_data::irq_work	access:public
rcu_iw_gp_seq	rcu/tree.h	/^	unsigned long rcu_iw_gp_seq;	\/* ->gp_seq associated with ->rcu_iw. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_iw_handler	rcu/tree.h	/^static void rcu_iw_handler(struct irq_work *iwp);$/;"	kind:prototype	signature:(struct irq_work *iwp)
rcu_iw_handler	rcu/tree_stall.h	/^static void rcu_iw_handler(struct irq_work *iwp)$/;"	kind:function	signature:(struct irq_work *iwp)
rcu_iw_pending	rcu/tree.h	/^	bool rcu_iw_pending;		\/* Is ->rcu_iw pending? *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_jiffies_till_stall_check	rcu/rcu.h	/^int rcu_jiffies_till_stall_check(void);$/;"	kind:prototype	signature:(void)
rcu_jiffies_till_stall_check	rcu/tree_stall.h	/^EXPORT_SYMBOL_GPL(rcu_jiffies_till_stall_check);$/;"	kind:variable
rcu_jiffies_till_stall_check	rcu/tree_stall.h	/^int rcu_jiffies_till_stall_check(void)$/;"	kind:function	signature:(void)
rcu_lockdep_assert_cblist_protected	rcu/tree.h	/^static void rcu_lockdep_assert_cblist_protected(struct rcu_data *rdp);$/;"	kind:prototype	signature:(struct rcu_data *rdp)
rcu_lockdep_assert_cblist_protected	rcu/tree_plugin.h	/^static void rcu_lockdep_assert_cblist_protected(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
rcu_name	rcu/tree.h	/^static char rcu_name[] = RCU_NAME_RAW;$/;"	kind:variable
rcu_need_heavy_qs	rcu/tree.h	/^	bool rcu_need_heavy_qs;		\/* GP old, so heavy quiescent state! *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_needs_cpu	rcu/tree_plugin.h	/^int rcu_needs_cpu(u64 basemono, u64 *nextevt)$/;"	kind:function	signature:(u64 basemono, u64 *nextevt)
rcu_next_node_entry	rcu/tree_plugin.h	/^static struct list_head *rcu_next_node_entry(struct task_struct *t,$/;"	kind:function	signature:(struct task_struct *t, struct rcu_node *rnp)
rcu_nocb_bypass_lock	rcu/tree_plugin.h	/^static void rcu_nocb_bypass_lock(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
rcu_nocb_bypass_trylock	rcu/tree_plugin.h	/^static bool rcu_nocb_bypass_trylock(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
rcu_nocb_bypass_unlock	rcu/tree_plugin.h	/^static void rcu_nocb_bypass_unlock(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
rcu_nocb_cb_kthread	rcu/tree_plugin.h	/^static int rcu_nocb_cb_kthread(void *arg)$/;"	kind:function	signature:(void *arg)
rcu_nocb_do_flush_bypass	rcu/tree_plugin.h	/^static bool rcu_nocb_do_flush_bypass(struct rcu_data *rdp, struct rcu_head *rhp,$/;"	kind:function	signature:(struct rcu_data *rdp, struct rcu_head *rhp, unsigned long j)
rcu_nocb_flush_bypass	rcu/tree.h	/^static bool rcu_nocb_flush_bypass(struct rcu_data *rdp, struct rcu_head *rhp,$/;"	kind:prototype	signature:(struct rcu_data *rdp, struct rcu_head *rhp, unsigned long j)
rcu_nocb_flush_bypass	rcu/tree_plugin.h	/^static bool rcu_nocb_flush_bypass(struct rcu_data *rdp, struct rcu_head *rhp,$/;"	kind:function	signature:(struct rcu_data *rdp, struct rcu_head *rhp, unsigned long j)
rcu_nocb_gp_cleanup	rcu/tree.h	/^static void rcu_nocb_gp_cleanup(struct swait_queue_head *sq);$/;"	kind:prototype	signature:(struct swait_queue_head *sq)
rcu_nocb_gp_cleanup	rcu/tree_plugin.h	/^static void rcu_nocb_gp_cleanup(struct swait_queue_head *sq)$/;"	kind:function	signature:(struct swait_queue_head *sq)
rcu_nocb_gp_get	rcu/tree.h	/^static struct swait_queue_head *rcu_nocb_gp_get(struct rcu_node *rnp);$/;"	kind:prototype	signature:(struct rcu_node *rnp)
rcu_nocb_gp_get	rcu/tree_plugin.h	/^static struct swait_queue_head *rcu_nocb_gp_get(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_nocb_gp_kthread	rcu/tree_plugin.h	/^static int rcu_nocb_gp_kthread(void *arg)$/;"	kind:function	signature:(void *arg)
rcu_nocb_gp_stride	rcu/tree_plugin.h	/^static int rcu_nocb_gp_stride = -1;$/;"	kind:variable
rcu_nocb_lock	rcu/tree.h	/^static void rcu_nocb_lock(struct rcu_data *rdp);$/;"	kind:prototype	signature:(struct rcu_data *rdp)
rcu_nocb_lock	rcu/tree_plugin.h	/^static void rcu_nocb_lock(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
rcu_nocb_lock_irqsave	rcu/tree.h	453;"	kind:macro
rcu_nocb_lock_irqsave	rcu/tree.h	461;"	kind:macro
rcu_nocb_mask	rcu/tree_plugin.h	/^static cpumask_var_t rcu_nocb_mask; \/* CPUs to have callbacks offloaded. *\/$/;"	kind:variable
rcu_nocb_need_deferred_wakeup	rcu/tree.h	/^static int rcu_nocb_need_deferred_wakeup(struct rcu_data *rdp);$/;"	kind:prototype	signature:(struct rcu_data *rdp)
rcu_nocb_need_deferred_wakeup	rcu/tree_plugin.h	/^static int rcu_nocb_need_deferred_wakeup(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
rcu_nocb_poll	rcu/tree_plugin.h	/^static bool __read_mostly rcu_nocb_poll;    \/* Offload kthread are to poll. *\/$/;"	kind:variable
rcu_nocb_setup	rcu/tree_plugin.h	/^static int __init rcu_nocb_setup(char *str)$/;"	kind:function	signature:(char *str)
rcu_nocb_try_bypass	rcu/tree.h	/^static bool rcu_nocb_try_bypass(struct rcu_data *rdp, struct rcu_head *rhp,$/;"	kind:prototype	signature:(struct rcu_data *rdp, struct rcu_head *rhp, bool *was_alldone, unsigned long flags)
rcu_nocb_try_bypass	rcu/tree_plugin.h	/^static bool rcu_nocb_try_bypass(struct rcu_data *rdp, struct rcu_head *rhp,$/;"	kind:function	signature:(struct rcu_data *rdp, struct rcu_head *rhp, bool *was_alldone, unsigned long flags)
rcu_nocb_try_flush_bypass	rcu/tree_plugin.h	/^static void rcu_nocb_try_flush_bypass(struct rcu_data *rdp, unsigned long j)$/;"	kind:function	signature:(struct rcu_data *rdp, unsigned long j)
rcu_nocb_unlock	rcu/tree.h	/^static void rcu_nocb_unlock(struct rcu_data *rdp);$/;"	kind:prototype	signature:(struct rcu_data *rdp)
rcu_nocb_unlock	rcu/tree_plugin.h	/^static void rcu_nocb_unlock(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
rcu_nocb_unlock_irqrestore	rcu/tree.h	/^static void rcu_nocb_unlock_irqrestore(struct rcu_data *rdp,$/;"	kind:prototype	signature:(struct rcu_data *rdp, unsigned long flags)
rcu_nocb_unlock_irqrestore	rcu/tree_plugin.h	/^static void rcu_nocb_unlock_irqrestore(struct rcu_data *rdp,$/;"	kind:function	signature:(struct rcu_data *rdp, unsigned long flags)
rcu_nocb_wait_contended	rcu/tree_plugin.h	/^static void rcu_nocb_wait_contended(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
rcu_node	rcu/tree.h	/^struct rcu_node {$/;"	kind:struct
rcu_node::____cacheline_internodealigned_in_smp	rcu/tree.h	/^	raw_spinlock_t fqslock ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_node	access:public
rcu_node::____cacheline_internodealigned_in_smp	rcu/tree.h	/^	spinlock_t exp_lock ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_node	access:public
rcu_node::blkd_tasks	rcu/tree.h	/^	struct list_head blkd_tasks;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::list_head	access:public
rcu_node::boost_kthread_status	rcu/tree.h	/^	unsigned int boost_kthread_status;$/;"	kind:member	struct:rcu_node	access:public
rcu_node::boost_kthread_task	rcu/tree.h	/^	struct task_struct *boost_kthread_task;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::task_struct	access:public
rcu_node::boost_mtx	rcu/tree.h	/^	struct rt_mutex boost_mtx;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::rt_mutex	access:public
rcu_node::boost_tasks	rcu/tree.h	/^	struct list_head *boost_tasks;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::list_head	access:public
rcu_node::boost_time	rcu/tree.h	/^	unsigned long boost_time;$/;"	kind:member	struct:rcu_node	access:public
rcu_node::completedqs	rcu/tree.h	/^	unsigned long completedqs; \/* All QSes done for this node. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::exp_need_flush	rcu/tree.h	/^	bool exp_need_flush;	\/* Need to flush workitem? *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::exp_seq_rq	rcu/tree.h	/^	unsigned long exp_seq_rq;$/;"	kind:member	struct:rcu_node	access:public
rcu_node::exp_tasks	rcu/tree.h	/^	struct list_head *exp_tasks;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::list_head	access:public
rcu_node::exp_wq	rcu/tree.h	/^	wait_queue_head_t exp_wq[4];$/;"	kind:member	struct:rcu_node	access:public
rcu_node::expmask	rcu/tree.h	/^	unsigned long expmask;	\/* CPUs or groups that need to check in *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::expmaskinit	rcu/tree.h	/^	unsigned long expmaskinit;$/;"	kind:member	struct:rcu_node	access:public
rcu_node::expmaskinitnext	rcu/tree.h	/^	unsigned long expmaskinitnext;$/;"	kind:member	struct:rcu_node	access:public
rcu_node::ffmask	rcu/tree.h	/^	unsigned long ffmask;	\/* Fully functional CPUs. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::gp_seq	rcu/tree.h	/^	unsigned long gp_seq;	\/* Track rsp->rcu_gp_seq. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::gp_seq_needed	rcu/tree.h	/^	unsigned long gp_seq_needed; \/* Track furthest future GP request. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::gp_tasks	rcu/tree.h	/^	struct list_head *gp_tasks;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::list_head	access:public
rcu_node::grphi	rcu/tree.h	/^	int	grphi;		\/* highest-numbered CPU or group here. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::grplo	rcu/tree.h	/^	int	grplo;		\/* lowest-numbered CPU or group here. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::grpmask	rcu/tree.h	/^	unsigned long grpmask;	\/* Mask to apply to parent qsmask. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::grpnum	rcu/tree.h	/^	u8	grpnum;		\/* CPU\/group number for next level up. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::level	rcu/tree.h	/^	u8	level;		\/* root is at level 0. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::lock	rcu/tree.h	/^	raw_spinlock_t __private lock;	\/* Root rcu_node's lock protects *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::nocb_gp_wq	rcu/tree.h	/^	struct swait_queue_head nocb_gp_wq[2];$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::swait_queue_head	access:public
rcu_node::parent	rcu/tree.h	/^	struct rcu_node *parent;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::rcu_node	access:public
rcu_node::qsmask	rcu/tree.h	/^	unsigned long qsmask;	\/* CPUs or groups that need to switch in *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::qsmaskinit	rcu/tree.h	/^	unsigned long qsmaskinit;$/;"	kind:member	struct:rcu_node	access:public
rcu_node::qsmaskinitnext	rcu/tree.h	/^	unsigned long qsmaskinitnext;$/;"	kind:member	struct:rcu_node	access:public
rcu_node::rcu_gp_init_mask	rcu/tree.h	/^	unsigned long rcu_gp_init_mask;	\/* Mask of offline CPUs at GP init. *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_node::rew	rcu/tree.h	/^	struct rcu_exp_work rew;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::rcu_exp_work	access:public
rcu_node::wait_blkd_tasks	rcu/tree.h	/^	bool	wait_blkd_tasks;\/* Necessary to wait for blocked tasks to *\/$/;"	kind:member	struct:rcu_node	access:public
rcu_nohz_full_cpu	rcu/tree.h	/^static bool rcu_nohz_full_cpu(void);$/;"	kind:prototype	signature:(void)
rcu_nohz_full_cpu	rcu/tree_plugin.h	/^static bool rcu_nohz_full_cpu(void)$/;"	kind:function	signature:(void)
rcu_noqs	rcu/tree.h	/^union rcu_noqs {$/;"	kind:union
rcu_noqs::__anon32::exp	rcu/tree.h	/^		u8 exp;$/;"	kind:member	struct:rcu_noqs::__anon32	access:public
rcu_noqs::__anon32::norm	rcu/tree.h	/^		u8 norm;$/;"	kind:member	struct:rcu_noqs::__anon32	access:public
rcu_noqs::b	rcu/tree.h	/^	} b; \/* Bits. *\/$/;"	kind:member	union:rcu_noqs	typeref:struct:rcu_noqs::__anon32	access:public
rcu_noqs::s	rcu/tree.h	/^	u16 s; \/* Set of bits, aggregate OR here. *\/$/;"	kind:member	union:rcu_noqs	access:public
rcu_note_context_switch	rcu/tree_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_note_context_switch);$/;"	kind:variable
rcu_note_context_switch	rcu/tree_plugin.h	/^void rcu_note_context_switch(bool preempt)$/;"	kind:function	signature:(bool preempt)
rcu_num_lvls	rcu/rcu.h	/^extern int rcu_num_lvls;$/;"	kind:externvar
rcu_num_nodes	rcu/rcu.h	/^extern int rcu_num_nodes;$/;"	kind:externvar
rcu_ofl_gp_flags	rcu/tree.h	/^	short rcu_ofl_gp_flags;		\/* ->gp_flags at last offline. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_ofl_gp_seq	rcu/tree.h	/^	unsigned long rcu_ofl_gp_seq;	\/* ->gp_seq at last offline. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_onl_gp_flags	rcu/tree.h	/^	short rcu_onl_gp_flags;		\/* ->gp_flags at last online. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_onl_gp_seq	rcu/tree.h	/^	unsigned long rcu_onl_gp_seq;	\/* ->gp_seq at last online. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_organize_nocb_kthreads	rcu/tree.h	/^static void __init rcu_organize_nocb_kthreads(void);$/;"	kind:prototype	signature:(void)
rcu_organize_nocb_kthreads	rcu/tree_plugin.h	/^static void __init rcu_organize_nocb_kthreads(void)$/;"	kind:function	signature:(void)
rcu_panic	rcu/tree_stall.h	/^static int rcu_panic(struct notifier_block *this, unsigned long ev, void *ptr)$/;"	kind:function	signature:(struct notifier_block *this, unsigned long ev, void *ptr)
rcu_panic_block	rcu/tree_stall.h	/^static struct notifier_block rcu_panic_block = {$/;"	kind:variable	typeref:struct:notifier_block
rcu_par_gp_wq	rcu/rcu.h	/^extern struct workqueue_struct *rcu_par_gp_wq;$/;"	kind:externvar
rcu_preempt_blocked_readers_cgp	rcu/tree.h	/^static int rcu_preempt_blocked_readers_cgp(struct rcu_node *rnp);$/;"	kind:prototype	signature:(struct rcu_node *rnp)
rcu_preempt_blocked_readers_cgp	rcu/tree_plugin.h	/^static int rcu_preempt_blocked_readers_cgp(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_preempt_boost_start_gp	rcu/tree.h	/^static void rcu_preempt_boost_start_gp(struct rcu_node *rnp);$/;"	kind:prototype	signature:(struct rcu_node *rnp)
rcu_preempt_boost_start_gp	rcu/tree_plugin.h	/^static void rcu_preempt_boost_start_gp(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_preempt_check_blocked_tasks	rcu/tree.h	/^static void rcu_preempt_check_blocked_tasks(struct rcu_node *rnp);$/;"	kind:prototype	signature:(struct rcu_node *rnp)
rcu_preempt_check_blocked_tasks	rcu/tree_plugin.h	/^static void rcu_preempt_check_blocked_tasks(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_preempt_deferred_qs	rcu/tree.h	/^static void rcu_preempt_deferred_qs(struct task_struct *t);$/;"	kind:prototype	signature:(struct task_struct *t)
rcu_preempt_deferred_qs	rcu/tree_plugin.h	/^static void rcu_preempt_deferred_qs(struct task_struct *t) { }$/;"	kind:function	signature:(struct task_struct *t)
rcu_preempt_deferred_qs	rcu/tree_plugin.h	/^static void rcu_preempt_deferred_qs(struct task_struct *t)$/;"	kind:function	signature:(struct task_struct *t)
rcu_preempt_deferred_qs_handler	rcu/tree_plugin.h	/^static void rcu_preempt_deferred_qs_handler(struct irq_work *iwp)$/;"	kind:function	signature:(struct irq_work *iwp)
rcu_preempt_deferred_qs_irqrestore	rcu/tree_plugin.h	/^rcu_preempt_deferred_qs_irqrestore(struct task_struct *t, unsigned long flags)$/;"	kind:function	signature:(struct task_struct *t, unsigned long flags)
rcu_preempt_has_tasks	rcu/tree.h	/^static bool rcu_preempt_has_tasks(struct rcu_node *rnp);$/;"	kind:prototype	signature:(struct rcu_node *rnp)
rcu_preempt_has_tasks	rcu/tree_plugin.h	/^static bool rcu_preempt_has_tasks(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_preempt_need_deferred_qs	rcu/tree.h	/^static bool rcu_preempt_need_deferred_qs(struct task_struct *t);$/;"	kind:prototype	signature:(struct task_struct *t)
rcu_preempt_need_deferred_qs	rcu/tree_plugin.h	/^static bool rcu_preempt_need_deferred_qs(struct task_struct *t)$/;"	kind:function	signature:(struct task_struct *t)
rcu_prepare_for_idle	rcu/tree.h	/^static void rcu_prepare_for_idle(void);$/;"	kind:prototype	signature:(void)
rcu_prepare_for_idle	rcu/tree_plugin.h	/^static void rcu_prepare_for_idle(void)$/;"	kind:function	signature:(void)
rcu_prepare_kthreads	rcu/tree.h	/^static void rcu_prepare_kthreads(int cpu);$/;"	kind:prototype	signature:(int cpu)
rcu_prepare_kthreads	rcu/tree_plugin.h	/^static void rcu_prepare_kthreads(int cpu)$/;"	kind:function	signature:(int cpu)
rcu_print_detail_task_stall_rnp	rcu/tree_stall.h	/^static void rcu_print_detail_task_stall_rnp(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_print_task_exp_stall	rcu/tree.h	/^static int rcu_print_task_exp_stall(struct rcu_node *rnp);$/;"	kind:prototype	signature:(struct rcu_node *rnp)
rcu_print_task_exp_stall	rcu/tree_exp.h	/^static int rcu_print_task_exp_stall(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_print_task_exp_stall	rcu/tree_exp.h	/^static int rcu_print_task_exp_stall(struct rcu_node *rnp);$/;"	kind:prototype	signature:(struct rcu_node *rnp)
rcu_print_task_stall	rcu/tree_stall.h	/^static int rcu_print_task_stall(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_qs	rcu/tree.h	/^static void rcu_qs(void);$/;"	kind:prototype	signature:(void)
rcu_qs	rcu/tree_plugin.h	/^static void rcu_qs(void)$/;"	kind:function	signature:(void)
rcu_read_unlock_special	rcu/tree_plugin.h	/^static void rcu_read_unlock_special(struct task_struct *t)$/;"	kind:function	signature:(struct task_struct *t)
rcu_read_unlock_special	rcu/tree_plugin.h	/^static void rcu_read_unlock_special(struct task_struct *t);$/;"	kind:prototype	signature:(struct task_struct *t)
rcu_report_exp_cpu_mult	rcu/tree_exp.h	/^static void rcu_report_exp_cpu_mult(struct rcu_node *rnp,$/;"	kind:function	signature:(struct rcu_node *rnp, unsigned long mask, bool wake)
rcu_report_exp_rdp	rcu/tree_exp.h	/^static void rcu_report_exp_rdp(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
rcu_report_exp_rnp	rcu/tree_exp.h	/^static void __maybe_unused rcu_report_exp_rnp(struct rcu_node *rnp, bool wake)$/;"	kind:function	signature:(struct rcu_node *rnp, bool wake)
rcu_report_exp_rnp	rcu/tree_plugin.h	/^static void rcu_report_exp_rnp(struct rcu_node *rnp, bool wake);$/;"	kind:prototype	signature:(struct rcu_node *rnp, bool wake)
rcu_request_urgent_qs_task	rcu/rcu.h	/^static inline void rcu_request_urgent_qs_task(struct task_struct *t) { }$/;"	kind:function	signature:(struct task_struct *t)
rcu_request_urgent_qs_task	rcu/rcu.h	/^void rcu_request_urgent_qs_task(struct task_struct *t);$/;"	kind:prototype	signature:(struct task_struct *t)
rcu_segcblist_accelerate	rcu/rcu_segcblist.h	/^bool rcu_segcblist_accelerate(struct rcu_segcblist *rsclp, unsigned long seq);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, unsigned long seq)
rcu_segcblist_advance	rcu/rcu_segcblist.h	/^void rcu_segcblist_advance(struct rcu_segcblist *rsclp, unsigned long seq);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, unsigned long seq)
rcu_segcblist_disable	rcu/rcu_segcblist.h	/^void rcu_segcblist_disable(struct rcu_segcblist *rsclp);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_empty	rcu/rcu_segcblist.h	/^static inline bool rcu_segcblist_empty(struct rcu_segcblist *rsclp)$/;"	kind:function	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_enqueue	rcu/rcu_segcblist.h	/^void rcu_segcblist_enqueue(struct rcu_segcblist *rsclp,$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, struct rcu_head *rhp, bool lazy)
rcu_segcblist_entrain	rcu/rcu_segcblist.h	/^bool rcu_segcblist_entrain(struct rcu_segcblist *rsclp,$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, struct rcu_head *rhp, bool lazy)
rcu_segcblist_extract_count	rcu/rcu_segcblist.h	/^void rcu_segcblist_extract_count(struct rcu_segcblist *rsclp,$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, struct rcu_cblist *rclp)
rcu_segcblist_extract_done_cbs	rcu/rcu_segcblist.h	/^void rcu_segcblist_extract_done_cbs(struct rcu_segcblist *rsclp,$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, struct rcu_cblist *rclp)
rcu_segcblist_extract_pend_cbs	rcu/rcu_segcblist.h	/^void rcu_segcblist_extract_pend_cbs(struct rcu_segcblist *rsclp,$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, struct rcu_cblist *rclp)
rcu_segcblist_first_cb	rcu/rcu_segcblist.h	/^struct rcu_head *rcu_segcblist_first_cb(struct rcu_segcblist *rsclp);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_first_pend_cb	rcu/rcu_segcblist.h	/^struct rcu_head *rcu_segcblist_first_pend_cb(struct rcu_segcblist *rsclp);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_inc_len	rcu/rcu_segcblist.h	/^void rcu_segcblist_inc_len(struct rcu_segcblist *rsclp);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_init	rcu/rcu_segcblist.h	/^void rcu_segcblist_init(struct rcu_segcblist *rsclp);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_insert_count	rcu/rcu_segcblist.h	/^void rcu_segcblist_insert_count(struct rcu_segcblist *rsclp,$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, struct rcu_cblist *rclp)
rcu_segcblist_insert_done_cbs	rcu/rcu_segcblist.h	/^void rcu_segcblist_insert_done_cbs(struct rcu_segcblist *rsclp,$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, struct rcu_cblist *rclp)
rcu_segcblist_insert_pend_cbs	rcu/rcu_segcblist.h	/^void rcu_segcblist_insert_pend_cbs(struct rcu_segcblist *rsclp,$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, struct rcu_cblist *rclp)
rcu_segcblist_is_enabled	rcu/rcu_segcblist.h	/^static inline bool rcu_segcblist_is_enabled(struct rcu_segcblist *rsclp)$/;"	kind:function	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_is_offloaded	rcu/rcu_segcblist.h	/^static inline bool rcu_segcblist_is_offloaded(struct rcu_segcblist *rsclp)$/;"	kind:function	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_merge	rcu/rcu_segcblist.h	/^void rcu_segcblist_merge(struct rcu_segcblist *dst_rsclp,$/;"	kind:prototype	signature:(struct rcu_segcblist *dst_rsclp, struct rcu_segcblist *src_rsclp)
rcu_segcblist_n_cbs	rcu/rcu_segcblist.h	/^static inline long rcu_segcblist_n_cbs(struct rcu_segcblist *rsclp)$/;"	kind:function	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_n_lazy_cbs	rcu/rcu_segcblist.h	/^static inline long rcu_segcblist_n_lazy_cbs(struct rcu_segcblist *rsclp)$/;"	kind:function	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_n_nonlazy_cbs	rcu/rcu_segcblist.h	/^static inline long rcu_segcblist_n_nonlazy_cbs(struct rcu_segcblist *rsclp)$/;"	kind:function	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_nextgp	rcu/rcu_segcblist.h	/^bool rcu_segcblist_nextgp(struct rcu_segcblist *rsclp, unsigned long *lp);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp, unsigned long *lp)
rcu_segcblist_offload	rcu/rcu_segcblist.h	/^void rcu_segcblist_offload(struct rcu_segcblist *rsclp);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_pend_cbs	rcu/rcu_segcblist.h	/^bool rcu_segcblist_pend_cbs(struct rcu_segcblist *rsclp);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_ready_cbs	rcu/rcu_segcblist.h	/^bool rcu_segcblist_ready_cbs(struct rcu_segcblist *rsclp);$/;"	kind:prototype	signature:(struct rcu_segcblist *rsclp)
rcu_segcblist_restempty	rcu/rcu_segcblist.h	/^static inline bool rcu_segcblist_restempty(struct rcu_segcblist *rsclp, int seg)$/;"	kind:function	signature:(struct rcu_segcblist *rsclp, int seg)
rcu_seq_completed_gp	rcu/rcu.h	/^static inline bool rcu_seq_completed_gp(unsigned long old, unsigned long new)$/;"	kind:function	signature:(unsigned long old, unsigned long new)
rcu_seq_ctr	rcu/rcu.h	/^static inline unsigned long rcu_seq_ctr(unsigned long s)$/;"	kind:function	signature:(unsigned long s)
rcu_seq_current	rcu/rcu.h	/^static inline unsigned long rcu_seq_current(unsigned long *sp)$/;"	kind:function	signature:(unsigned long *sp)
rcu_seq_diff	rcu/rcu.h	/^static inline unsigned long rcu_seq_diff(unsigned long new, unsigned long old)$/;"	kind:function	signature:(unsigned long new, unsigned long old)
rcu_seq_done	rcu/rcu.h	/^static inline bool rcu_seq_done(unsigned long *sp, unsigned long s)$/;"	kind:function	signature:(unsigned long *sp, unsigned long s)
rcu_seq_end	rcu/rcu.h	/^static inline void rcu_seq_end(unsigned long *sp)$/;"	kind:function	signature:(unsigned long *sp)
rcu_seq_endval	rcu/rcu.h	/^static inline unsigned long rcu_seq_endval(unsigned long *sp)$/;"	kind:function	signature:(unsigned long *sp)
rcu_seq_new_gp	rcu/rcu.h	/^static inline bool rcu_seq_new_gp(unsigned long old, unsigned long new)$/;"	kind:function	signature:(unsigned long old, unsigned long new)
rcu_seq_set_state	rcu/rcu.h	/^static inline void rcu_seq_set_state(unsigned long *sp, int newstate)$/;"	kind:function	signature:(unsigned long *sp, int newstate)
rcu_seq_snap	rcu/rcu.h	/^static inline unsigned long rcu_seq_snap(unsigned long *sp)$/;"	kind:function	signature:(unsigned long *sp)
rcu_seq_start	rcu/rcu.h	/^static inline void rcu_seq_start(unsigned long *sp)$/;"	kind:function	signature:(unsigned long *sp)
rcu_seq_started	rcu/rcu.h	/^static inline bool rcu_seq_started(unsigned long *sp, unsigned long s)$/;"	kind:function	signature:(unsigned long *sp, unsigned long s)
rcu_seq_state	rcu/rcu.h	/^static inline int rcu_seq_state(unsigned long s)$/;"	kind:function	signature:(unsigned long s)
rcu_spawn_boost_kthreads	rcu/tree.h	/^static void __init rcu_spawn_boost_kthreads(void);$/;"	kind:prototype	signature:(void)
rcu_spawn_boost_kthreads	rcu/tree_plugin.h	/^static void __init rcu_spawn_boost_kthreads(void)$/;"	kind:function	signature:(void)
rcu_spawn_cpu_nocb_kthread	rcu/tree.h	/^static void rcu_spawn_cpu_nocb_kthread(int cpu);$/;"	kind:prototype	signature:(int cpu)
rcu_spawn_cpu_nocb_kthread	rcu/tree_plugin.h	/^static void rcu_spawn_cpu_nocb_kthread(int cpu)$/;"	kind:function	signature:(int cpu)
rcu_spawn_nocb_kthreads	rcu/tree.h	/^static void __init rcu_spawn_nocb_kthreads(void);$/;"	kind:prototype	signature:(void)
rcu_spawn_nocb_kthreads	rcu/tree_plugin.h	/^static void __init rcu_spawn_nocb_kthreads(void)$/;"	kind:function	signature:(void)
rcu_spawn_one_boost_kthread	rcu/tree_plugin.h	/^static void rcu_spawn_one_boost_kthread(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
rcu_spawn_one_nocb_kthread	rcu/tree_plugin.h	/^static void rcu_spawn_one_nocb_kthread(int cpu)$/;"	kind:function	signature:(int cpu)
rcu_stall_kick_kthreads	rcu/tree_stall.h	/^static void rcu_stall_kick_kthreads(void)$/;"	kind:function	signature:(void)
rcu_state	rcu/tree.h	/^struct rcu_state {$/;"	kind:struct
rcu_state::____cacheline_internodealigned_in_smp	rcu/tree.h	/^	raw_spinlock_t ofl_lock ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_state	access:public
rcu_state::____cacheline_internodealigned_in_smp	rcu/tree.h	/^	u8	boost ____cacheline_internodealigned_in_smp;$/;"	kind:member	struct:rcu_state	access:public
rcu_state::abbr	rcu/tree.h	/^	char abbr;				\/* Abbreviated name. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::barrier_completion	rcu/tree.h	/^	struct completion barrier_completion;	\/* Wake at barrier end. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::completion	access:public
rcu_state::barrier_cpu_count	rcu/tree.h	/^	atomic_t barrier_cpu_count;		\/* # CPUs waiting on. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::barrier_mutex	rcu/tree.h	/^	struct mutex barrier_mutex;		\/* Guards barrier fields. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::mutex	access:public
rcu_state::barrier_sequence	rcu/tree.h	/^	unsigned long barrier_sequence;		\/* ++ at start and end of *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::exp_mutex	rcu/tree.h	/^	struct mutex exp_mutex;			\/* Serialize expedited GP. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::mutex	access:public
rcu_state::exp_wake_mutex	rcu/tree.h	/^	struct mutex exp_wake_mutex;		\/* Serialize wakeup. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::mutex	access:public
rcu_state::expedited_need_qs	rcu/tree.h	/^	atomic_t expedited_need_qs;		\/* # CPUs left to check in. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::expedited_sequence	rcu/tree.h	/^	unsigned long expedited_sequence;	\/* Take a ticket. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::expedited_wq	rcu/tree.h	/^	struct swait_queue_head expedited_wq;	\/* Wait for check-ins. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::swait_queue_head	access:public
rcu_state::gp_activity	rcu/tree.h	/^	unsigned long gp_activity;		\/* Time of last GP kthread *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::gp_end	rcu/tree.h	/^	unsigned long gp_end;			\/* Time last GP ended, again *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::gp_flags	rcu/tree.h	/^	short gp_flags;				\/* Commands for GP task. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::gp_kthread	rcu/tree.h	/^	struct task_struct *gp_kthread;		\/* Task for grace periods. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::task_struct	access:public
rcu_state::gp_max	rcu/tree.h	/^	unsigned long gp_max;			\/* Maximum GP duration in *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::gp_req_activity	rcu/tree.h	/^	unsigned long gp_req_activity;		\/* Time of last GP request *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::gp_seq	rcu/tree.h	/^	unsigned long gp_seq;			\/* Grace-period sequence #. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::gp_start	rcu/tree.h	/^	unsigned long gp_start;			\/* Time at which GP started, *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::gp_state	rcu/tree.h	/^	short gp_state;				\/* GP kthread sleep state. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::gp_wake_seq	rcu/tree.h	/^	unsigned long gp_wake_seq;		\/* ->gp_seq at ^^^. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::gp_wake_time	rcu/tree.h	/^	unsigned long gp_wake_time;		\/* Last GP kthread wake. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::gp_wq	rcu/tree.h	/^	struct swait_queue_head gp_wq;		\/* Where GP task waits. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::swait_queue_head	access:public
rcu_state::jiffies_force_qs	rcu/tree.h	/^	unsigned long jiffies_force_qs;		\/* Time at which to invoke *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::jiffies_kick_kthreads	rcu/tree.h	/^	unsigned long jiffies_kick_kthreads;	\/* Time at which to kick *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::jiffies_resched	rcu/tree.h	/^	unsigned long jiffies_resched;		\/* Time at which to resched *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::jiffies_stall	rcu/tree.h	/^	unsigned long jiffies_stall;		\/* Time at which to check *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::level	rcu/tree.h	/^	struct rcu_node *level[RCU_NUM_LVLS + 1];$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::rcu_node	access:public
rcu_state::n_force_qs	rcu/tree.h	/^	unsigned long n_force_qs;		\/* Number of calls to *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::n_force_qs_gpstart	rcu/tree.h	/^	unsigned long n_force_qs_gpstart;	\/* Snapshot of n_force_qs at *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::name	rcu/tree.h	/^	const char *name;			\/* Name of structure. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::ncpus	rcu/tree.h	/^	int ncpus;				\/* # CPUs seen so far. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::ncpus_snap	rcu/tree.h	/^	int ncpus_snap;				\/* # CPUs seen last time. *\/$/;"	kind:member	struct:rcu_state	access:public
rcu_state::node	rcu/tree.h	/^	struct rcu_node node[NUM_RCU_NODES];	\/* Hierarchy. *\/$/;"	kind:member	struct:rcu_state	typeref:struct:rcu_state::rcu_node	access:public
rcu_sysrq_end	rcu/tree_stall.h	/^void rcu_sysrq_end(void)$/;"	kind:function	signature:(void)
rcu_sysrq_init	rcu/tree_stall.h	/^early_initcall(rcu_sysrq_init);$/;"	kind:variable
rcu_sysrq_init	rcu/tree_stall.h	/^static int __init rcu_sysrq_init(void)$/;"	kind:function	signature:(void)
rcu_sysrq_start	rcu/tree_stall.h	/^void rcu_sysrq_start(void)$/;"	kind:function	signature:(void)
rcu_test_sync_prims	rcu/rcu.h	/^void rcu_test_sync_prims(void);$/;"	kind:prototype	signature:(void)
rcu_try_advance_all_cbs	rcu/tree_plugin.h	/^static bool __maybe_unused rcu_try_advance_all_cbs(void)$/;"	kind:function	signature:(void)
rcu_unexpedite_gp	rcu/rcu.h	/^static inline void rcu_unexpedite_gp(void) { }$/;"	kind:function	signature:(void)
rcu_unexpedite_gp	rcu/rcu.h	/^void rcu_unexpedite_gp(void);$/;"	kind:prototype	signature:(void)
rcu_urgent_qs	rcu/tree.h	/^	bool rcu_urgent_qs;		\/* GP old need light quiescent state. *\/$/;"	kind:member	struct:rcu_data	access:public
rcu_wait	rcu/tree.h	269;"	kind:macro
rcuhead_debug_descr	rcu/rcu.h	/^extern struct debug_obj_descr rcuhead_debug_descr;$/;"	kind:externvar
rcupdate_announce_bootup_oddness	rcu/rcu.h	/^void rcupdate_announce_bootup_oddness(void);$/;"	kind:prototype	signature:(void)
rcutorture_get_gp_data	rcu/rcu.h	/^static inline void rcutorture_get_gp_data(enum rcutorture_type test_type,$/;"	kind:function	signature:(enum rcutorture_type test_type, int *flags, unsigned long *gp_seq)
rcutorture_get_gp_data	rcu/rcu.h	/^void rcutorture_get_gp_data(enum rcutorture_type test_type, int *flags,$/;"	kind:prototype	signature:(enum rcutorture_type test_type, int *flags, unsigned long *gp_seq)
rcutorture_record_progress	rcu/rcu.h	/^static inline void rcutorture_record_progress(unsigned long vernum) { }$/;"	kind:function	signature:(unsigned long vernum)
rcutorture_record_progress	rcu/rcu.h	/^void rcutorture_record_progress(unsigned long vernum);$/;"	kind:prototype	signature:(unsigned long vernum)
rcutorture_sched_setaffinity	rcu/rcu.h	/^long rcutorture_sched_setaffinity(pid_t pid, const struct cpumask *in_mask);$/;"	kind:prototype	signature:(pid_t pid, const struct cpumask *in_mask)
rcutorture_type	rcu/rcu.h	/^enum rcutorture_type {$/;"	kind:enum
rd	sched/sched.h	/^	struct root_domain		*rd;$/;"	kind:member	struct:rq	typeref:struct:rq::root_domain	access:public
rdev	audit.h	/^	dev_t			rdev;$/;"	kind:member	struct:audit_names	access:public
read	trace/trace.h	/^	ssize_t			(*read)(struct trace_iterator *iter,$/;"	kind:member	struct:tracer	access:public
rebind_subsystems	cgroup/cgroup-internal.h	/^int rebind_subsystems(struct cgroup_root *dst_root, u16 ss_mask);$/;"	kind:prototype	signature:(struct cgroup_root *dst_root, u16 ss_mask)
record_gp_stall_check_time	rcu/tree.h	/^static void record_gp_stall_check_time(void);$/;"	kind:prototype	signature:(void)
record_gp_stall_check_time	rcu/tree_stall.h	/^static void record_gp_stall_check_time(void)$/;"	kind:function	signature:(void)
record_irq_time	irq/internals.h	/^static __always_inline void record_irq_time(struct irq_desc *desc)$/;"	kind:function	signature:(struct irq_desc *desc)
record_irq_time	irq/internals.h	/^static inline void record_irq_time(struct irq_desc *desc) {}$/;"	kind:function	signature:(struct irq_desc *desc)
redundant_hardirqs_off	locking/lockdep_internals.h	/^	unsigned long  redundant_hardirqs_off;$/;"	kind:member	struct:lockdep_stats	access:public
redundant_hardirqs_on	locking/lockdep_internals.h	/^	unsigned long  redundant_hardirqs_on;$/;"	kind:member	struct:lockdep_stats	access:public
redundant_softirqs_off	locking/lockdep_internals.h	/^	unsigned long  redundant_softirqs_off;$/;"	kind:member	struct:lockdep_stats	access:public
redundant_softirqs_on	locking/lockdep_internals.h	/^	unsigned long  redundant_softirqs_on;$/;"	kind:member	struct:lockdep_stats	access:public
ref	bpf/bpf_lru_list.h	/^	u8 ref;$/;"	kind:member	struct:bpf_lru_node	access:public
ref	sched/sched.h	/^	atomic_t		ref;$/;"	kind:member	struct:sched_group	access:public
ref	sched/sched.h	/^	atomic_t		ref;$/;"	kind:member	struct:sched_group_capacity	access:public
ref	trace/trace.h	/^	int				ref;$/;"	kind:member	struct:event_trigger_data	access:public
ref	trace/trace.h	/^	int			ref;$/;"	kind:member	struct:trace_array	access:public
ref	trace/trace.h	/^	int			ref;$/;"	kind:member	struct:tracer	access:public
ref_count	trace/trace.h	/^	int				ref_count;$/;"	kind:member	struct:trace_subsystem_dir	access:public
ref_count	trace/trace.h	/^	int			ref_count;$/;"	kind:member	struct:event_subsystem	access:public
refcount	events/internal.h	/^	refcount_t			refcount;$/;"	kind:member	struct:ring_buffer	access:public
refcount	sched/sched.h	/^	atomic_t		refcount;$/;"	kind:member	struct:root_domain	access:public
reg	trace/trace.h	/^	int			(*reg)(char *glob,$/;"	kind:member	struct:event_command	access:public
regex	trace/trace.h	/^	struct regex		regex;$/;"	kind:member	struct:filter_pred	typeref:struct:filter_pred::regex	access:public
regex	trace/trace.h	/^struct regex {$/;"	kind:struct
regex	trace/trace.h	/^struct regex;$/;"	kind:externvar
regex::field_len	trace/trace.h	/^	int			field_len;$/;"	kind:member	struct:regex	access:public
regex::len	trace/trace.h	/^	int			len;$/;"	kind:member	struct:regex	access:public
regex::match	trace/trace.h	/^	regex_match_func	match;$/;"	kind:member	struct:regex	access:public
regex::pattern	trace/trace.h	/^	char			pattern[MAX_FILTER_STR_VAL];$/;"	kind:member	struct:regex	access:public
regex_match_func	trace/trace.h	/^typedef int (*regex_match_func)(char *str, struct regex *r, int len);$/;"	kind:typedef
regex_type	trace/trace.h	/^enum regex_type {$/;"	kind:enum
register_event_command	trace/trace.h	/^extern int register_event_command(struct event_command *cmd);$/;"	kind:prototype	signature:(struct event_command *cmd)
register_ftrace_command	trace/trace.h	/^int register_ftrace_command(struct ftrace_func_command *cmd);$/;"	kind:prototype	signature:(struct ftrace_func_command *cmd)
register_ftrace_command	trace/trace.h	/^static inline __init int register_ftrace_command(struct ftrace_func_command *cmd)$/;"	kind:function	signature:(struct ftrace_func_command *cmd)
register_ftrace_function_probe	trace/trace.h	/^register_ftrace_function_probe(char *glob, struct trace_array *tr,$/;"	kind:prototype	signature:(char *glob, struct trace_array *tr, struct ftrace_probe_ops *ops, void *data)
register_handler_proc	irq/internals.h	/^extern void register_handler_proc(unsigned int irq, struct irqaction *action);$/;"	kind:prototype	signature:(unsigned int irq, struct irqaction *action)
register_handler_proc	irq/internals.h	/^static inline void register_handler_proc(unsigned int irq,$/;"	kind:function	signature:(unsigned int irq, struct irqaction *action)
register_irq_proc	irq/internals.h	/^extern void register_irq_proc(unsigned int irq, struct irq_desc *desc);$/;"	kind:prototype	signature:(unsigned int irq, struct irq_desc *desc)
register_irq_proc	irq/internals.h	/^static inline void register_irq_proc(unsigned int irq, struct irq_desc *desc) { }$/;"	kind:function	signature:(unsigned int irq, struct irq_desc *desc)
register_sched_domain_sysctl	sched/sched.h	/^static inline void register_sched_domain_sysctl(void)$/;"	kind:function	signature:(void)
register_sched_domain_sysctl	sched/sched.h	/^void register_sched_domain_sysctl(void);$/;"	kind:prototype	signature:(void)
register_stat_tracer	trace/trace_stat.h	/^extern int register_stat_tracer(struct tracer_stat *trace);$/;"	kind:prototype	signature:(struct tracer_stat *trace)
register_tracer	trace/trace.h	/^int register_tracer(struct tracer *type);$/;"	kind:prototype	signature:(struct tracer *type)
register_trigger_cmds	trace/trace.h	/^extern int register_trigger_cmds(void);$/;"	kind:prototype	signature:(void)
register_trigger_hist_cmd	trace/trace.h	/^extern int register_trigger_hist_cmd(void);$/;"	kind:prototype	signature:(void)
register_trigger_hist_cmd	trace/trace.h	/^static inline int register_trigger_hist_cmd(void) { return 0; }$/;"	kind:function	signature:(void)
register_trigger_hist_enable_disable_cmds	trace/trace.h	/^extern int register_trigger_hist_enable_disable_cmds(void);$/;"	kind:prototype	signature:(void)
register_trigger_hist_enable_disable_cmds	trace/trace.h	/^static inline int register_trigger_hist_enable_disable_cmds(void) { return 0; }$/;"	kind:function	signature:(void)
release_agent	cgroup/cgroup-internal.h	/^	char		*release_agent;		\/* Path for release notifications *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
removed	sched/sched.h	/^	} removed;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::__anon28	access:public
resched_cpu	rcu/rcu.h	/^extern void resched_cpu(int cpu);$/;"	kind:prototype	signature:(int cpu)
resched_cpu	sched/sched.h	/^extern void resched_cpu(int cpu);$/;"	kind:prototype	signature:(int cpu)
resched_curr	sched/sched.h	/^extern void resched_curr(struct rq *rq);$/;"	kind:prototype	signature:(struct rq *rq)
rescue_wq	workqueue_internal.h	/^	struct workqueue_struct	*rescue_wq;	\/* I: the workqueue to rescue *\/$/;"	kind:member	struct:worker	typeref:struct:worker::workqueue_struct	access:public
reserved_size	power/power.h	/^extern unsigned long reserved_size;$/;"	kind:externvar
reset	trace/trace.h	/^	void			(*reset)(struct trace_array *tr);$/;"	kind:member	struct:tracer	access:public
restore_highmem	power/power.h	/^int restore_highmem(void);$/;"	kind:prototype	signature:(void)
restore_highmem	power/power.h	/^static inline int restore_highmem(void) { return 0; }$/;"	kind:function	signature:(void)
ret	trace/trace.h	/^	long			ret;$/;"	kind:member	struct:syscall_trace_exit	access:public
ret_ip	trace/trace.h	/^	unsigned long		ret_ip;$/;"	kind:member	struct:kretprobe_trace_entry_head	access:public
ret_state	debug/debug_core.h	/^	int			ret_state;$/;"	kind:member	struct:debuggerinfo_struct	access:public
return_code	audit.h	/^	long		    return_code;\/* syscall return code *\/$/;"	kind:member	struct:audit_context	access:public
return_valid	audit.h	/^	int		    return_valid; \/* return code is valid *\/$/;"	kind:member	struct:audit_context	access:public
rew	rcu/tree.h	/^	struct rcu_exp_work rew;$/;"	kind:member	struct:rcu_node	typeref:struct:rcu_node::rcu_exp_work	access:public
rew_s	rcu/tree.h	/^	unsigned long rew_s;$/;"	kind:member	struct:rcu_exp_work	access:public
rew_work	rcu/tree.h	/^	struct work_struct rew_work;$/;"	kind:member	struct:rcu_exp_work	typeref:struct:rcu_exp_work::work_struct	access:public
reweight_task	sched/sched.h	/^extern void reweight_task(struct task_struct *p, int prio);$/;"	kind:prototype	signature:(struct task_struct *p, int prio)
ring_buffer	events/internal.h	/^struct ring_buffer {$/;"	kind:struct
ring_buffer::aux_head	events/internal.h	/^	long				aux_head;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_mmap_count	events/internal.h	/^	atomic_t			aux_mmap_count;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_mmap_locked	events/internal.h	/^	unsigned long			aux_mmap_locked;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_nest	events/internal.h	/^	unsigned int			aux_nest;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_nr_pages	events/internal.h	/^	int				aux_nr_pages;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_overwrite	events/internal.h	/^	int				aux_overwrite;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_pages	events/internal.h	/^	void				**aux_pages;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_pgoff	events/internal.h	/^	unsigned long			aux_pgoff;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_priv	events/internal.h	/^	void				*aux_priv;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_refcount	events/internal.h	/^	refcount_t			aux_refcount;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_wakeup	events/internal.h	/^	long				aux_wakeup;	\/* last aux_watermark boundary crossed by aux_head *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::aux_watermark	events/internal.h	/^	long				aux_watermark;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::data_pages	events/internal.h	/^	void				*data_pages[0];$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::event_list	events/internal.h	/^	struct list_head		event_list;$/;"	kind:member	struct:ring_buffer	typeref:struct:ring_buffer::list_head	access:public
ring_buffer::event_lock	events/internal.h	/^	spinlock_t			event_lock;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::events	events/internal.h	/^	local_t				events;		\/* event limit       *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::free_aux	events/internal.h	/^	void				(*free_aux)(void *);$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::head	events/internal.h	/^	local_t				head;		\/* write position    *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::lost	events/internal.h	/^	local_t				lost;		\/* nr records lost   *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::mmap_count	events/internal.h	/^	atomic_t			mmap_count;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::mmap_locked	events/internal.h	/^	unsigned long			mmap_locked;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::mmap_user	events/internal.h	/^	struct user_struct		*mmap_user;$/;"	kind:member	struct:ring_buffer	typeref:struct:ring_buffer::user_struct	access:public
ring_buffer::nest	events/internal.h	/^	unsigned int			nest;		\/* nested writers    *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::nr_pages	events/internal.h	/^	int				nr_pages;	\/* nr of data pages  *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::overwrite	events/internal.h	/^	int				overwrite;	\/* can overwrite itself *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::page_order	events/internal.h	/^	int				page_order;	\/* allocation order  *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::paused	events/internal.h	/^	int				paused;		\/* can write into ring buffer *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::poll	events/internal.h	/^	atomic_t			poll;		\/* POLL_ for wakeups *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::rcu_head	events/internal.h	/^	struct rcu_head			rcu_head;$/;"	kind:member	struct:ring_buffer	typeref:struct:ring_buffer::rcu_head	access:public
ring_buffer::refcount	events/internal.h	/^	refcount_t			refcount;$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::user_page	events/internal.h	/^	struct perf_event_mmap_page	*user_page;$/;"	kind:member	struct:ring_buffer	typeref:struct:ring_buffer::perf_event_mmap_page	access:public
ring_buffer::wakeup	events/internal.h	/^	local_t				wakeup;		\/* wakeup stamp      *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::watermark	events/internal.h	/^	long				watermark;	\/* wakeup watermark  *\/$/;"	kind:member	struct:ring_buffer	access:public
ring_buffer::work	events/internal.h	/^	struct work_struct		work;$/;"	kind:member	struct:ring_buffer	typeref:struct:ring_buffer::work_struct	access:public
ring_buffer_event	trace/trace.h	/^struct ring_buffer_event;$/;"	kind:externvar
ring_buffer_expanded	trace/trace.h	/^extern bool ring_buffer_expanded;$/;"	kind:externvar
ring_buffer_get	events/internal.h	/^extern struct ring_buffer *ring_buffer_get(struct perf_event *event);$/;"	kind:prototype	signature:(struct perf_event *event)
ring_buffer_put	events/internal.h	/^extern void ring_buffer_put(struct ring_buffer *rb);$/;"	kind:prototype	signature:(struct ring_buffer *rb)
root	cgroup/cgroup-internal.h	/^	struct cgroup_root	*root;$/;"	kind:member	struct:cgroup_fs_context	typeref:struct:cgroup_fs_context::cgroup_root	access:public
root	sched/sched.h	/^	struct rb_root_cached	root;$/;"	kind:member	struct:dl_rq	typeref:struct:dl_rq::rb_root_cached	access:public
root_domain	sched/sched.h	/^struct root_domain {$/;"	kind:struct
root_domain::cpudl	sched/sched.h	/^	struct cpudl		cpudl;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::cpudl	access:public
root_domain::cpupri	sched/sched.h	/^	struct cpupri		cpupri;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::cpupri	access:public
root_domain::dl_bw	sched/sched.h	/^	struct dl_bw		dl_bw;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::dl_bw	access:public
root_domain::dlo_count	sched/sched.h	/^	atomic_t		dlo_count;$/;"	kind:member	struct:root_domain	access:public
root_domain::dlo_mask	sched/sched.h	/^	cpumask_var_t		dlo_mask;$/;"	kind:member	struct:root_domain	access:public
root_domain::max_cpu_capacity	sched/sched.h	/^	unsigned long		max_cpu_capacity;$/;"	kind:member	struct:root_domain	access:public
root_domain::online	sched/sched.h	/^	cpumask_var_t		online;$/;"	kind:member	struct:root_domain	access:public
root_domain::overutilized	sched/sched.h	/^	int			overutilized;$/;"	kind:member	struct:root_domain	access:public
root_domain::pd	sched/sched.h	/^	struct perf_domain __rcu *pd;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::__rcu	access:public
root_domain::rcu	sched/sched.h	/^	struct rcu_head		rcu;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::rcu_head	access:public
root_domain::refcount	sched/sched.h	/^	atomic_t		refcount;$/;"	kind:member	struct:root_domain	access:public
root_domain::rto_count	sched/sched.h	/^	atomic_t		rto_count;$/;"	kind:member	struct:root_domain	access:public
root_domain::rto_cpu	sched/sched.h	/^	int			rto_cpu;$/;"	kind:member	struct:root_domain	access:public
root_domain::rto_lock	sched/sched.h	/^	raw_spinlock_t		rto_lock;$/;"	kind:member	struct:root_domain	access:public
root_domain::rto_loop	sched/sched.h	/^	int			rto_loop;$/;"	kind:member	struct:root_domain	access:public
root_domain::rto_loop_next	sched/sched.h	/^	atomic_t		rto_loop_next;$/;"	kind:member	struct:root_domain	access:public
root_domain::rto_loop_start	sched/sched.h	/^	atomic_t		rto_loop_start;$/;"	kind:member	struct:root_domain	access:public
root_domain::rto_mask	sched/sched.h	/^	cpumask_var_t		rto_mask;$/;"	kind:member	struct:root_domain	access:public
root_domain::rto_push_work	sched/sched.h	/^	struct irq_work		rto_push_work;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::irq_work	access:public
root_domain::span	sched/sched.h	/^	cpumask_var_t		span;$/;"	kind:member	struct:root_domain	access:public
rootid	audit.h	/^	kuid_t			rootid;$/;"	kind:member	struct:audit_cap_data	access:public
rounding_up	debug/debug_core.h	/^	bool			rounding_up;$/;"	kind:member	struct:debuggerinfo_struct	access:public
rq	sched/sched.h	/^	struct rq		*rq;	\/* CPU runqueue to which this cfs_rq is attached *\/$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::rq	access:public
rq	sched/sched.h	/^	struct rq		*rq;$/;"	kind:member	struct:rt_rq	typeref:struct:rt_rq::rq	access:public
rq	sched/sched.h	/^struct rq {$/;"	kind:struct
rq	sched/sched.h	/^struct rq;$/;"	kind:externvar
rq::____cacheline_aligned	sched/sched.h	/^	struct uclamp_rq	uclamp[UCLAMP_CNT] ____cacheline_aligned;$/;"	kind:member	struct:rq	typeref:struct:rq::uclamp	access:public
rq::____cacheline_aligned	sched/sched.h	/^	u64			clock_task ____cacheline_aligned;$/;"	kind:member	struct:rq	access:public
rq::active_balance	sched/sched.h	/^	int			active_balance;$/;"	kind:member	struct:rq	access:public
rq::active_balance_work	sched/sched.h	/^	struct cpu_stop_work	active_balance_work;$/;"	kind:member	struct:rq	typeref:struct:rq::cpu_stop_work	access:public
rq::avg_dl	sched/sched.h	/^	struct sched_avg	avg_dl;$/;"	kind:member	struct:rq	typeref:struct:rq::sched_avg	access:public
rq::avg_idle	sched/sched.h	/^	u64			avg_idle;$/;"	kind:member	struct:rq	access:public
rq::avg_irq	sched/sched.h	/^	struct sched_avg	avg_irq;$/;"	kind:member	struct:rq	typeref:struct:rq::sched_avg	access:public
rq::avg_rt	sched/sched.h	/^	struct sched_avg	avg_rt;$/;"	kind:member	struct:rq	typeref:struct:rq::sched_avg	access:public
rq::balance_callback	sched/sched.h	/^	struct callback_head	*balance_callback;$/;"	kind:member	struct:rq	typeref:struct:rq::callback_head	access:public
rq::calc_load_active	sched/sched.h	/^	long			calc_load_active;$/;"	kind:member	struct:rq	access:public
rq::calc_load_update	sched/sched.h	/^	unsigned long		calc_load_update;$/;"	kind:member	struct:rq	access:public
rq::cfs	sched/sched.h	/^	struct cfs_rq		cfs;$/;"	kind:member	struct:rq	typeref:struct:rq::cfs_rq	access:public
rq::cfs_tasks	sched/sched.h	/^	struct list_head cfs_tasks;$/;"	kind:member	struct:rq	typeref:struct:rq::list_head	access:public
rq::clock	sched/sched.h	/^	u64			clock;$/;"	kind:member	struct:rq	access:public
rq::clock_pelt	sched/sched.h	/^	u64			clock_pelt;$/;"	kind:member	struct:rq	access:public
rq::clock_update_flags	sched/sched.h	/^	unsigned int		clock_update_flags;$/;"	kind:member	struct:rq	access:public
rq::cpu	sched/sched.h	/^	int			cpu;$/;"	kind:member	struct:rq	access:public
rq::cpu_capacity	sched/sched.h	/^	unsigned long		cpu_capacity;$/;"	kind:member	struct:rq	access:public
rq::cpu_capacity_orig	sched/sched.h	/^	unsigned long		cpu_capacity_orig;$/;"	kind:member	struct:rq	access:public
rq::curr	sched/sched.h	/^	struct task_struct	*curr;$/;"	kind:member	struct:rq	typeref:struct:rq::task_struct	access:public
rq::dl	sched/sched.h	/^	struct dl_rq		dl;$/;"	kind:member	struct:rq	typeref:struct:rq::dl_rq	access:public
rq::has_blocked_load	sched/sched.h	/^	unsigned int		has_blocked_load;$/;"	kind:member	struct:rq	access:public
rq::hrtick_csd	sched/sched.h	/^	call_single_data_t	hrtick_csd;$/;"	kind:member	struct:rq	access:public
rq::hrtick_csd_pending	sched/sched.h	/^	int			hrtick_csd_pending;$/;"	kind:member	struct:rq	access:public
rq::hrtick_timer	sched/sched.h	/^	struct hrtimer		hrtick_timer;$/;"	kind:member	struct:rq	typeref:struct:rq::hrtimer	access:public
rq::idle	sched/sched.h	/^	struct task_struct	*idle;$/;"	kind:member	struct:rq	typeref:struct:rq::task_struct	access:public
rq::idle_balance	sched/sched.h	/^	unsigned char		idle_balance;$/;"	kind:member	struct:rq	access:public
rq::idle_stamp	sched/sched.h	/^	u64			idle_stamp;$/;"	kind:member	struct:rq	access:public
rq::idle_state	sched/sched.h	/^	struct cpuidle_state	*idle_state;$/;"	kind:member	struct:rq	typeref:struct:rq::cpuidle_state	access:public
rq::last_blocked_load_update_tick	sched/sched.h	/^	unsigned long		last_blocked_load_update_tick;$/;"	kind:member	struct:rq	access:public
rq::last_load_update_tick	sched/sched.h	/^	unsigned long		last_load_update_tick;$/;"	kind:member	struct:rq	access:public
rq::leaf_cfs_rq_list	sched/sched.h	/^	struct list_head	leaf_cfs_rq_list;$/;"	kind:member	struct:rq	typeref:struct:rq::list_head	access:public
rq::lock	sched/sched.h	/^	raw_spinlock_t		lock;$/;"	kind:member	struct:rq	access:public
rq::lost_idle_time	sched/sched.h	/^	unsigned long		lost_idle_time;$/;"	kind:member	struct:rq	access:public
rq::max_idle_balance_cost	sched/sched.h	/^	u64			max_idle_balance_cost;$/;"	kind:member	struct:rq	access:public
rq::membarrier_state	sched/sched.h	/^	int membarrier_state;$/;"	kind:member	struct:rq	access:public
rq::misfit_task_load	sched/sched.h	/^	unsigned long		misfit_task_load;$/;"	kind:member	struct:rq	access:public
rq::next_balance	sched/sched.h	/^	unsigned long		next_balance;$/;"	kind:member	struct:rq	access:public
rq::nohz_flags	sched/sched.h	/^	atomic_t nohz_flags;$/;"	kind:member	struct:rq	access:public
rq::nohz_tick_stopped	sched/sched.h	/^	unsigned int		nohz_tick_stopped;$/;"	kind:member	struct:rq	access:public
rq::nr_iowait	sched/sched.h	/^	atomic_t		nr_iowait;$/;"	kind:member	struct:rq	access:public
rq::nr_load_updates	sched/sched.h	/^	unsigned long		nr_load_updates;$/;"	kind:member	struct:rq	access:public
rq::nr_numa_running	sched/sched.h	/^	unsigned int		nr_numa_running;$/;"	kind:member	struct:rq	access:public
rq::nr_preferred_running	sched/sched.h	/^	unsigned int		nr_preferred_running;$/;"	kind:member	struct:rq	access:public
rq::nr_running	sched/sched.h	/^	unsigned int		nr_running;$/;"	kind:member	struct:rq	access:public
rq::nr_switches	sched/sched.h	/^	u64			nr_switches;$/;"	kind:member	struct:rq	access:public
rq::nr_uninterruptible	sched/sched.h	/^	unsigned long		nr_uninterruptible;$/;"	kind:member	struct:rq	access:public
rq::numa_migrate_on	sched/sched.h	/^	unsigned int		numa_migrate_on;$/;"	kind:member	struct:rq	access:public
rq::online	sched/sched.h	/^	int			online;$/;"	kind:member	struct:rq	access:public
rq::prev_irq_time	sched/sched.h	/^	u64			prev_irq_time;$/;"	kind:member	struct:rq	access:public
rq::prev_mm	sched/sched.h	/^	struct mm_struct	*prev_mm;$/;"	kind:member	struct:rq	typeref:struct:rq::mm_struct	access:public
rq::prev_steal_time	sched/sched.h	/^	u64			prev_steal_time;$/;"	kind:member	struct:rq	access:public
rq::prev_steal_time_rq	sched/sched.h	/^	u64			prev_steal_time_rq;$/;"	kind:member	struct:rq	access:public
rq::push_cpu	sched/sched.h	/^	int			push_cpu;$/;"	kind:member	struct:rq	access:public
rq::rd	sched/sched.h	/^	struct root_domain		*rd;$/;"	kind:member	struct:rq	typeref:struct:rq::root_domain	access:public
rq::rq_cpu_time	sched/sched.h	/^	unsigned long long	rq_cpu_time;$/;"	kind:member	struct:rq	access:public
rq::rq_sched_info	sched/sched.h	/^	struct sched_info	rq_sched_info;$/;"	kind:member	struct:rq	typeref:struct:rq::sched_info	access:public
rq::rt	sched/sched.h	/^	struct rt_rq		rt;$/;"	kind:member	struct:rq	typeref:struct:rq::rt_rq	access:public
rq::sched_count	sched/sched.h	/^	unsigned int		sched_count;$/;"	kind:member	struct:rq	access:public
rq::sched_goidle	sched/sched.h	/^	unsigned int		sched_goidle;$/;"	kind:member	struct:rq	access:public
rq::sd	sched/sched.h	/^	struct sched_domain __rcu	*sd;$/;"	kind:member	struct:rq	typeref:struct:rq::__rcu	access:public
rq::stop	sched/sched.h	/^	struct task_struct	*stop;$/;"	kind:member	struct:rq	typeref:struct:rq::task_struct	access:public
rq::tmp_alone_branch	sched/sched.h	/^	struct list_head	*tmp_alone_branch;$/;"	kind:member	struct:rq	typeref:struct:rq::list_head	access:public
rq::ttwu_count	sched/sched.h	/^	unsigned int		ttwu_count;$/;"	kind:member	struct:rq	access:public
rq::ttwu_local	sched/sched.h	/^	unsigned int		ttwu_local;$/;"	kind:member	struct:rq	access:public
rq::uclamp_flags	sched/sched.h	/^	unsigned int		uclamp_flags;$/;"	kind:member	struct:rq	access:public
rq::wake_list	sched/sched.h	/^	struct llist_head	wake_list;$/;"	kind:member	struct:rq	typeref:struct:rq::llist_head	access:public
rq::yld_count	sched/sched.h	/^	unsigned int		yld_count;$/;"	kind:member	struct:rq	access:public
rq_attach_root	sched/sched.h	/^extern void rq_attach_root(struct rq *rq, struct root_domain *rd);$/;"	kind:prototype	signature:(struct rq *rq, struct root_domain *rd)
rq_clock	sched/sched.h	/^static inline u64 rq_clock(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
rq_clock_cancel_skipupdate	sched/sched.h	/^static inline void rq_clock_cancel_skipupdate(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
rq_clock_pelt	sched/pelt.h	/^static inline u64 rq_clock_pelt(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
rq_clock_skip_update	sched/sched.h	/^static inline void rq_clock_skip_update(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
rq_clock_task	sched/sched.h	/^static inline u64 rq_clock_task(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
rq_cpu_time	sched/sched.h	/^	unsigned long long	rq_cpu_time;$/;"	kind:member	struct:rq	access:public
rq_flags	sched/sched.h	/^struct rq_flags {$/;"	kind:struct
rq_flags::clock_update_flags	sched/sched.h	/^	unsigned int clock_update_flags;$/;"	kind:member	struct:rq_flags	access:public
rq_flags::cookie	sched/sched.h	/^	struct pin_cookie cookie;$/;"	kind:member	struct:rq_flags	typeref:struct:rq_flags::pin_cookie	access:public
rq_flags::flags	sched/sched.h	/^	unsigned long flags;$/;"	kind:member	struct:rq_flags	access:public
rq_of	sched/sched.h	/^static inline struct rq *rq_of(struct cfs_rq *cfs_rq)$/;"	kind:function	signature:(struct cfs_rq *cfs_rq)
rq_offline	sched/sched.h	/^	void (*rq_offline)(struct rq *rq);$/;"	kind:member	struct:sched_class	access:public
rq_online	sched/sched.h	/^	void (*rq_online)(struct rq *rq);$/;"	kind:member	struct:sched_class	access:public
rq_pin_lock	sched/sched.h	/^static inline void rq_pin_lock(struct rq *rq, struct rq_flags *rf)$/;"	kind:function	signature:(struct rq *rq, struct rq_flags *rf)
rq_repin_lock	sched/sched.h	/^static inline void rq_repin_lock(struct rq *rq, struct rq_flags *rf)$/;"	kind:function	signature:(struct rq *rq, struct rq_flags *rf)
rq_sched_info	sched/sched.h	/^	struct sched_info	rq_sched_info;$/;"	kind:member	struct:rq	typeref:struct:rq::sched_info	access:public
rq_sched_info_arrive	sched/stats.h	/^rq_sched_info_arrive(struct rq *rq, unsigned long long delta)$/;"	kind:function	signature:(struct rq *rq, unsigned long long delta)
rq_sched_info_arrive	sched/stats.h	/^static inline void rq_sched_info_arrive  (struct rq *rq, unsigned long long delta) { }$/;"	kind:function	signature:(struct rq *rq, unsigned long long delta)
rq_sched_info_depart	sched/stats.h	/^rq_sched_info_depart(struct rq *rq, unsigned long long delta)$/;"	kind:function	signature:(struct rq *rq, unsigned long long delta)
rq_sched_info_depart	sched/stats.h	/^static inline void rq_sched_info_depart  (struct rq *rq, unsigned long long delta) { }$/;"	kind:function	signature:(struct rq *rq, unsigned long long delta)
rq_sched_info_dequeued	sched/stats.h	/^rq_sched_info_dequeued(struct rq *rq, unsigned long long delta)$/;"	kind:function	signature:(struct rq *rq, unsigned long long delta)
rq_sched_info_dequeued	sched/stats.h	/^static inline void rq_sched_info_dequeued(struct rq *rq, unsigned long long delta) { }$/;"	kind:function	signature:(struct rq *rq, unsigned long long delta)
rq_unpin_lock	sched/sched.h	/^static inline void rq_unpin_lock(struct rq *rq, struct rq_flags *rf)$/;"	kind:function	signature:(struct rq *rq, struct rq_flags *rf)
rr_nr_running	sched/sched.h	/^	unsigned int		rr_nr_running;$/;"	kind:member	struct:rt_rq	access:public
rshift	trace/trace_probe.h	/^			unsigned char rshift;$/;"	kind:member	struct:fetch_insn::__anon15::__anon17	access:public
rt	sched/sched.h	/^	struct rt_rq		rt;$/;"	kind:member	struct:rq	typeref:struct:rq::rt_rq	access:public
rt_bandwidth	sched/sched.h	/^	struct rt_bandwidth	rt_bandwidth;$/;"	kind:member	struct:task_group	typeref:struct:task_group::rt_bandwidth	access:public
rt_bandwidth	sched/sched.h	/^struct rt_bandwidth {$/;"	kind:struct
rt_bandwidth::rt_period	sched/sched.h	/^	ktime_t			rt_period;$/;"	kind:member	struct:rt_bandwidth	access:public
rt_bandwidth::rt_period_active	sched/sched.h	/^	unsigned int		rt_period_active;$/;"	kind:member	struct:rt_bandwidth	access:public
rt_bandwidth::rt_period_timer	sched/sched.h	/^	struct hrtimer		rt_period_timer;$/;"	kind:member	struct:rt_bandwidth	typeref:struct:rt_bandwidth::hrtimer	access:public
rt_bandwidth::rt_runtime	sched/sched.h	/^	u64			rt_runtime;$/;"	kind:member	struct:rt_bandwidth	access:public
rt_bandwidth::rt_runtime_lock	sched/sched.h	/^	raw_spinlock_t		rt_runtime_lock;$/;"	kind:member	struct:rt_bandwidth	access:public
rt_bandwidth_enabled	sched/sched.h	/^static inline int rt_bandwidth_enabled(void)$/;"	kind:function	signature:(void)
rt_mutex_cleanup_proxy_lock	locking/rtmutex_common.h	/^extern bool rt_mutex_cleanup_proxy_lock(struct rt_mutex *lock,$/;"	kind:prototype	signature:(struct rt_mutex *lock, struct rt_mutex_waiter *waiter)
rt_mutex_deadlock_check	locking/rtmutex.h	14;"	kind:macro
rt_mutex_futex_trylock	locking/rtmutex_common.h	/^extern int rt_mutex_futex_trylock(struct rt_mutex *l);$/;"	kind:prototype	signature:(struct rt_mutex *l)
rt_mutex_futex_unlock	locking/rtmutex_common.h	/^extern void rt_mutex_futex_unlock(struct rt_mutex *lock);$/;"	kind:prototype	signature:(struct rt_mutex *lock)
rt_mutex_has_waiters	locking/rtmutex_common.h	/^static inline int rt_mutex_has_waiters(struct rt_mutex *lock)$/;"	kind:function	signature:(struct rt_mutex *lock)
rt_mutex_init_proxy_locked	locking/rtmutex_common.h	/^extern void rt_mutex_init_proxy_locked(struct rt_mutex *lock,$/;"	kind:prototype	signature:(struct rt_mutex *lock, struct task_struct *proxy_owner)
rt_mutex_init_waiter	locking/rtmutex_common.h	/^extern void rt_mutex_init_waiter(struct rt_mutex_waiter *waiter);$/;"	kind:prototype	signature:(struct rt_mutex_waiter *waiter)
rt_mutex_next_owner	locking/rtmutex_common.h	/^extern struct task_struct *rt_mutex_next_owner(struct rt_mutex *lock);$/;"	kind:prototype	signature:(struct rt_mutex *lock)
rt_mutex_owner	locking/rtmutex_common.h	/^static inline struct task_struct *rt_mutex_owner(struct rt_mutex *lock)$/;"	kind:function	signature:(struct rt_mutex *lock)
rt_mutex_postunlock	locking/rtmutex_common.h	/^extern void rt_mutex_postunlock(struct wake_q_head *wake_q);$/;"	kind:prototype	signature:(struct wake_q_head *wake_q)
rt_mutex_print_deadlock	locking/rtmutex-debug.h	/^static inline void rt_mutex_print_deadlock(struct rt_mutex_waiter *w)$/;"	kind:function	signature:(struct rt_mutex_waiter *w)
rt_mutex_print_deadlock	locking/rtmutex.h	/^static inline void rt_mutex_print_deadlock(struct rt_mutex_waiter *w)$/;"	kind:function	signature:(struct rt_mutex_waiter *w)
rt_mutex_proxy_unlock	locking/rtmutex_common.h	/^extern void rt_mutex_proxy_unlock(struct rt_mutex *lock,$/;"	kind:prototype	signature:(struct rt_mutex *lock, struct task_struct *proxy_owner)
rt_mutex_start_proxy_lock	locking/rtmutex_common.h	/^extern int rt_mutex_start_proxy_lock(struct rt_mutex *lock,$/;"	kind:prototype	signature:(struct rt_mutex *lock, struct rt_mutex_waiter *waiter, struct task_struct *task)
rt_mutex_top_waiter	locking/rtmutex_common.h	/^rt_mutex_top_waiter(struct rt_mutex *lock)$/;"	kind:function	signature:(struct rt_mutex *lock)
rt_mutex_wait_proxy_lock	locking/rtmutex_common.h	/^extern int rt_mutex_wait_proxy_lock(struct rt_mutex *lock,$/;"	kind:prototype	signature:(struct rt_mutex *lock, struct hrtimer_sleeper *to, struct rt_mutex_waiter *waiter)
rt_mutex_waiter	locking/rtmutex_common.h	/^struct rt_mutex_waiter {$/;"	kind:struct
rt_mutex_waiter::deadline	locking/rtmutex_common.h	/^	u64 deadline;$/;"	kind:member	struct:rt_mutex_waiter	access:public
rt_mutex_waiter::deadlock_lock	locking/rtmutex_common.h	/^	struct rt_mutex		*deadlock_lock;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rt_mutex	access:public
rt_mutex_waiter::deadlock_task_pid	locking/rtmutex_common.h	/^	struct pid		*deadlock_task_pid;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::pid	access:public
rt_mutex_waiter::ip	locking/rtmutex_common.h	/^	unsigned long		ip;$/;"	kind:member	struct:rt_mutex_waiter	access:public
rt_mutex_waiter::lock	locking/rtmutex_common.h	/^	struct rt_mutex		*lock;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rt_mutex	access:public
rt_mutex_waiter::pi_tree_entry	locking/rtmutex_common.h	/^	struct rb_node          pi_tree_entry;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rb_node	access:public
rt_mutex_waiter::prio	locking/rtmutex_common.h	/^	int prio;$/;"	kind:member	struct:rt_mutex_waiter	access:public
rt_mutex_waiter::task	locking/rtmutex_common.h	/^	struct task_struct	*task;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::task_struct	access:public
rt_mutex_waiter::tree_entry	locking/rtmutex_common.h	/^	struct rb_node          tree_entry;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rb_node	access:public
rt_nr_boosted	sched/sched.h	/^	unsigned long		rt_nr_boosted;$/;"	kind:member	struct:rt_rq	access:public
rt_nr_migratory	sched/sched.h	/^	unsigned long		rt_nr_migratory;$/;"	kind:member	struct:rt_rq	access:public
rt_nr_running	sched/sched.h	/^	unsigned int		rt_nr_running;$/;"	kind:member	struct:rt_rq	access:public
rt_nr_total	sched/sched.h	/^	unsigned long		rt_nr_total;$/;"	kind:member	struct:rt_rq	access:public
rt_period	sched/sched.h	/^	ktime_t			rt_period;$/;"	kind:member	struct:rt_bandwidth	access:public
rt_period_active	sched/sched.h	/^	unsigned int		rt_period_active;$/;"	kind:member	struct:rt_bandwidth	access:public
rt_period_timer	sched/sched.h	/^	struct hrtimer		rt_period_timer;$/;"	kind:member	struct:rt_bandwidth	typeref:struct:rt_bandwidth::hrtimer	access:public
rt_policy	sched/sched.h	/^static inline int rt_policy(int policy)$/;"	kind:function	signature:(int policy)
rt_prio_array	sched/sched.h	/^struct rt_prio_array {$/;"	kind:struct
rt_prio_array::DECLARE_BITMAP	sched/sched.h	/^	DECLARE_BITMAP(bitmap, MAX_RT_PRIO+1); \/* include 1 bit for delimiter *\/$/;"	kind:prototype	struct:rt_prio_array	access:public	signature:(bitmap, MAX_RT_PRIO+1)
rt_prio_array::queue	sched/sched.h	/^	struct list_head queue[MAX_RT_PRIO];$/;"	kind:member	struct:rt_prio_array	typeref:struct:rt_prio_array::list_head	access:public
rt_priority	trace/trace.h	/^	unsigned long		rt_priority;$/;"	kind:member	struct:trace_array_cpu	access:public
rt_queued	sched/sched.h	/^	int			rt_queued;$/;"	kind:member	struct:rt_rq	access:public
rt_rq	sched/sched.h	/^	struct rt_rq		**rt_rq;$/;"	kind:member	struct:task_group	typeref:struct:task_group::rt_rq	access:public
rt_rq	sched/sched.h	/^struct rt_rq {$/;"	kind:struct
rt_rq	sched/sched.h	/^struct rt_rq;$/;"	kind:externvar
rt_rq::__anon29::curr	sched/sched.h	/^		int		curr; \/* highest queued rt task prio *\/$/;"	kind:member	struct:rt_rq::__anon29	access:public
rt_rq::__anon29::next	sched/sched.h	/^		int		next; \/* next highest *\/$/;"	kind:member	struct:rt_rq::__anon29	access:public
rt_rq::active	sched/sched.h	/^	struct rt_prio_array	active;$/;"	kind:member	struct:rt_rq	typeref:struct:rt_rq::rt_prio_array	access:public
rt_rq::highest_prio	sched/sched.h	/^	} highest_prio;$/;"	kind:member	struct:rt_rq	typeref:struct:rt_rq::__anon29	access:public
rt_rq::overloaded	sched/sched.h	/^	int			overloaded;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::pushable_tasks	sched/sched.h	/^	struct plist_head	pushable_tasks;$/;"	kind:member	struct:rt_rq	typeref:struct:rt_rq::plist_head	access:public
rt_rq::rq	sched/sched.h	/^	struct rq		*rq;$/;"	kind:member	struct:rt_rq	typeref:struct:rt_rq::rq	access:public
rt_rq::rr_nr_running	sched/sched.h	/^	unsigned int		rr_nr_running;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::rt_nr_boosted	sched/sched.h	/^	unsigned long		rt_nr_boosted;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::rt_nr_migratory	sched/sched.h	/^	unsigned long		rt_nr_migratory;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::rt_nr_running	sched/sched.h	/^	unsigned int		rt_nr_running;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::rt_nr_total	sched/sched.h	/^	unsigned long		rt_nr_total;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::rt_queued	sched/sched.h	/^	int			rt_queued;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::rt_runtime	sched/sched.h	/^	u64			rt_runtime;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::rt_runtime_lock	sched/sched.h	/^	raw_spinlock_t		rt_runtime_lock;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::rt_throttled	sched/sched.h	/^	int			rt_throttled;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::rt_time	sched/sched.h	/^	u64			rt_time;$/;"	kind:member	struct:rt_rq	access:public
rt_rq::tg	sched/sched.h	/^	struct task_group	*tg;$/;"	kind:member	struct:rt_rq	typeref:struct:rt_rq::task_group	access:public
rt_rq_is_runnable	sched/sched.h	/^static inline bool rt_rq_is_runnable(struct rt_rq *rt_rq)$/;"	kind:function	signature:(struct rt_rq *rt_rq)
rt_runtime	sched/sched.h	/^	u64			rt_runtime;$/;"	kind:member	struct:rt_bandwidth	access:public
rt_runtime	sched/sched.h	/^	u64			rt_runtime;$/;"	kind:member	struct:rt_rq	access:public
rt_runtime_lock	sched/sched.h	/^	raw_spinlock_t		rt_runtime_lock;$/;"	kind:member	struct:rt_bandwidth	access:public
rt_runtime_lock	sched/sched.h	/^	raw_spinlock_t		rt_runtime_lock;$/;"	kind:member	struct:rt_rq	access:public
rt_sched_class	sched/sched.h	/^extern const struct sched_class rt_sched_class;$/;"	kind:externvar
rt_se	sched/sched.h	/^	struct sched_rt_entity	**rt_se;$/;"	kind:member	struct:task_group	typeref:struct:task_group::sched_rt_entity	access:public
rt_throttled	sched/sched.h	/^	int			rt_throttled;$/;"	kind:member	struct:rt_rq	access:public
rt_time	sched/sched.h	/^	u64			rt_time;$/;"	kind:member	struct:rt_rq	access:public
rtmutex_chainwalk	locking/rtmutex_common.h	/^enum rtmutex_chainwalk {$/;"	kind:enum
rto_count	sched/sched.h	/^	atomic_t		rto_count;$/;"	kind:member	struct:root_domain	access:public
rto_cpu	sched/sched.h	/^	int			rto_cpu;$/;"	kind:member	struct:root_domain	access:public
rto_lock	sched/sched.h	/^	raw_spinlock_t		rto_lock;$/;"	kind:member	struct:root_domain	access:public
rto_loop	sched/sched.h	/^	int			rto_loop;$/;"	kind:member	struct:root_domain	access:public
rto_loop_next	sched/sched.h	/^	atomic_t		rto_loop_next;$/;"	kind:member	struct:root_domain	access:public
rto_loop_start	sched/sched.h	/^	atomic_t		rto_loop_start;$/;"	kind:member	struct:root_domain	access:public
rto_mask	sched/sched.h	/^	cpumask_var_t		rto_mask;$/;"	kind:member	struct:root_domain	access:public
rto_push_irq_work_func	sched/sched.h	/^extern void rto_push_irq_work_func(struct irq_work *work);$/;"	kind:prototype	signature:(struct irq_work *work)
rto_push_work	sched/sched.h	/^	struct irq_work		rto_push_work;$/;"	kind:member	struct:root_domain	typeref:struct:root_domain::irq_work	access:public
rule	audit.h	/^	struct audit_krule	rule;$/;"	kind:member	struct:audit_entry	typeref:struct:audit_entry::audit_krule	access:public
runnable_sum	sched/sched.h	/^		unsigned long	runnable_sum;$/;"	kind:member	struct:cfs_rq::__anon28	access:public
runnable_weight	sched/sched.h	/^	unsigned long		runnable_weight;$/;"	kind:member	struct:cfs_rq	access:public
running_bw	sched/sched.h	/^	u64			running_bw;$/;"	kind:member	struct:dl_rq	access:public
runtime	sched/sched.h	/^	u64			runtime;$/;"	kind:member	struct:cfs_bandwidth	access:public
runtime_enabled	sched/sched.h	/^	int			runtime_enabled;$/;"	kind:member	struct:cfs_rq	access:public
runtime_remaining	sched/sched.h	/^	s64			runtime_remaining;$/;"	kind:member	struct:cfs_rq	access:public
s	rcu/tree.h	/^	u16 s; \/* Set of bits, aggregate OR here. *\/$/;"	kind:member	union:rcu_noqs	access:public
s16	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(s16);$/;"	kind:variable
s32	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(s32);$/;"	kind:variable
s64	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(s64);$/;"	kind:variable
s8	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(s8);$/;"	kind:variable
sanity_check_segment_list	kexec_internal.h	/^int sanity_check_segment_list(struct kimage *image);$/;"	kind:prototype	signature:(struct kimage *image)
save_named_trigger	trace/trace.h	/^extern int save_named_trigger(const char *name,$/;"	kind:prototype	signature:(const char *name, struct event_trigger_data *data)
saved_latency	trace/trace.h	/^	unsigned long		saved_latency;$/;"	kind:member	struct:trace_array_cpu	access:public
scale_irq_capacity	sched/sched.h	/^unsigned long scale_irq_capacity(unsigned long util, unsigned long irq, unsigned long max)$/;"	kind:function	signature:(unsigned long util, unsigned long irq, unsigned long max)
scale_load	sched/sched.h	120;"	kind:macro
scale_load	sched/sched.h	124;"	kind:macro
scale_load_down	sched/sched.h	121;"	kind:macro
scale_load_down	sched/sched.h	125;"	kind:macro
sched_asym_cpucapacity	sched/sched.h	/^extern struct static_key_false sched_asym_cpucapacity;$/;"	kind:externvar
sched_asym_prefer	sched/sched.h	/^static inline bool sched_asym_prefer(int a, int b)$/;"	kind:function	signature:(int a, int b)
sched_can_stop_tick	sched/sched.h	/^extern bool sched_can_stop_tick(struct rq *rq);$/;"	kind:prototype	signature:(struct rq *rq)
sched_class	sched/sched.h	/^struct sched_class {$/;"	kind:struct
sched_class::balance	sched/sched.h	/^	int (*balance)(struct rq *rq, struct task_struct *prev, struct rq_flags *rf);$/;"	kind:member	struct:sched_class	access:public
sched_class::check_preempt_curr	sched/sched.h	/^	void (*check_preempt_curr)(struct rq *rq, struct task_struct *p, int flags);$/;"	kind:member	struct:sched_class	access:public
sched_class::dequeue_task	sched/sched.h	/^	void (*dequeue_task) (struct rq *rq, struct task_struct *p, int flags);$/;"	kind:member	struct:sched_class	access:public
sched_class::enqueue_task	sched/sched.h	/^	void (*enqueue_task) (struct rq *rq, struct task_struct *p, int flags);$/;"	kind:member	struct:sched_class	access:public
sched_class::get_rr_interval	sched/sched.h	/^	unsigned int (*get_rr_interval)(struct rq *rq,$/;"	kind:member	struct:sched_class	access:public
sched_class::migrate_task_rq	sched/sched.h	/^	void (*migrate_task_rq)(struct task_struct *p, int new_cpu);$/;"	kind:member	struct:sched_class	access:public
sched_class::next	sched/sched.h	/^	const struct sched_class *next;$/;"	kind:member	struct:sched_class	typeref:struct:sched_class::sched_class	access:public
sched_class::pick_next_task	sched/sched.h	/^	struct task_struct * (*pick_next_task)(struct rq *rq,$/;"	kind:member	struct:sched_class	typeref:struct:sched_class::pick_next_task	access:public
sched_class::prio_changed	sched/sched.h	/^	void (*prio_changed) (struct rq *this_rq, struct task_struct *task,$/;"	kind:member	struct:sched_class	access:public
sched_class::put_prev_task	sched/sched.h	/^	void (*put_prev_task)(struct rq *rq, struct task_struct *p);$/;"	kind:member	struct:sched_class	access:public
sched_class::rq_offline	sched/sched.h	/^	void (*rq_offline)(struct rq *rq);$/;"	kind:member	struct:sched_class	access:public
sched_class::rq_online	sched/sched.h	/^	void (*rq_online)(struct rq *rq);$/;"	kind:member	struct:sched_class	access:public
sched_class::select_task_rq	sched/sched.h	/^	int  (*select_task_rq)(struct task_struct *p, int task_cpu, int sd_flag, int flags);$/;"	kind:member	struct:sched_class	access:public
sched_class::set_cpus_allowed	sched/sched.h	/^	void (*set_cpus_allowed)(struct task_struct *p,$/;"	kind:member	struct:sched_class	access:public
sched_class::set_next_task	sched/sched.h	/^	void (*set_next_task)(struct rq *rq, struct task_struct *p);$/;"	kind:member	struct:sched_class	access:public
sched_class::switched_from	sched/sched.h	/^	void (*switched_from)(struct rq *this_rq, struct task_struct *task);$/;"	kind:member	struct:sched_class	access:public
sched_class::switched_to	sched/sched.h	/^	void (*switched_to)  (struct rq *this_rq, struct task_struct *task);$/;"	kind:member	struct:sched_class	access:public
sched_class::task_change_group	sched/sched.h	/^	void (*task_change_group)(struct task_struct *p, int type);$/;"	kind:member	struct:sched_class	access:public
sched_class::task_dead	sched/sched.h	/^	void (*task_dead)(struct task_struct *p);$/;"	kind:member	struct:sched_class	access:public
sched_class::task_fork	sched/sched.h	/^	void (*task_fork)(struct task_struct *p);$/;"	kind:member	struct:sched_class	access:public
sched_class::task_tick	sched/sched.h	/^	void (*task_tick)(struct rq *rq, struct task_struct *p, int queued);$/;"	kind:member	struct:sched_class	access:public
sched_class::task_woken	sched/sched.h	/^	void (*task_woken)(struct rq *this_rq, struct task_struct *task);$/;"	kind:member	struct:sched_class	access:public
sched_class::uclamp_enabled	sched/sched.h	/^	int uclamp_enabled;$/;"	kind:member	struct:sched_class	access:public
sched_class::update_curr	sched/sched.h	/^	void (*update_curr)(struct rq *rq);$/;"	kind:member	struct:sched_class	access:public
sched_class::yield_task	sched/sched.h	/^	void (*yield_task)   (struct rq *rq);$/;"	kind:member	struct:sched_class	access:public
sched_class::yield_to_task	sched/sched.h	/^	bool (*yield_to_task)(struct rq *rq, struct task_struct *p, bool preempt);$/;"	kind:member	struct:sched_class	access:public
sched_class_highest	sched/sched.h	1787;"	kind:macro
sched_class_highest	sched/sched.h	1789;"	kind:macro
sched_clock_resume	time/timekeeping.h	/^extern void sched_clock_resume(void);$/;"	kind:prototype	signature:(void)
sched_clock_resume	time/timekeeping.h	/^static inline void sched_clock_resume(void) { }$/;"	kind:function	signature:(void)
sched_clock_suspend	time/timekeeping.h	/^extern int sched_clock_suspend(void);$/;"	kind:prototype	signature:(void)
sched_clock_suspend	time/timekeeping.h	/^static inline int sched_clock_suspend(void) { return 0; }$/;"	kind:function	signature:(void)
sched_count	sched/sched.h	/^	unsigned int		sched_count;$/;"	kind:member	struct:rq	access:public
sched_create_group	sched/sched.h	/^extern struct task_group *sched_create_group(struct task_group *parent);$/;"	kind:prototype	signature:(struct task_group *parent)
sched_debug_enabled	sched/sched.h	/^extern bool sched_debug_enabled;$/;"	kind:externvar
sched_destroy_group	sched/sched.h	/^extern void sched_destroy_group(struct task_group *tg);$/;"	kind:prototype	signature:(struct task_group *tg)
sched_dl_do_global	sched/sched.h	/^extern void sched_dl_do_global(void);$/;"	kind:prototype	signature:(void)
sched_dl_global_validate	sched/sched.h	/^extern int  sched_dl_global_validate(void);$/;"	kind:prototype	signature:(void)
sched_dl_overflow	sched/sched.h	/^extern int  sched_dl_overflow(struct task_struct *p, int policy, const struct sched_attr *attr);$/;"	kind:prototype	signature:(struct task_struct *p, int policy, const struct sched_attr *attr)
sched_dl_runnable	sched/sched.h	/^static inline bool sched_dl_runnable(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
sched_domains_numa_masks_clear	sched/sched.h	/^extern void sched_domains_numa_masks_clear(unsigned int cpu);$/;"	kind:prototype	signature:(unsigned int cpu)
sched_domains_numa_masks_clear	sched/sched.h	/^static inline void sched_domains_numa_masks_clear(unsigned int cpu) { }$/;"	kind:function	signature:(unsigned int cpu)
sched_domains_numa_masks_set	sched/sched.h	/^extern void sched_domains_numa_masks_set(unsigned int cpu);$/;"	kind:prototype	signature:(unsigned int cpu)
sched_domains_numa_masks_set	sched/sched.h	/^static inline void sched_domains_numa_masks_set(unsigned int cpu) { }$/;"	kind:function	signature:(unsigned int cpu)
sched_energy_enabled	sched/sched.h	/^static inline bool sched_energy_enabled(void) { return false; }$/;"	kind:function	signature:(void)
sched_energy_enabled	sched/sched.h	/^static inline bool sched_energy_enabled(void)$/;"	kind:function	signature:(void)
sched_energy_present	sched/sched.h	/^DECLARE_STATIC_KEY_FALSE(sched_energy_present);$/;"	kind:variable
sched_fair_runnable	sched/sched.h	/^static inline bool sched_fair_runnable(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
sched_feat	sched/sched.h	1581;"	kind:macro
sched_feat	sched/sched.h	1597;"	kind:macro
sched_feat_keys	sched/sched.h	/^extern struct static_key sched_feat_keys[__SCHED_FEAT_NR];$/;"	kind:externvar
sched_get_rd	sched/sched.h	/^extern void sched_get_rd(struct root_domain *rd);$/;"	kind:prototype	signature:(struct root_domain *rd)
sched_goidle	sched/sched.h	/^	unsigned int		sched_goidle;$/;"	kind:member	struct:rq	access:public
sched_group	sched/sched.h	/^struct sched_group {$/;"	kind:struct
sched_group::asym_prefer_cpu	sched/sched.h	/^	int			asym_prefer_cpu;	\/* CPU of highest priority in group *\/$/;"	kind:member	struct:sched_group	access:public
sched_group::cpumask	sched/sched.h	/^	unsigned long		cpumask[0];$/;"	kind:member	struct:sched_group	access:public
sched_group::group_weight	sched/sched.h	/^	unsigned int		group_weight;$/;"	kind:member	struct:sched_group	access:public
sched_group::next	sched/sched.h	/^	struct sched_group	*next;			\/* Must be a circular list *\/$/;"	kind:member	struct:sched_group	typeref:struct:sched_group::sched_group	access:public
sched_group::ref	sched/sched.h	/^	atomic_t		ref;$/;"	kind:member	struct:sched_group	access:public
sched_group::sgc	sched/sched.h	/^	struct sched_group_capacity *sgc;$/;"	kind:member	struct:sched_group	typeref:struct:sched_group::sched_group_capacity	access:public
sched_group_capacity	sched/sched.h	/^struct sched_group_capacity {$/;"	kind:struct
sched_group_capacity::capacity	sched/sched.h	/^	unsigned long		capacity;$/;"	kind:member	struct:sched_group_capacity	access:public
sched_group_capacity::cpumask	sched/sched.h	/^	unsigned long		cpumask[0];		\/* Balance mask *\/$/;"	kind:member	struct:sched_group_capacity	access:public
sched_group_capacity::id	sched/sched.h	/^	int			id;$/;"	kind:member	struct:sched_group_capacity	access:public
sched_group_capacity::imbalance	sched/sched.h	/^	int			imbalance;		\/* XXX unrelated to capacity but shared group state *\/$/;"	kind:member	struct:sched_group_capacity	access:public
sched_group_capacity::max_capacity	sched/sched.h	/^	unsigned long		max_capacity;		\/* Max per-CPU capacity in group *\/$/;"	kind:member	struct:sched_group_capacity	access:public
sched_group_capacity::min_capacity	sched/sched.h	/^	unsigned long		min_capacity;		\/* Min per-CPU capacity in group *\/$/;"	kind:member	struct:sched_group_capacity	access:public
sched_group_capacity::next_update	sched/sched.h	/^	unsigned long		next_update;$/;"	kind:member	struct:sched_group_capacity	access:public
sched_group_capacity::ref	sched/sched.h	/^	atomic_t		ref;$/;"	kind:member	struct:sched_group_capacity	access:public
sched_group_rt_period	sched/sched.h	/^extern long sched_group_rt_period(struct task_group *tg);$/;"	kind:prototype	signature:(struct task_group *tg)
sched_group_rt_runtime	sched/sched.h	/^extern long sched_group_rt_runtime(struct task_group *tg);$/;"	kind:prototype	signature:(struct task_group *tg)
sched_group_set_rt_period	sched/sched.h	/^extern int sched_group_set_rt_period(struct task_group *tg, u64 rt_period_us);$/;"	kind:prototype	signature:(struct task_group *tg, u64 rt_period_us)
sched_group_set_rt_runtime	sched/sched.h	/^extern int sched_group_set_rt_runtime(struct task_group *tg, long rt_runtime_us);$/;"	kind:prototype	signature:(struct task_group *tg, long rt_runtime_us)
sched_group_set_shares	sched/sched.h	/^extern int sched_group_set_shares(struct task_group *tg, unsigned long shares);$/;"	kind:prototype	signature:(struct task_group *tg, unsigned long shares)
sched_group_span	sched/sched.h	/^static inline struct cpumask *sched_group_span(struct sched_group *sg)$/;"	kind:function	signature:(struct sched_group *sg)
sched_info_arrive	sched/stats.h	/^static void sched_info_arrive(struct rq *rq, struct task_struct *t)$/;"	kind:function	signature:(struct rq *rq, struct task_struct *t)
sched_info_arrive	sched/stats.h	252;"	kind:macro
sched_info_depart	sched/stats.h	/^static inline void sched_info_depart(struct rq *rq, struct task_struct *t)$/;"	kind:function	signature:(struct rq *rq, struct task_struct *t)
sched_info_depart	sched/stats.h	251;"	kind:macro
sched_info_dequeued	sched/stats.h	/^static inline void sched_info_dequeued(struct rq *rq, struct task_struct *t)$/;"	kind:function	signature:(struct rq *rq, struct task_struct *t)
sched_info_dequeued	sched/stats.h	250;"	kind:macro
sched_info_queued	sched/stats.h	/^static inline void sched_info_queued(struct rq *rq, struct task_struct *t)$/;"	kind:function	signature:(struct rq *rq, struct task_struct *t)
sched_info_queued	sched/stats.h	248;"	kind:macro
sched_info_reset_dequeued	sched/stats.h	/^static inline void sched_info_reset_dequeued(struct task_struct *t)$/;"	kind:function	signature:(struct task_struct *t)
sched_info_reset_dequeued	sched/stats.h	249;"	kind:macro
sched_info_switch	sched/stats.h	/^sched_info_switch(struct rq *rq, struct task_struct *prev, struct task_struct *next)$/;"	kind:function	signature:(struct rq *rq, struct task_struct *prev, struct task_struct *next)
sched_info_switch	sched/stats.h	253;"	kind:macro
sched_init_domains	sched/sched.h	/^extern int sched_init_domains(const struct cpumask *cpu_map);$/;"	kind:prototype	signature:(const struct cpumask *cpu_map)
sched_init_granularity	sched/sched.h	/^extern void sched_init_granularity(void);$/;"	kind:prototype	signature:(void)
sched_init_numa	sched/sched.h	/^extern void sched_init_numa(void);$/;"	kind:prototype	signature:(void)
sched_init_numa	sched/sched.h	/^static inline void sched_init_numa(void) { }$/;"	kind:function	signature:(void)
sched_max_numa_distance	sched/sched.h	/^extern int sched_max_numa_distance;$/;"	kind:externvar
sched_move_task	sched/sched.h	/^extern void sched_move_task(struct task_struct *tsk);$/;"	kind:prototype	signature:(struct task_struct *tsk)
sched_numa_balancing	sched/sched.h	/^extern struct static_key_false sched_numa_balancing;$/;"	kind:externvar
sched_numa_find_closest	sched/sched.h	/^extern int sched_numa_find_closest(const struct cpumask *cpus, int cpu);$/;"	kind:prototype	signature:(const struct cpumask *cpus, int cpu)
sched_numa_find_closest	sched/sched.h	/^static inline int sched_numa_find_closest(const struct cpumask *cpus, int cpu)$/;"	kind:function	signature:(const struct cpumask *cpus, int cpu)
sched_numa_topology_type	sched/sched.h	/^extern enum numa_topology_type sched_numa_topology_type;$/;"	kind:externvar
sched_offline_group	sched/sched.h	/^extern void sched_offline_group(struct task_group *tg);$/;"	kind:prototype	signature:(struct task_group *tg)
sched_online_group	sched/sched.h	/^extern void sched_online_group(struct task_group *tg,$/;"	kind:prototype	signature:(struct task_group *tg, struct task_group *parent)
sched_prio_to_weight	sched/sched.h	/^extern const int		sched_prio_to_weight[40];$/;"	kind:externvar
sched_prio_to_wmult	sched/sched.h	/^extern const u32		sched_prio_to_wmult[40];$/;"	kind:externvar
sched_put_rd	sched/sched.h	/^extern void sched_put_rd(struct root_domain *rd);$/;"	kind:prototype	signature:(struct root_domain *rd)
sched_rt_can_attach	sched/sched.h	/^extern int sched_rt_can_attach(struct task_group *tg, struct task_struct *tsk);$/;"	kind:prototype	signature:(struct task_group *tg, struct task_struct *tsk)
sched_rt_runnable	sched/sched.h	/^static inline bool sched_rt_runnable(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
sched_schedstats	sched/sched.h	/^extern struct static_key_false sched_schedstats;$/;"	kind:externvar
sched_setnuma	sched/sched.h	/^extern void sched_setnuma(struct task_struct *p, int node);$/;"	kind:prototype	signature:(struct task_struct *p, int node)
sched_smp_initialized	sched/sched.h	/^extern bool sched_smp_initialized;$/;"	kind:externvar
sched_stop_runnable	sched/sched.h	/^static inline bool sched_stop_runnable(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
sched_tick_offload_init	sched/sched.h	/^extern int __init sched_tick_offload_init(void);$/;"	kind:prototype	signature:(void)
sched_tick_offload_init	sched/sched.h	/^static inline int sched_tick_offload_init(void) { return 0; }$/;"	kind:function	signature:(void)
sched_timer	time/tick-sched.h	/^	struct hrtimer			sched_timer;$/;"	kind:member	struct:tick_sched	typeref:struct:tick_sched::hrtimer	access:public
sched_ttwu_pending	sched/sched.h	/^extern void sched_ttwu_pending(void);$/;"	kind:prototype	signature:(void)
sched_ttwu_pending	sched/sched.h	/^static inline void sched_ttwu_pending(void) { }$/;"	kind:function	signature:(void)
sched_update_tick_dependency	sched/sched.h	/^static inline void sched_update_tick_dependency(struct rq *rq) { }$/;"	kind:function	signature:(struct rq *rq)
sched_update_tick_dependency	sched/sched.h	/^static inline void sched_update_tick_dependency(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
schedstat_add	sched/stats.h	37;"	kind:macro
schedstat_add	sched/stats.h	51;"	kind:macro
schedstat_enabled	sched/stats.h	33;"	kind:macro
schedstat_enabled	sched/stats.h	47;"	kind:macro
schedstat_inc	sched/stats.h	35;"	kind:macro
schedstat_inc	sched/stats.h	49;"	kind:macro
schedstat_set	sched/stats.h	39;"	kind:macro
schedstat_set	sched/stats.h	53;"	kind:macro
schedstat_val	sched/stats.h	40;"	kind:macro
schedstat_val	sched/stats.h	54;"	kind:macro
schedstat_val_or_zero	sched/stats.h	41;"	kind:macro
schedstat_val_or_zero	sched/stats.h	55;"	kind:macro
schedule_idle	sched/sched.h	/^extern void schedule_idle(void);$/;"	kind:prototype	signature:(void)
scheduled	workqueue_internal.h	/^	struct list_head	scheduled;	\/* L: scheduled works *\/$/;"	kind:member	struct:worker	typeref:struct:worker::list_head	access:public
scheduler_running	sched/sched.h	/^extern __read_mostly int scheduler_running;$/;"	kind:externvar
schedutil_cpu_util	sched/sched.h	/^static inline unsigned long schedutil_cpu_util(int cpu, unsigned long util_cfs,$/;"	kind:function	signature:(int cpu, unsigned long util_cfs, unsigned long max, enum schedutil_type type, struct task_struct *p)
schedutil_cpu_util	sched/sched.h	/^unsigned long schedutil_cpu_util(int cpu, unsigned long util_cfs,$/;"	kind:prototype	signature:(int cpu, unsigned long util_cfs, unsigned long max, enum schedutil_type type, struct task_struct *p)
schedutil_type	sched/sched.h	/^enum schedutil_type {$/;"	kind:enum
sd	sched/sched.h	/^	struct sched_domain __rcu	*sd;$/;"	kind:member	struct:rq	typeref:struct:rq::__rcu	access:public
se	sched/sched.h	/^	struct sched_entity	**se;$/;"	kind:member	struct:task_group	typeref:struct:task_group::sched_entity	access:public
se_runnable	sched/sched.h	/^static inline long se_runnable(struct sched_entity *se)$/;"	kind:function	signature:(struct sched_entity *se)
se_weight	sched/sched.h	/^static inline long se_weight(struct sched_entity *se)$/;"	kind:function	signature:(struct sched_entity *se)
sec_end	debug/kdb/kdb_private.h	/^		unsigned long sec_end;$/;"	kind:member	struct:__ksymtab	access:public
sec_name	debug/kdb/kdb_private.h	/^		const char *sec_name;	\/* Section containing symbol *\/$/;"	kind:member	struct:__ksymtab	access:public
sec_start	debug/kdb/kdb_private.h	/^		unsigned long sec_start;$/;"	kind:member	struct:__ksymtab	access:public
sechdrs	module-internal.h	/^	Elf_Shdr *sechdrs;$/;"	kind:member	struct:load_info	access:public
second_overflow	time/ntp_internal.h	/^extern int second_overflow(time64_t secs);$/;"	kind:prototype	signature:(time64_t secs)
secstrings	module-internal.h	/^	char *secstrings, *strtab;$/;"	kind:member	struct:load_info	access:public
select_task_rq	sched/sched.h	/^	int  (*select_task_rq)(struct task_struct *p, int task_cpu, int sd_flag, int flags);$/;"	kind:member	struct:sched_class	access:public
selftest	trace/trace.h	/^	int			(*selftest)(struct tracer *trace,$/;"	kind:member	struct:tracer	access:public
selinux_audit_rule_update	audit.h	/^extern int selinux_audit_rule_update(void);$/;"	kind:prototype	signature:(void)
send_ready	debug/debug_core.h	/^	atomic_t		*send_ready;$/;"	kind:member	struct:kgdb_state	access:public
seq_file	gcov/gcov.h	/^struct seq_file;$/;"	kind:externvar
seq_print_ip_sym	trace/trace_output.h	/^seq_print_ip_sym(struct trace_seq *s, unsigned long ip,$/;"	kind:prototype	signature:(struct trace_seq *s, unsigned long ip, unsigned long sym_flags)
serial	audit.h	/^	unsigned int	    serial;     \/* serial number for record *\/$/;"	kind:member	struct:audit_context	access:public
set_cpus_allowed	sched/sched.h	/^	void (*set_cpus_allowed)(struct task_struct *p,$/;"	kind:member	struct:sched_class	access:public
set_cpus_allowed_common	sched/sched.h	/^extern void set_cpus_allowed_common(struct task_struct *p, const struct cpumask *new_mask);$/;"	kind:prototype	signature:(struct task_struct *p, const struct cpumask *new_mask)
set_filter	trace/trace.h	/^	int			(*set_filter)(char *filter_str,$/;"	kind:member	struct:event_command	access:public
set_flag	trace/trace.h	/^	int			(*set_flag)(struct trace_array *tr,$/;"	kind:member	struct:tracer	access:public
set_graph_array	trace/trace.h	/^void set_graph_array(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
set_named_trigger_data	trace/trace.h	/^extern void set_named_trigger_data(struct event_trigger_data *data,$/;"	kind:prototype	signature:(struct event_trigger_data *data, struct event_trigger_data *named_data)
set_next_task	sched/sched.h	/^	void (*set_next_task)(struct rq *rq, struct task_struct *p);$/;"	kind:member	struct:sched_class	access:public
set_next_task	sched/sched.h	/^static inline void set_next_task(struct rq *rq, struct task_struct *next)$/;"	kind:function	signature:(struct rq *rq, struct task_struct *next)
set_pending	locking/qspinlock_paravirt.h	/^static __always_inline void set_pending(struct qspinlock *lock)$/;"	kind:function	signature:(struct qspinlock *lock)
set_rq_offline	sched/sched.h	/^extern void set_rq_offline(struct rq *rq);$/;"	kind:prototype	signature:(struct rq *rq)
set_rq_online	sched/sched.h	/^extern void set_rq_online (struct rq *rq);$/;"	kind:prototype	signature:(struct rq *rq)
set_task_rq	sched/sched.h	/^static inline void set_task_rq(struct task_struct *p, unsigned int cpu) { }$/;"	kind:function	signature:(struct task_struct *p, unsigned int cpu)
set_task_rq	sched/sched.h	/^static inline void set_task_rq(struct task_struct *p, unsigned int cpu)$/;"	kind:function	signature:(struct task_struct *p, unsigned int cpu)
set_task_rq_fair	sched/sched.h	/^extern void set_task_rq_fair(struct sched_entity *se,$/;"	kind:prototype	signature:(struct sched_entity *se, struct cfs_rq *prev, struct cfs_rq *next)
set_task_rq_fair	sched/sched.h	/^static inline void set_task_rq_fair(struct sched_entity *se,$/;"	kind:function	signature:(struct sched_entity *se, struct cfs_rq *prev, struct cfs_rq *next)
set_tracer_flag	trace/trace.h	/^int set_tracer_flag(struct trace_array *tr, unsigned int mask, int enabled);$/;"	kind:prototype	signature:(struct trace_array *tr, unsigned int mask, int enabled)
set_trigger_filter	trace/trace.h	/^extern int set_trigger_filter(char *filter_str,$/;"	kind:prototype	signature:(char *filter_str, struct event_trigger_data *trigger_data, struct trace_event_file *file)
sgc	sched/sched.h	/^	struct sched_group_capacity *sgc;$/;"	kind:member	struct:sched_group	typeref:struct:sched_group::sched_group_capacity	access:public
sgid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	kind:member	struct:audit_context	access:public
shares	sched/sched.h	/^	unsigned long		shares;$/;"	kind:member	struct:task_group	access:public
should_free	audit.h	/^	bool			should_free;$/;"	kind:member	struct:audit_names	access:public
show	trace/trace_dynevent.h	/^	int (*show)(struct seq_file *m, struct dyn_event *ev);$/;"	kind:member	struct:dyn_event_operations	access:public
show_numa_stats	sched/sched.h	/^show_numa_stats(struct task_struct *p, struct seq_file *m);$/;"	kind:prototype	signature:(struct task_struct *p, struct seq_file *m)
show_rcu_gp_kthreads	rcu/rcu.h	/^static inline void show_rcu_gp_kthreads(void) { }$/;"	kind:function	signature:(void)
show_rcu_gp_kthreads	rcu/rcu.h	/^void show_rcu_gp_kthreads(void);$/;"	kind:prototype	signature:(void)
show_rcu_gp_kthreads	rcu/tree_stall.h	/^EXPORT_SYMBOL_GPL(show_rcu_gp_kthreads);$/;"	kind:variable
show_rcu_gp_kthreads	rcu/tree_stall.h	/^void show_rcu_gp_kthreads(void)$/;"	kind:function	signature:(void)
show_rcu_nocb_gp_state	rcu/tree_plugin.h	/^static void show_rcu_nocb_gp_state(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
show_rcu_nocb_state	rcu/tree.h	/^static void show_rcu_nocb_state(struct rcu_data *rdp);$/;"	kind:prototype	signature:(struct rcu_data *rdp)
show_rcu_nocb_state	rcu/tree_plugin.h	/^static void show_rcu_nocb_state(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
siblings	sched/sched.h	/^	struct list_head	siblings;$/;"	kind:member	struct:task_group	typeref:struct:task_group::list_head	access:public
sig_ok	module-internal.h	/^	bool sig_ok;$/;"	kind:member	struct:load_info	access:public
sigev_signo	audit.h	/^			int			sigev_signo;$/;"	kind:member	struct:audit_context::__anon4::__anon8	access:public
signo	debug/debug_core.h	/^	int			signo;$/;"	kind:member	struct:kgdb_state	access:public
size	power/power.h	/^	unsigned long		size;$/;"	kind:member	struct:swsusp_info	access:public
size	sched/cpudeadline.h	/^	int			size;$/;"	kind:member	struct:cpudl	access:public
size	trace/trace.h	/^	int			size;$/;"	kind:member	struct:ftrace_event_field	access:public
size	trace/trace.h	/^	unsigned	size;$/;"	kind:member	struct:trace_parser	access:public
size	trace/trace_probe.h	/^			unsigned int size;$/;"	kind:member	struct:fetch_insn::__anon15::__anon16	access:public
size	trace/trace_probe.h	/^	size_t			size;		\/* Byte size of type *\/$/;"	kind:member	struct:fetch_type	access:public
size	trace/trace_probe.h	/^	ssize_t				size;	\/* trace entry size *\/$/;"	kind:member	struct:trace_probe	access:public
size_bits	trace/trace.h	/^	unsigned long		size_bits;$/;"	kind:member	struct:ftrace_hash	access:public
skip	sched/sched.h	/^	struct sched_entity	*skip;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity	access:public
skipped_entries	trace/trace.h	/^	unsigned long		skipped_entries;$/;"	kind:member	struct:trace_array_cpu	access:public
slack_started	sched/sched.h	/^	u8			slack_started;$/;"	kind:member	struct:cfs_bandwidth	access:public
slack_timer	sched/sched.h	/^	struct hrtimer		slack_timer;$/;"	kind:member	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::hrtimer	access:public
sleeping	workqueue_internal.h	/^	int			sleeping;	\/* None *\/$/;"	kind:member	struct:worker	access:public
smpboot_create_threads	smpboot.h	/^int smpboot_create_threads(unsigned int cpu);$/;"	kind:prototype	signature:(unsigned int cpu)
smpboot_park_threads	smpboot.h	/^int smpboot_park_threads(unsigned int cpu);$/;"	kind:prototype	signature:(unsigned int cpu)
smpboot_unpark_threads	smpboot.h	/^int smpboot_unpark_threads(unsigned int cpu);$/;"	kind:prototype	signature:(unsigned int cpu)
snapshot_additional_pages	power/power.h	/^extern unsigned int snapshot_additional_pages(struct zone *zone);$/;"	kind:prototype	signature:(struct zone *zone)
snapshot_device_available	power/power.h	/^extern atomic_t snapshot_device_available;$/;"	kind:externvar
snapshot_get_image_size	power/power.h	/^extern unsigned long snapshot_get_image_size(void);$/;"	kind:prototype	signature:(void)
snapshot_handle	power/power.h	/^struct snapshot_handle {$/;"	kind:struct
snapshot_handle::buffer	power/power.h	/^	void		*buffer;	\/* address of the block to read from$/;"	kind:member	struct:snapshot_handle	access:public
snapshot_handle::cur	power/power.h	/^	unsigned int	cur;	\/* number of the block of PAGE_SIZE bytes the$/;"	kind:member	struct:snapshot_handle	access:public
snapshot_handle::sync_read	power/power.h	/^	int		sync_read;	\/* Set to one to notify the caller of$/;"	kind:member	struct:snapshot_handle	access:public
snapshot_image_loaded	power/power.h	/^extern int snapshot_image_loaded(struct snapshot_handle *handle);$/;"	kind:prototype	signature:(struct snapshot_handle *handle)
snapshot_read_next	power/power.h	/^extern int snapshot_read_next(struct snapshot_handle *handle);$/;"	kind:prototype	signature:(struct snapshot_handle *handle)
snapshot_write_finalize	power/power.h	/^extern void snapshot_write_finalize(struct snapshot_handle *handle);$/;"	kind:prototype	signature:(struct snapshot_handle *handle)
snapshot_write_next	power/power.h	/^extern int snapshot_write_next(struct snapshot_handle *handle);$/;"	kind:prototype	signature:(struct snapshot_handle *handle)
sockaddr	audit.h	/^	struct sockaddr_storage *sockaddr;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::sockaddr_storage	access:public
sockaddr_len	audit.h	/^	size_t sockaddr_len;$/;"	kind:member	struct:audit_context	access:public
socketcall	audit.h	/^		} socketcall;$/;"	kind:member	union:audit_context::__anon4	typeref:struct:audit_context::__anon4::__anon5	access:public
softirq_snap	rcu/tree.h	/^	unsigned int softirq_snap;	\/* Snapshot of softirq activity. *\/$/;"	kind:member	struct:rcu_data	access:public
softirqs_off_events	locking/lockdep_internals.h	/^	unsigned long  softirqs_off_events;$/;"	kind:member	struct:lockdep_stats	access:public
softirqs_on_events	locking/lockdep_internals.h	/^	unsigned long  softirqs_on_events;$/;"	kind:member	struct:lockdep_stats	access:public
sort_key	trace/tracing_map.h	/^	struct tracing_map_sort_key	sort_key;$/;"	kind:member	struct:tracing_map	typeref:struct:tracing_map::tracing_map_sort_key	access:public
span	sched/sched.h	/^	cpumask_var_t		span;$/;"	kind:member	struct:root_domain	access:public
splice_read	trace/trace.h	/^	ssize_t			(*splice_read)(struct trace_iterator *iter,$/;"	kind:member	struct:tracer	access:public
src_csets	cgroup/cgroup-internal.h	/^	struct list_head	src_csets;$/;"	kind:member	struct:cgroup_taskset	typeref:struct:cgroup_taskset::list_head	access:public
srcu_batches_completed	rcu/rcu.h	/^srcu_batches_completed(struct srcu_struct *sp) { return 0; }$/;"	kind:function	signature:(struct srcu_struct *sp)
srcu_batches_completed	rcu/rcu.h	/^unsigned long srcu_batches_completed(struct srcu_struct *sp);$/;"	kind:prototype	signature:(struct srcu_struct *sp)
srcu_for_each_node_breadth_first	rcu/rcu.h	333;"	kind:macro
srcu_init	rcu/rcu.h	/^static inline void srcu_init(void) { }$/;"	kind:function	signature:(void)
srcu_init	rcu/rcu.h	/^void srcu_init(void);$/;"	kind:prototype	signature:(void)
srcutorture_get_gp_data	rcu/rcu.h	/^static inline void srcutorture_get_gp_data(enum rcutorture_type test_type,$/;"	kind:function	signature:(enum rcutorture_type test_type, struct srcu_struct *sp, int *flags, unsigned long *gp_seq)
srcutorture_get_gp_data	rcu/rcu.h	/^void srcutorture_get_gp_data(enum rcutorture_type test_type,$/;"	kind:prototype	signature:(enum rcutorture_type test_type, struct srcu_struct *sp, int *flags, unsigned long *gp_seq)
ss_mask	cgroup/cgroup-internal.h	/^	u16			ss_mask;$/;"	kind:member	struct:cgroup_mgctx	access:public
ssid	cgroup/cgroup-internal.h	/^	int			ssid;$/;"	kind:member	struct:cgroup_taskset	access:public
start	trace/trace.h	/^	void			(*start)(struct trace_array *tr);$/;"	kind:member	struct:tracer	access:public
start_cfs_bandwidth	sched/sched.h	/^extern void start_cfs_bandwidth(struct cfs_bandwidth *cfs_b);$/;"	kind:prototype	signature:(struct cfs_bandwidth *cfs_b)
start_lock	trace/trace.h	/^	raw_spinlock_t		start_lock;$/;"	kind:member	struct:trace_array	access:public
stat_cmp	trace/trace_stat.h	/^	int			(*stat_cmp)(void *p1, void *p2);$/;"	kind:member	struct:tracer_stat	access:public
stat_headers	trace/trace_stat.h	/^	int			(*stat_headers)(struct seq_file *s);$/;"	kind:member	struct:tracer_stat	access:public
stat_next	trace/trace_stat.h	/^	void			*(*stat_next)(void *prev, int idx);$/;"	kind:member	struct:tracer_stat	access:public
stat_release	trace/trace_stat.h	/^	void			(*stat_release)(void *stat);$/;"	kind:member	struct:tracer_stat	access:public
stat_show	trace/trace_stat.h	/^	int			(*stat_show)(struct seq_file *s, void *p);$/;"	kind:member	struct:tracer_stat	access:public
stat_start	trace/trace_stat.h	/^	void			*(*stat_start)(struct tracer_stat *trace);$/;"	kind:member	struct:tracer_stat	access:public
state	audit.h	/^	enum audit_state    state, current_state;$/;"	kind:member	struct:audit_context	typeref:enum:audit_context::audit_state	access:public
state	locking/qspinlock_paravirt.h	/^	u8			state;$/;"	kind:member	struct:pv_node	access:public
stop	sched/sched.h	/^	struct task_struct	*stop;$/;"	kind:member	struct:rq	typeref:struct:rq::task_struct	access:public
stop	trace/trace.h	/^	void			(*stop)(struct trace_array *tr);$/;"	kind:member	struct:tracer	access:public
stop_count	trace/trace.h	/^	int			stop_count;$/;"	kind:member	struct:trace_array	access:public
stop_sched_class	sched/sched.h	/^extern const struct sched_class stop_sched_class;$/;"	kind:externvar
store_trace_args	trace/trace_probe_tmpl.h	/^store_trace_args(void *data, struct trace_probe *tp, struct pt_regs *regs,$/;"	kind:function	signature:(void *data, struct trace_probe *tp, struct pt_regs *regs, int header_size, int maxlen)
str	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
string	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(string);$/;"	kind:variable
string	trace/trace_probe.h	/^typedef u32 string;$/;"	kind:typedef
string_size	trace/trace_probe.h	/^typedef u32 string_size;$/;"	kind:typedef
stroffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	kind:member	struct:load_info	access:public
strtab	module-internal.h	/^	char *secstrings, *strtab;$/;"	kind:member	struct:load_info	access:public
sub_nr_running	sched/sched.h	/^static inline void sub_nr_running(struct rq *rq, unsigned count)$/;"	kind:function	signature:(struct rq *rq, unsigned count)
subsys_mask	cgroup/cgroup-internal.h	/^	u16		subsys_mask;		\/* Selected subsystems *\/$/;"	kind:member	struct:cgroup_fs_context	access:public
subsystem	trace/trace.h	/^	struct event_subsystem		*subsystem;$/;"	kind:member	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::event_subsystem	access:public
subsystem	trace/trace_probe.h	/^	const char	*subsystem;$/;"	kind:member	struct:trace_probe_log	access:public
suid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	kind:member	struct:audit_context	access:public
sum	trace/tracing_map.h	/^		atomic64_t			sum;$/;"	kind:member	union:tracing_map_field::__anon22	access:public
suspend_devices_and_enter	power/power.h	/^extern int suspend_devices_and_enter(suspend_state_t state);$/;"	kind:prototype	signature:(suspend_state_t state)
suspend_devices_and_enter	power/power.h	/^static inline int suspend_devices_and_enter(suspend_state_t state)$/;"	kind:function	signature:(suspend_state_t state)
suspend_freeze_processes	power/power.h	/^static inline int suspend_freeze_processes(void)$/;"	kind:function	signature:(void)
suspend_test_finish	power/power.h	/^extern void suspend_test_finish(const char *label);$/;"	kind:prototype	signature:(const char *label)
suspend_test_finish	power/power.h	/^static inline void suspend_test_finish(const char *label) {}$/;"	kind:function	signature:(const char *label)
suspend_test_start	power/power.h	/^extern void suspend_test_start(void);$/;"	kind:prototype	signature:(void)
suspend_test_start	power/power.h	/^static inline void suspend_test_start(void) {}$/;"	kind:function	signature:(void)
suspend_thaw_processes	power/power.h	/^static inline void suspend_thaw_processes(void)$/;"	kind:function	signature:(void)
switched_from	sched/sched.h	/^	void (*switched_from)(struct rq *this_rq, struct task_struct *task);$/;"	kind:member	struct:sched_class	access:public
switched_to	sched/sched.h	/^	void (*switched_to)  (struct rq *this_rq, struct task_struct *task);$/;"	kind:member	struct:sched_class	access:public
swsusp_check	power/power.h	/^extern int swsusp_check(void);$/;"	kind:prototype	signature:(void)
swsusp_close	power/power.h	/^extern void swsusp_close(fmode_t);$/;"	kind:prototype	signature:(fmode_t)
swsusp_free	power/power.h	/^extern void swsusp_free(void);$/;"	kind:prototype	signature:(void)
swsusp_info	power/power.h	/^struct swsusp_info {$/;"	kind:struct
swsusp_info::cpus	power/power.h	/^	int			cpus;$/;"	kind:member	struct:swsusp_info	access:public
swsusp_info::image_pages	power/power.h	/^	unsigned long		image_pages;$/;"	kind:member	struct:swsusp_info	access:public
swsusp_info::num_physpages	power/power.h	/^	unsigned long		num_physpages;$/;"	kind:member	struct:swsusp_info	access:public
swsusp_info::pages	power/power.h	/^	unsigned long		pages;$/;"	kind:member	struct:swsusp_info	access:public
swsusp_info::size	power/power.h	/^	unsigned long		size;$/;"	kind:member	struct:swsusp_info	access:public
swsusp_info::uts	power/power.h	/^	struct new_utsname	uts;$/;"	kind:member	struct:swsusp_info	typeref:struct:swsusp_info::new_utsname	access:public
swsusp_info::version_code	power/power.h	/^	u32			version_code;$/;"	kind:member	struct:swsusp_info	access:public
swsusp_read	power/power.h	/^extern int swsusp_read(unsigned int *flags_p);$/;"	kind:prototype	signature:(unsigned int *flags_p)
swsusp_resume_block	power/power.h	/^extern sector_t swsusp_resume_block;$/;"	kind:externvar
swsusp_resume_device	power/power.h	/^extern dev_t swsusp_resume_device;$/;"	kind:externvar
swsusp_save	power/power.h	/^asmlinkage int swsusp_save(void);$/;"	kind:prototype	signature:(void)
swsusp_show_speed	power/power.h	/^extern void swsusp_show_speed(ktime_t, ktime_t, unsigned int, char *);$/;"	kind:prototype	signature:(ktime_t, ktime_t, unsigned int, char *)
swsusp_swap_in_use	power/power.h	/^extern int swsusp_swap_in_use(void);$/;"	kind:prototype	signature:(void)
swsusp_unmark	power/power.h	/^extern int swsusp_unmark(void);$/;"	kind:prototype	signature:(void)
swsusp_write	power/power.h	/^extern int swsusp_write(unsigned int flags);$/;"	kind:prototype	signature:(unsigned int flags)
sym	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
sym_end	debug/kdb/kdb_private.h	/^		unsigned long sym_end;$/;"	kind:member	struct:__ksymtab	access:public
sym_name	debug/kdb/kdb_private.h	/^		const char *sym_name;	\/* Full symbol name, including$/;"	kind:member	struct:__ksymtab	access:public
sym_start	debug/kdb/kdb_private.h	/^		unsigned long sym_start;$/;"	kind:member	struct:__ksymtab	access:public
symbol	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(symbol);$/;"	kind:variable
symoffs	module-internal.h	/^	unsigned long symoffs, stroffs, init_typeoffs, core_typeoffs;$/;"	kind:member	struct:load_info	access:public
sync	sched/sched.h	/^	struct u64_stats_sync	sync;$/;"	kind:member	struct:irqtime	typeref:struct:irqtime::u64_stats_sync	access:public
sync_exp_reset_tree	rcu/tree_exp.h	/^static void __maybe_unused sync_exp_reset_tree(void)$/;"	kind:function	signature:(void)
sync_exp_reset_tree_hotplug	rcu/tree_exp.h	/^static void sync_exp_reset_tree_hotplug(void)$/;"	kind:function	signature:(void)
sync_exp_work_done	rcu/tree_exp.h	/^static bool sync_exp_work_done(unsigned long s)$/;"	kind:function	signature:(unsigned long s)
sync_rcu_exp_select_cpus	rcu/tree_exp.h	/^static void sync_rcu_exp_select_cpus(void)$/;"	kind:function	signature:(void)
sync_rcu_exp_select_node_cpus	rcu/tree_exp.h	/^static void sync_rcu_exp_select_node_cpus(struct work_struct *wp)$/;"	kind:function	signature:(struct work_struct *wp)
sync_rcu_preempt_exp_done	rcu/tree_exp.h	/^static bool sync_rcu_preempt_exp_done(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
sync_rcu_preempt_exp_done_unlocked	rcu/tree_exp.h	/^static bool sync_rcu_preempt_exp_done_unlocked(struct rcu_node *rnp)$/;"	kind:function	signature:(struct rcu_node *rnp)
sync_read	power/power.h	/^	int		sync_read;	\/* Set to one to notify the caller of$/;"	kind:member	struct:snapshot_handle	access:public
sync_sched_exp_online_cleanup	rcu/tree_exp.h	/^static void sync_sched_exp_online_cleanup(int cpu)$/;"	kind:function	signature:(int cpu)
synchronize_rcu_expedited	rcu/tree_exp.h	/^EXPORT_SYMBOL_GPL(synchronize_rcu_expedited);$/;"	kind:variable
synchronize_rcu_expedited	rcu/tree_exp.h	/^void synchronize_rcu_expedited(void)$/;"	kind:function	signature:(void)
synchronize_sched_expedited_wait	rcu/tree_exp.h	/^static void synchronize_sched_expedited_wait(void)$/;"	kind:function	signature:(void)
sys_refcount_enter	trace/trace.h	/^	int			sys_refcount_enter;$/;"	kind:member	struct:trace_array	access:public
sys_refcount_exit	trace/trace.h	/^	int			sys_refcount_exit;$/;"	kind:member	struct:trace_array	access:public
syscall_trace_enter	trace/trace.h	/^struct syscall_trace_enter {$/;"	kind:struct
syscall_trace_enter::args	trace/trace.h	/^	unsigned long		args[];$/;"	kind:member	struct:syscall_trace_enter	access:public
syscall_trace_enter::ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	kind:member	struct:syscall_trace_enter	typeref:struct:syscall_trace_enter::trace_entry	access:public
syscall_trace_enter::nr	trace/trace.h	/^	int			nr;$/;"	kind:member	struct:syscall_trace_enter	access:public
syscall_trace_exit	trace/trace.h	/^struct syscall_trace_exit {$/;"	kind:struct
syscall_trace_exit::ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	kind:member	struct:syscall_trace_exit	typeref:struct:syscall_trace_exit::trace_entry	access:public
syscall_trace_exit::nr	trace/trace.h	/^	int			nr;$/;"	kind:member	struct:syscall_trace_exit	access:public
syscall_trace_exit::ret	trace/trace.h	/^	long			ret;$/;"	kind:member	struct:syscall_trace_exit	access:public
sysctl_sched_features	sched/sched.h	/^extern const_debug unsigned int sysctl_sched_features;$/;"	kind:externvar
sysctl_sched_features	sched/sched.h	/^static const_debug __maybe_unused unsigned int sysctl_sched_features =$/;"	kind:variable
sysctl_sched_migration_cost	sched/sched.h	/^extern const_debug unsigned int sysctl_sched_migration_cost;$/;"	kind:externvar
sysctl_sched_nr_migrate	sched/sched.h	/^extern const_debug unsigned int sysctl_sched_nr_migrate;$/;"	kind:externvar
sysfs_get_uname	time/tick-internal.h	/^extern ssize_t sysfs_get_uname(const char *buf, char *dst, size_t cnt);$/;"	kind:prototype	signature:(const char *buf, char *dst, size_t cnt)
sysrq_rcu	rcu/tree_stall.h	/^static bool sysrq_rcu;$/;"	kind:variable
sysrq_rcudump_op	rcu/tree_stall.h	/^static struct sysrq_key_op sysrq_rcudump_op = {$/;"	kind:variable	typeref:struct:sysrq_key_op
sysrq_sched_debug_show	sched/sched.h	/^extern void sysrq_sched_debug_show(void);$/;"	kind:prototype	signature:(void)
sysrq_show_rcu	rcu/tree_stall.h	/^static void sysrq_show_rcu(int key)$/;"	kind:function	signature:(int key)
systems	trace/trace.h	/^	struct list_head	systems;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
target_auid	audit.h	/^	kuid_t		    target_auid;$/;"	kind:member	struct:audit_context	access:public
target_comm	audit.h	/^	char		    target_comm[TASK_COMM_LEN];$/;"	kind:member	struct:audit_context	access:public
target_pid	audit.h	/^	pid_t		    target_pid;$/;"	kind:member	struct:audit_context	access:public
target_sessionid	audit.h	/^	unsigned int	    target_sessionid;$/;"	kind:member	struct:audit_context	access:public
target_sid	audit.h	/^	u32		    target_sid;$/;"	kind:member	struct:audit_context	access:public
target_uid	audit.h	/^	kuid_t		    target_uid;$/;"	kind:member	struct:audit_context	access:public
task	debug/debug_core.h	/^	struct task_struct	*task;$/;"	kind:member	struct:debuggerinfo_struct	typeref:struct:debuggerinfo_struct::task_struct	access:public
task	locking/rtmutex_common.h	/^	struct task_struct	*task;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::task_struct	access:public
task	workqueue_internal.h	/^	struct task_struct	*task;		\/* I: worker task *\/$/;"	kind:member	struct:worker	typeref:struct:worker::task_struct	access:public
task_cgroup_from_root	cgroup/cgroup-internal.h	/^struct cgroup *task_cgroup_from_root(struct task_struct *task,$/;"	kind:prototype	signature:(struct task_struct *task, struct cgroup_root *root)
task_change_group	sched/sched.h	/^	void (*task_change_group)(struct task_struct *p, int type);$/;"	kind:member	struct:sched_class	access:public
task_current	sched/sched.h	/^static inline int task_current(struct rq *rq, struct task_struct *p)$/;"	kind:function	signature:(struct rq *rq, struct task_struct *p)
task_dead	sched/sched.h	/^	void (*task_dead)(struct task_struct *p);$/;"	kind:member	struct:sched_class	access:public
task_fork	sched/sched.h	/^	void (*task_fork)(struct task_struct *p);$/;"	kind:member	struct:sched_class	access:public
task_group	sched/sched.h	/^static inline struct task_group *task_group(struct task_struct *p)$/;"	kind:function	signature:(struct task_struct *p)
task_group	sched/sched.h	/^struct task_group {$/;"	kind:struct
task_group::____cacheline_aligned	sched/sched.h	/^	atomic_long_t		load_avg ____cacheline_aligned;$/;"	kind:member	struct:task_group	access:public
task_group::autogroup	sched/sched.h	/^	struct autogroup	*autogroup;$/;"	kind:member	struct:task_group	typeref:struct:task_group::autogroup	access:public
task_group::cfs_bandwidth	sched/sched.h	/^	struct cfs_bandwidth	cfs_bandwidth;$/;"	kind:member	struct:task_group	typeref:struct:task_group::cfs_bandwidth	access:public
task_group::cfs_rq	sched/sched.h	/^	struct cfs_rq		**cfs_rq;$/;"	kind:member	struct:task_group	typeref:struct:task_group::cfs_rq	access:public
task_group::children	sched/sched.h	/^	struct list_head	children;$/;"	kind:member	struct:task_group	typeref:struct:task_group::list_head	access:public
task_group::css	sched/sched.h	/^	struct cgroup_subsys_state css;$/;"	kind:member	struct:task_group	typeref:struct:task_group::cgroup_subsys_state	access:public
task_group::list	sched/sched.h	/^	struct list_head	list;$/;"	kind:member	struct:task_group	typeref:struct:task_group::list_head	access:public
task_group::parent	sched/sched.h	/^	struct task_group	*parent;$/;"	kind:member	struct:task_group	typeref:struct:task_group::task_group	access:public
task_group::rcu	sched/sched.h	/^	struct rcu_head		rcu;$/;"	kind:member	struct:task_group	typeref:struct:task_group::rcu_head	access:public
task_group::rt_bandwidth	sched/sched.h	/^	struct rt_bandwidth	rt_bandwidth;$/;"	kind:member	struct:task_group	typeref:struct:task_group::rt_bandwidth	access:public
task_group::rt_rq	sched/sched.h	/^	struct rt_rq		**rt_rq;$/;"	kind:member	struct:task_group	typeref:struct:task_group::rt_rq	access:public
task_group::rt_se	sched/sched.h	/^	struct sched_rt_entity	**rt_se;$/;"	kind:member	struct:task_group	typeref:struct:task_group::sched_rt_entity	access:public
task_group::se	sched/sched.h	/^	struct sched_entity	**se;$/;"	kind:member	struct:task_group	typeref:struct:task_group::sched_entity	access:public
task_group::shares	sched/sched.h	/^	unsigned long		shares;$/;"	kind:member	struct:task_group	access:public
task_group::siblings	sched/sched.h	/^	struct list_head	siblings;$/;"	kind:member	struct:task_group	typeref:struct:task_group::list_head	access:public
task_group::uclamp	sched/sched.h	/^	struct uclamp_se	uclamp[UCLAMP_CNT];$/;"	kind:member	struct:task_group	typeref:struct:task_group::uclamp_se	access:public
task_group::uclamp_pct	sched/sched.h	/^	unsigned int		uclamp_pct[UCLAMP_CNT];$/;"	kind:member	struct:task_group	access:public
task_group::uclamp_req	sched/sched.h	/^	struct uclamp_se	uclamp_req[UCLAMP_CNT];$/;"	kind:member	struct:task_group	typeref:struct:task_group::uclamp_se	access:public
task_group_is_autogroup	sched/autogroup.h	/^static inline bool task_group_is_autogroup(struct task_group *tg)$/;"	kind:function	signature:(struct task_group *tg)
task_groups	sched/sched.h	/^extern struct list_head task_groups;$/;"	kind:externvar
task_has_dl_policy	sched/sched.h	/^static inline int task_has_dl_policy(struct task_struct *p)$/;"	kind:function	signature:(struct task_struct *p)
task_has_idle_policy	sched/sched.h	/^static inline int task_has_idle_policy(struct task_struct *p)$/;"	kind:function	signature:(struct task_struct *p)
task_has_pi_waiters	locking/rtmutex_common.h	/^static inline int task_has_pi_waiters(struct task_struct *p)$/;"	kind:function	signature:(struct task_struct *p)
task_has_rt_policy	sched/sched.h	/^static inline int task_has_rt_policy(struct task_struct *p)$/;"	kind:function	signature:(struct task_struct *p)
task_on_rq_migrating	sched/sched.h	/^static inline int task_on_rq_migrating(struct task_struct *p)$/;"	kind:function	signature:(struct task_struct *p)
task_on_rq_queued	sched/sched.h	/^static inline int task_on_rq_queued(struct task_struct *p)$/;"	kind:function	signature:(struct task_struct *p)
task_rq	sched/sched.h	1047;"	kind:macro
task_running	sched/sched.h	/^static inline int task_running(struct rq *rq, struct task_struct *p)$/;"	kind:function	signature:(struct rq *rq, struct task_struct *p)
task_struct	smpboot.h	/^struct task_struct;$/;"	kind:externvar
task_tick	sched/sched.h	/^	void (*task_tick)(struct rq *rq, struct task_struct *p, int queued);$/;"	kind:member	struct:sched_class	access:public
task_top_pi_waiter	locking/rtmutex_common.h	/^task_top_pi_waiter(struct task_struct *p)$/;"	kind:function	signature:(struct task_struct *p)
task_wants_autogroup	sched/autogroup.h	/^extern bool task_wants_autogroup(struct task_struct *p, struct task_group *tg);$/;"	kind:prototype	signature:(struct task_struct *p, struct task_group *tg)
task_woken	sched/sched.h	/^	void (*task_woken)(struct rq *this_rq, struct task_struct *task);$/;"	kind:member	struct:sched_class	access:public
tasks	sched/sched.h	/^	unsigned long tasks : BITS_PER_LONG - bits_per(SCHED_CAPACITY_SCALE);$/;"	kind:member	struct:uclamp_bucket	access:public
tasks_timeline	sched/sched.h	/^	struct rb_root_cached	tasks_timeline;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::rb_root_cached	access:public
tg	sched/autogroup.h	/^	struct task_group	*tg;$/;"	kind:member	struct:autogroup	typeref:struct:autogroup::task_group	access:public
tg	sched/sched.h	/^	struct task_group	*tg;	\/* group that "owns" this runqueue *\/$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::task_group	access:public
tg	sched/sched.h	/^	struct task_group	*tg;$/;"	kind:member	struct:rt_rq	typeref:struct:rt_rq::task_group	access:public
tg_load_avg_contrib	sched/sched.h	/^	unsigned long		tg_load_avg_contrib;$/;"	kind:member	struct:cfs_rq	access:public
tg_nop	sched/sched.h	/^extern int tg_nop(struct task_group *tg, void *data);$/;"	kind:prototype	signature:(struct task_group *tg, void *data)
tg_visitor	sched/sched.h	/^typedef int (*tg_visitor)(struct task_group *, void *);$/;"	kind:typedef
this_bw	sched/sched.h	/^	u64			this_bw;$/;"	kind:member	struct:dl_rq	access:public
this_rq	sched/sched.h	1046;"	kind:macro
thr_query	debug/debug_core.h	/^	unsigned long		thr_query;$/;"	kind:member	struct:kgdb_state	access:public
threadid	debug/debug_core.h	/^	unsigned long		threadid;$/;"	kind:member	struct:kgdb_state	access:public
throttle_count	sched/sched.h	/^	int			throttle_count;$/;"	kind:member	struct:cfs_rq	access:public
throttled	sched/sched.h	/^	int			throttled;$/;"	kind:member	struct:cfs_rq	access:public
throttled_cfs_rq	sched/sched.h	/^	struct list_head	throttled_cfs_rq;$/;"	kind:member	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::list_head	access:public
throttled_clock	sched/sched.h	/^	u64			throttled_clock;$/;"	kind:member	struct:cfs_rq	access:public
throttled_clock_task	sched/sched.h	/^	u64			throttled_clock_task;$/;"	kind:member	struct:cfs_rq	access:public
throttled_clock_task_time	sched/sched.h	/^	u64			throttled_clock_task_time;$/;"	kind:member	struct:cfs_rq	access:public
throttled_list	sched/sched.h	/^	struct list_head	throttled_list;$/;"	kind:member	struct:cfs_rq	typeref:struct:cfs_rq::list_head	access:public
throttled_time	sched/sched.h	/^	u64			throttled_time;$/;"	kind:member	struct:cfs_bandwidth	access:public
tick_broadcast_init	time/tick-internal.h	/^extern void tick_broadcast_init(void);$/;"	kind:prototype	signature:(void)
tick_broadcast_init	time/tick-internal.h	/^static inline void tick_broadcast_init(void) { }$/;"	kind:function	signature:(void)
tick_broadcast_offline	time/tick-internal.h	/^extern void tick_broadcast_offline(unsigned int cpu);$/;"	kind:prototype	signature:(unsigned int cpu)
tick_broadcast_offline	time/tick-internal.h	/^static inline void tick_broadcast_offline(unsigned int cpu) { }$/;"	kind:function	signature:(unsigned int cpu)
tick_broadcast_oneshot_active	time/tick-internal.h	/^extern int tick_broadcast_oneshot_active(void);$/;"	kind:prototype	signature:(void)
tick_broadcast_oneshot_active	time/tick-internal.h	/^static inline int tick_broadcast_oneshot_active(void) { return 0; }$/;"	kind:function	signature:(void)
tick_broadcast_oneshot_available	time/tick-internal.h	/^bool tick_broadcast_oneshot_available(void);$/;"	kind:prototype	signature:(void)
tick_broadcast_oneshot_available	time/tick-internal.h	/^static inline bool tick_broadcast_oneshot_available(void) { return tick_oneshot_possible(); }$/;"	kind:function	signature:(void)
tick_broadcast_switch_to_oneshot	time/tick-internal.h	/^extern void tick_broadcast_switch_to_oneshot(void);$/;"	kind:prototype	signature:(void)
tick_broadcast_switch_to_oneshot	time/tick-internal.h	/^static inline void tick_broadcast_switch_to_oneshot(void) { }$/;"	kind:function	signature:(void)
tick_broadcast_update_freq	time/tick-internal.h	/^extern int tick_broadcast_update_freq(struct clock_event_device *dev, u32 freq);$/;"	kind:prototype	signature:(struct clock_event_device *dev, u32 freq)
tick_broadcast_update_freq	time/tick-internal.h	/^static inline int tick_broadcast_update_freq(struct clock_event_device *dev, u32 freq) { return -ENODEV; }$/;"	kind:function	signature:(struct clock_event_device *dev, u32 freq)
tick_cancel_sched_timer	time/tick-sched.h	/^extern void tick_cancel_sched_timer(int cpu);$/;"	kind:prototype	signature:(int cpu)
tick_cancel_sched_timer	time/tick-sched.h	/^static inline void tick_cancel_sched_timer(int cpu) { }$/;"	kind:function	signature:(int cpu)
tick_check_new_device	time/tick-internal.h	/^extern void tick_check_new_device(struct clock_event_device *dev);$/;"	kind:prototype	signature:(struct clock_event_device *dev)
tick_check_oneshot_broadcast_this_cpu	time/tick-internal.h	/^extern void tick_check_oneshot_broadcast_this_cpu(void);$/;"	kind:prototype	signature:(void)
tick_check_oneshot_broadcast_this_cpu	time/tick-internal.h	/^static inline void tick_check_oneshot_broadcast_this_cpu(void) { }$/;"	kind:function	signature:(void)
tick_check_oneshot_change	time/tick-internal.h	/^extern int tick_check_oneshot_change(int allow_nohz);$/;"	kind:prototype	signature:(int allow_nohz)
tick_check_oneshot_change	time/tick-internal.h	/^static inline int tick_check_oneshot_change(int allow_nohz) { return 0; }$/;"	kind:function	signature:(int allow_nohz)
tick_check_replacement	time/tick-internal.h	/^extern bool tick_check_replacement(struct clock_event_device *curdev,$/;"	kind:prototype	signature:(struct clock_event_device *curdev, struct clock_event_device *newdev)
tick_clock_notify	time/tick-internal.h	/^extern void tick_clock_notify(void);$/;"	kind:prototype	signature:(void)
tick_clock_notify	time/tick-internal.h	/^static inline void tick_clock_notify(void) { }$/;"	kind:function	signature:(void)
tick_delta	sched/sched.h	/^	u64			tick_delta;$/;"	kind:member	struct:irqtime	access:public
tick_dep_mask	time/tick-sched.h	/^	atomic_t			tick_dep_mask;$/;"	kind:member	struct:tick_sched	access:public
tick_device	time/tick-sched.h	/^struct tick_device {$/;"	kind:struct
tick_device::evtdev	time/tick-sched.h	/^	struct clock_event_device *evtdev;$/;"	kind:member	struct:tick_device	typeref:struct:tick_device::clock_event_device	access:public
tick_device::mode	time/tick-sched.h	/^	enum tick_device_mode mode;$/;"	kind:member	struct:tick_device	typeref:enum:tick_device::tick_device_mode	access:public
tick_device_is_functional	time/tick-internal.h	/^static inline int tick_device_is_functional(struct clock_event_device *dev)$/;"	kind:function	signature:(struct clock_event_device *dev)
tick_device_mode	time/tick-sched.h	/^enum tick_device_mode {$/;"	kind:enum
tick_device_uses_broadcast	time/tick-internal.h	/^extern int tick_device_uses_broadcast(struct clock_event_device *dev, int cpu);$/;"	kind:prototype	signature:(struct clock_event_device *dev, int cpu)
tick_device_uses_broadcast	time/tick-internal.h	/^static inline int tick_device_uses_broadcast(struct clock_event_device *dev, int cpu) { return 0; }$/;"	kind:function	signature:(struct clock_event_device *dev, int cpu)
tick_do_periodic_broadcast	time/tick-internal.h	/^static inline void tick_do_periodic_broadcast(struct clock_event_device *d) { }$/;"	kind:function	signature:(struct clock_event_device *d)
tick_get_broadcast_device	time/tick-internal.h	/^extern struct tick_device *tick_get_broadcast_device(void);$/;"	kind:prototype	signature:(void)
tick_get_broadcast_mask	time/tick-internal.h	/^extern struct cpumask *tick_get_broadcast_mask(void);$/;"	kind:prototype	signature:(void)
tick_get_broadcast_oneshot_mask	time/tick-internal.h	/^extern struct cpumask *tick_get_broadcast_oneshot_mask(void);$/;"	kind:prototype	signature:(void)
tick_get_device	time/tick-internal.h	/^extern struct tick_device *tick_get_device(int cpu);$/;"	kind:prototype	signature:(int cpu)
tick_get_tick_sched	time/tick-sched.h	/^extern struct tick_sched *tick_get_tick_sched(int cpu);$/;"	kind:prototype	signature:(int cpu)
tick_handle_periodic	time/tick-internal.h	/^extern void tick_handle_periodic(struct clock_event_device *dev);$/;"	kind:prototype	signature:(struct clock_event_device *dev)
tick_init_highres	time/tick-internal.h	/^extern int tick_init_highres(void);$/;"	kind:prototype	signature:(void)
tick_install_broadcast_device	time/tick-internal.h	/^extern void tick_install_broadcast_device(struct clock_event_device *dev);$/;"	kind:prototype	signature:(struct clock_event_device *dev)
tick_install_broadcast_device	time/tick-internal.h	/^static inline void tick_install_broadcast_device(struct clock_event_device *dev) { }$/;"	kind:function	signature:(struct clock_event_device *dev)
tick_install_replacement	time/tick-internal.h	/^extern void tick_install_replacement(struct clock_event_device *dev);$/;"	kind:prototype	signature:(struct clock_event_device *dev)
tick_is_broadcast_device	time/tick-internal.h	/^extern int tick_is_broadcast_device(struct clock_event_device *dev);$/;"	kind:prototype	signature:(struct clock_event_device *dev)
tick_is_broadcast_device	time/tick-internal.h	/^static inline int tick_is_broadcast_device(struct clock_event_device *dev) { return 0; }$/;"	kind:function	signature:(struct clock_event_device *dev)
tick_is_oneshot_available	time/tick-internal.h	/^extern int tick_is_oneshot_available(void);$/;"	kind:prototype	signature:(void)
tick_next_period	time/tick-internal.h	/^extern ktime_t tick_next_period;$/;"	kind:externvar
tick_nohz_active	time/tick-internal.h	/^extern unsigned long tick_nohz_active;$/;"	kind:externvar
tick_nohz_active	time/tick-internal.h	161;"	kind:macro
tick_nohz_enabled_snap	rcu/tree.h	/^	int tick_nohz_enabled_snap;	\/* Previously seen value from sysfs. *\/$/;"	kind:member	struct:rcu_data	access:public
tick_nohz_init	time/tick-internal.h	/^extern void tick_nohz_init(void);$/;"	kind:prototype	signature:(void)
tick_nohz_init	time/tick-internal.h	/^static inline void tick_nohz_init(void) { }$/;"	kind:function	signature:(void)
tick_nohz_mode	time/tick-sched.h	/^enum tick_nohz_mode {$/;"	kind:enum
tick_oneshot_mode_active	time/tick-internal.h	/^extern int tick_oneshot_mode_active(void);$/;"	kind:prototype	signature:(void)
tick_oneshot_mode_active	time/tick-internal.h	/^static inline int tick_oneshot_mode_active(void) { return 0; }$/;"	kind:function	signature:(void)
tick_oneshot_notify	time/tick-internal.h	/^extern void tick_oneshot_notify(void);$/;"	kind:prototype	signature:(void)
tick_oneshot_notify	time/tick-internal.h	/^static inline void tick_oneshot_notify(void) { }$/;"	kind:function	signature:(void)
tick_oneshot_possible	time/tick-internal.h	/^static inline bool tick_oneshot_possible(void) { return false; }$/;"	kind:function	signature:(void)
tick_oneshot_possible	time/tick-internal.h	/^static inline bool tick_oneshot_possible(void) { return true; }$/;"	kind:function	signature:(void)
tick_period	time/tick-internal.h	/^extern ktime_t tick_period;$/;"	kind:externvar
tick_program_event	time/tick-internal.h	/^extern int tick_program_event(ktime_t expires, int force);$/;"	kind:prototype	signature:(ktime_t expires, int force)
tick_program_event	time/tick-internal.h	/^static inline int tick_program_event(ktime_t expires, int force) { return 0; }$/;"	kind:function	signature:(ktime_t expires, int force)
tick_resume	time/tick-internal.h	/^extern void tick_resume(void);$/;"	kind:prototype	signature:(void)
tick_resume	time/tick-internal.h	/^static inline void tick_resume(void) { }$/;"	kind:function	signature:(void)
tick_resume_broadcast	time/tick-internal.h	/^extern void tick_resume_broadcast(void);$/;"	kind:prototype	signature:(void)
tick_resume_broadcast	time/tick-internal.h	/^static inline void tick_resume_broadcast(void) { }$/;"	kind:function	signature:(void)
tick_resume_check_broadcast	time/tick-internal.h	/^extern bool tick_resume_check_broadcast(void);$/;"	kind:prototype	signature:(void)
tick_resume_check_broadcast	time/tick-internal.h	/^static inline bool tick_resume_check_broadcast(void) { return false; }$/;"	kind:function	signature:(void)
tick_resume_oneshot	time/tick-internal.h	/^extern void tick_resume_oneshot(void);$/;"	kind:prototype	signature:(void)
tick_resume_oneshot	time/tick-internal.h	/^static inline void tick_resume_oneshot(void) { BUG(); }$/;"	kind:function	signature:(void)
tick_sched	time/tick-sched.h	/^struct tick_sched {$/;"	kind:struct
tick_sched::check_clocks	time/tick-sched.h	/^	unsigned long			check_clocks;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::do_timer_last	time/tick-sched.h	/^	unsigned int			do_timer_last	: 1;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::got_idle_tick	time/tick-sched.h	/^	unsigned int			got_idle_tick	: 1;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::idle_active	time/tick-sched.h	/^	unsigned int			idle_active	: 1;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::idle_calls	time/tick-sched.h	/^	unsigned long			idle_calls;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::idle_entrytime	time/tick-sched.h	/^	ktime_t				idle_entrytime;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::idle_exittime	time/tick-sched.h	/^	ktime_t				idle_exittime;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::idle_expires	time/tick-sched.h	/^	ktime_t				idle_expires;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::idle_jiffies	time/tick-sched.h	/^	unsigned long			idle_jiffies;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::idle_sleeps	time/tick-sched.h	/^	unsigned long			idle_sleeps;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::idle_sleeptime	time/tick-sched.h	/^	ktime_t				idle_sleeptime;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::idle_waketime	time/tick-sched.h	/^	ktime_t				idle_waketime;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::inidle	time/tick-sched.h	/^	unsigned int			inidle		: 1;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::iowait_sleeptime	time/tick-sched.h	/^	ktime_t				iowait_sleeptime;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::last_jiffies	time/tick-sched.h	/^	unsigned long			last_jiffies;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::last_tick	time/tick-sched.h	/^	ktime_t				last_tick;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::next_tick	time/tick-sched.h	/^	ktime_t				next_tick;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::next_timer	time/tick-sched.h	/^	u64				next_timer;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::nohz_mode	time/tick-sched.h	/^	enum tick_nohz_mode		nohz_mode;$/;"	kind:member	struct:tick_sched	typeref:enum:tick_sched::tick_nohz_mode	access:public
tick_sched::sched_timer	time/tick-sched.h	/^	struct hrtimer			sched_timer;$/;"	kind:member	struct:tick_sched	typeref:struct:tick_sched::hrtimer	access:public
tick_sched::tick_dep_mask	time/tick-sched.h	/^	atomic_t			tick_dep_mask;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::tick_stopped	time/tick-sched.h	/^	unsigned int			tick_stopped	: 1;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::timer_expires	time/tick-sched.h	/^	u64				timer_expires;$/;"	kind:member	struct:tick_sched	access:public
tick_sched::timer_expires_base	time/tick-sched.h	/^	u64				timer_expires_base;$/;"	kind:member	struct:tick_sched	access:public
tick_set_periodic_handler	time/tick-internal.h	/^extern void tick_set_periodic_handler(struct clock_event_device *dev, int broadcast);$/;"	kind:prototype	signature:(struct clock_event_device *dev, int broadcast)
tick_set_periodic_handler	time/tick-internal.h	/^static inline void tick_set_periodic_handler(struct clock_event_device *dev, int broadcast)$/;"	kind:function	signature:(struct clock_event_device *dev, int broadcast)
tick_setup_oneshot	time/tick-internal.h	/^extern void tick_setup_oneshot(struct clock_event_device *newdev,$/;"	kind:prototype	signature:(struct clock_event_device *newdev, void (*handler)(struct clock_event_device *), ktime_t nextevt)
tick_setup_oneshot	time/tick-internal.h	/^void tick_setup_oneshot(struct clock_event_device *newdev,$/;"	kind:function	signature:(struct clock_event_device *newdev, void (*handler)(struct clock_event_device *), ktime_t nextevt)
tick_setup_periodic	time/tick-internal.h	/^extern void tick_setup_periodic(struct clock_event_device *dev, int broadcast);$/;"	kind:prototype	signature:(struct clock_event_device *dev, int broadcast)
tick_setup_sched_timer	time/tick-sched.h	/^extern void tick_setup_sched_timer(void);$/;"	kind:prototype	signature:(void)
tick_shutdown	time/tick-internal.h	/^extern void tick_shutdown(unsigned int cpu);$/;"	kind:prototype	signature:(unsigned int cpu)
tick_stopped	time/tick-sched.h	/^	unsigned int			tick_stopped	: 1;$/;"	kind:member	struct:tick_sched	access:public
tick_suspend	time/tick-internal.h	/^extern void tick_suspend(void);$/;"	kind:prototype	signature:(void)
tick_suspend	time/tick-internal.h	/^static inline void tick_suspend(void) { }$/;"	kind:function	signature:(void)
tick_suspend_broadcast	time/tick-internal.h	/^extern void tick_suspend_broadcast(void);$/;"	kind:prototype	signature:(void)
tick_suspend_broadcast	time/tick-internal.h	/^static inline void tick_suspend_broadcast(void) { }$/;"	kind:function	signature:(void)
tick_switch_to_oneshot	time/tick-internal.h	/^extern int tick_switch_to_oneshot(void (*handler)(struct clock_event_device *));$/;"	kind:prototype	signature:(void (*handler)(struct clock_event_device *))
ticks_this_gp	rcu/tree.h	/^	unsigned long	ticks_this_gp;	\/* The number of scheduling-clock *\/$/;"	kind:member	struct:rcu_data	access:public
time_stamp_abs_ref	trace/trace.h	/^	int			time_stamp_abs_ref;$/;"	kind:member	struct:trace_array	access:public
time_start	trace/trace.h	/^	u64				time_start;$/;"	kind:member	struct:trace_buffer	access:public
timekeeping_max_deferment	time/timekeeping.h	/^extern u64 timekeeping_max_deferment(void);$/;"	kind:prototype	signature:(void)
timekeeping_resume	time/timekeeping.h	/^extern void timekeeping_resume(void);$/;"	kind:prototype	signature:(void)
timekeeping_suspend	time/timekeeping.h	/^extern int timekeeping_suspend(void);$/;"	kind:prototype	signature:(void)
timekeeping_valid_for_hres	time/timekeeping.h	/^extern int timekeeping_valid_for_hres(void);$/;"	kind:prototype	signature:(void)
timekeeping_warp_clock	time/timekeeping.h	/^extern void timekeeping_warp_clock(void);$/;"	kind:prototype	signature:(void)
timer_arm	time/posix-timers.h	/^	void	(*timer_arm)(struct k_itimer *timr, ktime_t expires,$/;"	kind:member	struct:k_clock	access:public
timer_clear_idle	time/tick-internal.h	/^void timer_clear_idle(void);$/;"	kind:prototype	signature:(void)
timer_create	time/posix-timers.h	/^	int	(*timer_create)(struct k_itimer *timer);$/;"	kind:member	struct:k_clock	access:public
timer_del	time/posix-timers.h	/^	int	(*timer_del)(struct k_itimer *timr);$/;"	kind:member	struct:k_clock	access:public
timer_expires	time/tick-sched.h	/^	u64				timer_expires;$/;"	kind:member	struct:tick_sched	access:public
timer_expires_base	time/tick-sched.h	/^	u64				timer_expires_base;$/;"	kind:member	struct:tick_sched	access:public
timer_forward	time/posix-timers.h	/^	s64	(*timer_forward)(struct k_itimer *timr, ktime_t now);$/;"	kind:member	struct:k_clock	access:public
timer_get	time/posix-timers.h	/^	void	(*timer_get)(struct k_itimer *timr,$/;"	kind:member	struct:k_clock	access:public
timer_rearm	time/posix-timers.h	/^	void	(*timer_rearm)(struct k_itimer *timr);$/;"	kind:member	struct:k_clock	access:public
timer_remaining	time/posix-timers.h	/^	ktime_t	(*timer_remaining)(struct k_itimer *timr, ktime_t now);$/;"	kind:member	struct:k_clock	access:public
timer_set	time/posix-timers.h	/^	int	(*timer_set)(struct k_itimer *timr, int flags,$/;"	kind:member	struct:k_clock	access:public
timer_try_to_cancel	time/posix-timers.h	/^	int	(*timer_try_to_cancel)(struct k_itimer *timr);$/;"	kind:member	struct:k_clock	access:public
timer_wait_running	time/posix-timers.h	/^	void	(*timer_wait_running)(struct k_itimer *timr);$/;"	kind:member	struct:k_clock	access:public
timers_migration_enabled	time/tick-internal.h	/^extern struct static_key_false timers_migration_enabled;$/;"	kind:externvar
timers_update_nohz	time/tick-internal.h	/^extern void timers_update_nohz(void);$/;"	kind:prototype	signature:(void)
timers_update_nohz	time/tick-internal.h	/^static inline void timers_update_nohz(void) { }$/;"	kind:function	signature:(void)
timeval	power/power.h	/^struct timeval;$/;"	kind:externvar
tk_debug_account_sleep_time	time/timekeeping_internal.h	/^extern void tk_debug_account_sleep_time(const struct timespec64 *t);$/;"	kind:prototype	signature:(const struct timespec64 *t)
tk_debug_account_sleep_time	time/timekeeping_internal.h	13;"	kind:macro
tmp_alone_branch	sched/sched.h	/^	struct list_head	*tmp_alone_branch;$/;"	kind:member	struct:rq	typeref:struct:rq::list_head	access:public
to_ratio	sched/sched.h	/^unsigned long to_ratio(u64 period, u64 runtime);$/;"	kind:prototype	signature:(u64 period, u64 runtime)
top_trace_array	trace/trace.h	/^static inline struct trace_array *top_trace_array(void)$/;"	kind:function	signature:(void)
topts	trace/trace.h	/^	struct trace_option_dentry	*topts;$/;"	kind:member	struct:trace_options	typeref:struct:trace_options::trace_option_dentry	access:public
topts	trace/trace.h	/^	struct trace_options	*topts;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::trace_options	access:public
total	sched/sched.h	/^	u64			total;$/;"	kind:member	struct:irqtime	access:public
total_bw	sched/sched.h	/^	u64			total_bw;$/;"	kind:member	struct:dl_bw	access:public
tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	kind:member	struct:trace_buffer	typeref:struct:trace_buffer::trace_array	access:public
tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	kind:member	struct:trace_option_dentry	typeref:struct:trace_option_dentry::trace_array	access:public
tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	kind:member	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::trace_array	access:public
trace	trace/trace.h	/^	struct tracer		*trace;$/;"	kind:member	struct:tracer_flags	typeref:struct:tracer_flags::tracer	access:public
trace_array	trace/trace.h	/^struct trace_array {$/;"	kind:struct
trace_array	trace/trace.h	/^struct trace_array;$/;"	kind:externvar
trace_array::allocated_snapshot	trace/trace.h	/^	bool			allocated_snapshot;$/;"	kind:member	struct:trace_array	access:public
trace_array::buffer_disabled	trace/trace.h	/^	int			buffer_disabled;$/;"	kind:member	struct:trace_array	access:public
trace_array::buffer_percent	trace/trace.h	/^	int			buffer_percent;$/;"	kind:member	struct:trace_array	access:public
trace_array::clear_trace	trace/trace.h	/^	bool			clear_trace;$/;"	kind:member	struct:trace_array	access:public
trace_array::clock_id	trace/trace.h	/^	int			clock_id;$/;"	kind:member	struct:trace_array	access:public
trace_array::cond_snapshot	trace/trace.h	/^	struct cond_snapshot	*cond_snapshot;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::cond_snapshot	access:public
trace_array::current_trace	trace/trace.h	/^	struct tracer		*current_trace;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::tracer	access:public
trace_array::dir	trace/trace.h	/^	struct dentry		*dir;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::dentry	access:public
trace_array::enter_syscall_files	trace/trace.h	/^	struct trace_event_file __rcu *enter_syscall_files[NR_syscalls];$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::__rcu	access:public
trace_array::err_log	trace/trace.h	/^	struct list_head	err_log;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
trace_array::event_dir	trace/trace.h	/^	struct dentry		*event_dir;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::dentry	access:public
trace_array::events	trace/trace.h	/^	struct list_head	events;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
trace_array::exit_syscall_files	trace/trace.h	/^	struct trace_event_file __rcu *exit_syscall_files[NR_syscalls];$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::__rcu	access:public
trace_array::filtered_pids	trace/trace.h	/^	struct trace_pid_list	__rcu *filtered_pids;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::__rcu	access:public
trace_array::flags	trace/trace.h	/^	unsigned int		flags;$/;"	kind:member	struct:trace_array	access:public
trace_array::func_probes	trace/trace.h	/^	struct list_head	func_probes;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
trace_array::function_enabled	trace/trace.h	/^	int			function_enabled;$/;"	kind:member	struct:trace_array	access:public
trace_array::function_pids	trace/trace.h	/^	struct trace_pid_list	__rcu *function_pids;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::__rcu	access:public
trace_array::hist_vars	trace/trace.h	/^	struct list_head	hist_vars;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
trace_array::list	trace/trace.h	/^	struct list_head	list;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
trace_array::max_buffer	trace/trace.h	/^	struct trace_buffer	max_buffer;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::trace_buffer	access:public
trace_array::max_latency	trace/trace.h	/^	unsigned long		max_latency;$/;"	kind:member	struct:trace_array	access:public
trace_array::max_lock	trace/trace.h	/^	arch_spinlock_t		max_lock;$/;"	kind:member	struct:trace_array	access:public
trace_array::mod_notrace	trace/trace.h	/^	struct list_head	mod_notrace;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
trace_array::mod_trace	trace/trace.h	/^	struct list_head	mod_trace;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
trace_array::n_err_log_entries	trace/trace.h	/^	unsigned int		n_err_log_entries;$/;"	kind:member	struct:trace_array	access:public
trace_array::name	trace/trace.h	/^	char			*name;$/;"	kind:member	struct:trace_array	access:public
trace_array::nr_topts	trace/trace.h	/^	int			nr_topts;$/;"	kind:member	struct:trace_array	access:public
trace_array::ops	trace/trace.h	/^	struct ftrace_ops	*ops;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::ftrace_ops	access:public
trace_array::options	trace/trace.h	/^	struct dentry		*options;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::dentry	access:public
trace_array::percpu_dir	trace/trace.h	/^	struct dentry		*percpu_dir;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::dentry	access:public
trace_array::ref	trace/trace.h	/^	int			ref;$/;"	kind:member	struct:trace_array	access:public
trace_array::start_lock	trace/trace.h	/^	raw_spinlock_t		start_lock;$/;"	kind:member	struct:trace_array	access:public
trace_array::stop_count	trace/trace.h	/^	int			stop_count;$/;"	kind:member	struct:trace_array	access:public
trace_array::sys_refcount_enter	trace/trace.h	/^	int			sys_refcount_enter;$/;"	kind:member	struct:trace_array	access:public
trace_array::sys_refcount_exit	trace/trace.h	/^	int			sys_refcount_exit;$/;"	kind:member	struct:trace_array	access:public
trace_array::systems	trace/trace.h	/^	struct list_head	systems;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::list_head	access:public
trace_array::time_stamp_abs_ref	trace/trace.h	/^	int			time_stamp_abs_ref;$/;"	kind:member	struct:trace_array	access:public
trace_array::topts	trace/trace.h	/^	struct trace_options	*topts;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::trace_options	access:public
trace_array::trace_buffer	trace/trace.h	/^	struct trace_buffer	trace_buffer;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::trace_buffer	access:public
trace_array::trace_flags	trace/trace.h	/^	unsigned int		trace_flags;$/;"	kind:member	struct:trace_array	access:public
trace_array::trace_flags_index	trace/trace.h	/^	unsigned char		trace_flags_index[TRACE_FLAGS_MAX_SIZE];$/;"	kind:member	struct:trace_array	access:public
trace_array::trace_marker_file	trace/trace.h	/^	struct trace_event_file *trace_marker_file;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::trace_event_file	access:public
trace_array::tracing_cpumask	trace/trace.h	/^	cpumask_var_t		tracing_cpumask; \/* only trace on set CPUs *\/$/;"	kind:member	struct:trace_array	access:public
trace_array_cpu	trace/trace.h	/^struct trace_array_cpu {$/;"	kind:struct
trace_array_cpu::buffer_page	trace/trace.h	/^	void			*buffer_page;	\/* ring buffer spare *\/$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::comm	trace/trace.h	/^	char			comm[TASK_COMM_LEN];$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::critical_end	trace/trace.h	/^	unsigned long		critical_end;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::critical_sequence	trace/trace.h	/^	unsigned long		critical_sequence;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::critical_start	trace/trace.h	/^	unsigned long		critical_start;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::disabled	trace/trace.h	/^	atomic_t		disabled;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::entries	trace/trace.h	/^	unsigned long		entries;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::ftrace_ignore_pid	trace/trace.h	/^	bool			ftrace_ignore_pid;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::ignore_pid	trace/trace.h	/^	bool			ignore_pid;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::nice	trace/trace.h	/^	unsigned long		nice;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::pid	trace/trace.h	/^	pid_t			pid;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::policy	trace/trace.h	/^	unsigned long		policy;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::preempt_timestamp	trace/trace.h	/^	u64			preempt_timestamp;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::rt_priority	trace/trace.h	/^	unsigned long		rt_priority;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::saved_latency	trace/trace.h	/^	unsigned long		saved_latency;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::skipped_entries	trace/trace.h	/^	unsigned long		skipped_entries;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_cpu::uid	trace/trace.h	/^	kuid_t			uid;$/;"	kind:member	struct:trace_array_cpu	access:public
trace_array_get	trace/trace.h	/^extern int trace_array_get(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
trace_array_printk	trace/trace.h	/^int trace_array_printk(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, unsigned long ip, const char *fmt, ...)
trace_array_printk_buf	trace/trace.h	/^int trace_array_printk_buf(struct ring_buffer *buffer,$/;"	kind:prototype	signature:(struct ring_buffer *buffer, unsigned long ip, const char *fmt, ...)
trace_array_put	trace/trace.h	/^extern void trace_array_put(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
trace_array_vprintk	trace/trace.h	/^trace_array_vprintk(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, unsigned long ip, const char *fmt, va_list args)
trace_assign_type	trace/trace.h	392;"	kind:macro
trace_benchmark_reg	trace/trace_benchmark.h	/^extern int trace_benchmark_reg(void);$/;"	kind:prototype	signature:(void)
trace_benchmark_unreg	trace/trace_benchmark.h	/^extern void trace_benchmark_unreg(void);$/;"	kind:prototype	signature:(void)
trace_branch_disable	trace/trace.h	/^static inline void trace_branch_disable(void)$/;"	kind:function	signature:(void)
trace_branch_enable	trace/trace.h	/^static inline int trace_branch_enable(struct trace_array *tr)$/;"	kind:function	signature:(struct trace_array *tr)
trace_buffer	trace/trace.h	/^	struct trace_buffer	trace_buffer;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::trace_buffer	access:public
trace_buffer	trace/trace.h	/^struct trace_buffer {$/;"	kind:struct
trace_buffer::buffer	trace/trace.h	/^	struct ring_buffer		*buffer;$/;"	kind:member	struct:trace_buffer	typeref:struct:trace_buffer::ring_buffer	access:public
trace_buffer::cpu	trace/trace.h	/^	int				cpu;$/;"	kind:member	struct:trace_buffer	access:public
trace_buffer::data	trace/trace.h	/^	struct trace_array_cpu __percpu	*data;$/;"	kind:member	struct:trace_buffer	typeref:struct:trace_buffer::__percpu	access:public
trace_buffer::time_start	trace/trace.h	/^	u64				time_start;$/;"	kind:member	struct:trace_buffer	access:public
trace_buffer::tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	kind:member	struct:trace_buffer	typeref:struct:trace_buffer::trace_array	access:public
trace_buffer_iter	trace/trace.h	/^trace_buffer_iter(struct trace_iterator *iter, int cpu)$/;"	kind:function	signature:(struct trace_iterator *iter, int cpu)
trace_buffer_lock_reserve	trace/trace.h	/^trace_buffer_lock_reserve(struct ring_buffer *buffer,$/;"	kind:prototype	signature:(struct ring_buffer *buffer, int type, unsigned long len, unsigned long flags, int pc)
trace_buffer_unlock_commit	trace/trace.h	/^static inline void trace_buffer_unlock_commit(struct trace_array *tr,$/;"	kind:function	signature:(struct trace_array *tr, struct ring_buffer *buffer, struct ring_buffer_event *event, unsigned long flags, int pc)
trace_buffer_unlock_commit_nostack	trace/trace.h	/^void trace_buffer_unlock_commit_nostack(struct ring_buffer *buffer,$/;"	kind:prototype	signature:(struct ring_buffer *buffer, struct ring_buffer_event *event)
trace_buffer_unlock_commit_regs	trace/trace.h	/^void trace_buffer_unlock_commit_regs(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, struct ring_buffer *buffer, struct ring_buffer_event *event, unsigned long flags, int pc, struct pt_regs *regs)
trace_buffered_event_disable	trace/trace.h	/^void trace_buffered_event_disable(void);$/;"	kind:prototype	signature:(void)
trace_buffered_event_enable	trace/trace.h	/^void trace_buffered_event_enable(void);$/;"	kind:prototype	signature:(void)
trace_cgroup_path	cgroup/cgroup-internal.h	/^extern char trace_cgroup_path[TRACE_CGROUP_PATH_LEN];$/;"	kind:externvar
trace_cgroup_path_lock	cgroup/cgroup-internal.h	/^extern spinlock_t trace_cgroup_path_lock;$/;"	kind:externvar
trace_clear_recursion	trace/trace.h	/^static __always_inline void trace_clear_recursion(int bit)$/;"	kind:function	signature:(int bit)
trace_clock_in_ns	trace/trace.h	/^extern bool trace_clock_in_ns(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
trace_create_file	trace/trace.h	/^struct dentry *trace_create_file(const char *name,$/;"	kind:prototype	signature:(const char *name, umode_t mode, struct dentry *parent, void *data, const struct file_operations *fops)
trace_default_header	trace/trace.h	/^void trace_default_header(struct seq_file *m);$/;"	kind:prototype	signature:(struct seq_file *m)
trace_empty	trace/trace.h	/^int trace_empty(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
trace_event_enable_cmd_record	trace/trace.h	/^extern void trace_event_enable_cmd_record(bool enable);$/;"	kind:prototype	signature:(bool enable)
trace_event_enable_disable	trace/trace.h	/^extern int trace_event_enable_disable(struct trace_event_file *file,$/;"	kind:prototype	signature:(struct trace_event_file *file, int enable, int soft_disable)
trace_event_enable_tgid_record	trace/trace.h	/^extern void trace_event_enable_tgid_record(bool enable);$/;"	kind:prototype	signature:(bool enable)
trace_event_eval_update	trace/trace.h	/^static inline void trace_event_eval_update(struct trace_eval_map **map, int len) { }$/;"	kind:function	signature:(struct trace_eval_map **map, int len)
trace_event_eval_update	trace/trace.h	/^void trace_event_eval_update(struct trace_eval_map **map, int len);$/;"	kind:prototype	signature:(struct trace_eval_map **map, int len)
trace_event_follow_fork	trace/trace.h	/^extern void trace_event_follow_fork(struct trace_array *tr, bool enable);$/;"	kind:prototype	signature:(struct trace_array *tr, bool enable)
trace_event_init	trace/trace.h	/^static inline void __init trace_event_init(void) { }$/;"	kind:function	signature:(void)
trace_event_init	trace/trace.h	/^void trace_event_init(void);$/;"	kind:prototype	signature:(void)
trace_event_read_lock	trace/trace_output.h	/^extern void trace_event_read_lock(void);$/;"	kind:prototype	signature:(void)
trace_event_read_unlock	trace/trace_output.h	/^extern void trace_event_read_unlock(void);$/;"	kind:prototype	signature:(void)
trace_event_sem	trace/trace_output.h	/^extern struct rw_semaphore trace_event_sem;$/;"	kind:externvar
trace_event_trigger_enable_disable	trace/trace.h	/^extern int trace_event_trigger_enable_disable(struct trace_event_file *file,$/;"	kind:prototype	signature:(struct trace_event_file *file, int trigger_enable)
trace_filter_add_remove_task	trace/trace.h	/^void trace_filter_add_remove_task(struct trace_pid_list *pid_list,$/;"	kind:prototype	signature:(struct trace_pid_list *pid_list, struct task_struct *self, struct task_struct *task)
trace_find_cmdline	trace/trace.h	/^extern void trace_find_cmdline(int pid, char comm[]);$/;"	kind:prototype	signature:(int pid, char comm[])
trace_find_event_field	trace/trace.h	/^trace_find_event_field(struct trace_event_call *call, char *name);$/;"	kind:prototype	signature:(struct trace_event_call *call, char *name)
trace_find_filtered_pid	trace/trace.h	/^bool trace_find_filtered_pid(struct trace_pid_list *filtered_pids,$/;"	kind:prototype	signature:(struct trace_pid_list *filtered_pids, pid_t search_pid)
trace_find_mark	trace/trace.h	/^extern char trace_find_mark(unsigned long long duration);$/;"	kind:prototype	signature:(unsigned long long duration)
trace_find_next_entry	trace/trace.h	/^struct trace_entry *trace_find_next_entry(struct trace_iterator *iter,$/;"	kind:prototype	signature:(struct trace_iterator *iter, int *ent_cpu, u64 *ent_ts)
trace_find_next_entry_inc	trace/trace.h	/^void *trace_find_next_entry_inc(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
trace_find_tgid	trace/trace.h	/^extern int trace_find_tgid(int pid);$/;"	kind:prototype	signature:(int pid)
trace_flag_type	trace/trace.h	/^enum trace_flag_type {$/;"	kind:enum
trace_flags	trace/trace.h	/^	unsigned int		trace_flags;$/;"	kind:member	struct:trace_array	access:public
trace_flags_index	trace/trace.h	/^	unsigned char		trace_flags_index[TRACE_FLAGS_MAX_SIZE];$/;"	kind:member	struct:trace_array	access:public
trace_free_pid_list	trace/trace.h	/^void trace_free_pid_list(struct trace_pid_list *pid_list);$/;"	kind:prototype	signature:(struct trace_pid_list *pid_list)
trace_function	trace/trace.h	/^void trace_function(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, unsigned long ip, unsigned long parent_ip, unsigned long flags, int pc)
trace_get_context_bit	trace/trace.h	/^static __always_inline int trace_get_context_bit(void)$/;"	kind:function	signature:(void)
trace_get_user	trace/trace.h	/^extern int trace_get_user(struct trace_parser *parser, const char __user *ubuf,$/;"	kind:prototype	signature:(struct trace_parser *parser, const char __user *ubuf, size_t cnt, loff_t *ppos)
trace_graph_entry	trace/trace.h	/^int trace_graph_entry(struct ftrace_graph_ent *trace);$/;"	kind:prototype	signature:(struct ftrace_graph_ent *trace)
trace_graph_function	trace/trace.h	/^void trace_graph_function(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, unsigned long ip, unsigned long parent_ip, unsigned long flags, int pc)
trace_graph_return	trace/trace.h	/^void trace_graph_return(struct ftrace_graph_ret *trace);$/;"	kind:prototype	signature:(struct ftrace_graph_ret *trace)
trace_ignore_this_task	trace/trace.h	/^bool trace_ignore_this_task(struct trace_pid_list *filtered_pids,$/;"	kind:prototype	signature:(struct trace_pid_list *filtered_pids, struct task_struct *task)
trace_init_global_iter	trace/trace.h	/^void trace_init_global_iter(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
trace_iterator_bits	trace/trace.h	/^enum trace_iterator_bits {$/;"	kind:enum
trace_iterator_flags	trace/trace.h	/^enum trace_iterator_flags { TRACE_FLAGS };$/;"	kind:enum
trace_iterator_reset	trace/trace.h	/^static __always_inline void trace_iterator_reset(struct trace_iterator *iter)$/;"	kind:function	signature:(struct trace_iterator *iter)
trace_keep_overwrite	trace/trace.h	/^int trace_keep_overwrite(struct tracer *tracer, u32 mask, int set);$/;"	kind:prototype	signature:(struct tracer *tracer, u32 mask, int set)
trace_kprobe_error_injectable	trace/trace_probe.h	/^bool trace_kprobe_error_injectable(struct trace_event_call *call);$/;"	kind:prototype	signature:(struct trace_event_call *call)
trace_kprobe_error_injectable	trace/trace_probe.h	/^static inline bool trace_kprobe_error_injectable(struct trace_event_call *call)$/;"	kind:function	signature:(struct trace_event_call *call)
trace_kprobe_on_func_entry	trace/trace_probe.h	/^bool trace_kprobe_on_func_entry(struct trace_event_call *call);$/;"	kind:prototype	signature:(struct trace_event_call *call)
trace_kprobe_on_func_entry	trace/trace_probe.h	/^static inline bool trace_kprobe_on_func_entry(struct trace_event_call *call)$/;"	kind:function	signature:(struct trace_event_call *call)
trace_latency_header	trace/trace.h	/^void trace_latency_header(struct seq_file *m);$/;"	kind:prototype	signature:(struct seq_file *m)
trace_marker_file	trace/trace.h	/^	struct trace_event_file *trace_marker_file;$/;"	kind:member	struct:trace_array	typeref:struct:trace_array::trace_event_file	access:public
trace_nop_print	trace/trace_output.h	/^extern enum print_line_t trace_nop_print(struct trace_iterator *iter,$/;"	kind:prototype	signature:(struct trace_iterator *iter, int flags, struct trace_event *event)
trace_option_dentry	trace/trace.h	/^struct trace_option_dentry {$/;"	kind:struct
trace_option_dentry	trace/trace.h	/^struct trace_option_dentry;$/;"	kind:externvar
trace_option_dentry::entry	trace/trace.h	/^	struct dentry			*entry;$/;"	kind:member	struct:trace_option_dentry	typeref:struct:trace_option_dentry::dentry	access:public
trace_option_dentry::flags	trace/trace.h	/^	struct tracer_flags		*flags;$/;"	kind:member	struct:trace_option_dentry	typeref:struct:trace_option_dentry::tracer_flags	access:public
trace_option_dentry::opt	trace/trace.h	/^	struct tracer_opt		*opt;$/;"	kind:member	struct:trace_option_dentry	typeref:struct:trace_option_dentry::tracer_opt	access:public
trace_option_dentry::tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	kind:member	struct:trace_option_dentry	typeref:struct:trace_option_dentry::trace_array	access:public
trace_options	trace/trace.h	/^struct trace_options {$/;"	kind:struct
trace_options::topts	trace/trace.h	/^	struct trace_option_dentry	*topts;$/;"	kind:member	struct:trace_options	typeref:struct:trace_options::trace_option_dentry	access:public
trace_options::tracer	trace/trace.h	/^	struct tracer			*tracer;$/;"	kind:member	struct:trace_options	typeref:struct:trace_options::tracer	access:public
trace_parse_run_command	trace/trace.h	/^extern ssize_t trace_parse_run_command(struct file *file,$/;"	kind:prototype	signature:(struct file *file, const char __user *buffer, size_t count, loff_t *ppos, int (*createfn)(int, char**))
trace_parser	trace/trace.h	/^struct trace_parser {$/;"	kind:struct
trace_parser::buffer	trace/trace.h	/^	char		*buffer;$/;"	kind:member	struct:trace_parser	access:public
trace_parser::cont	trace/trace.h	/^	bool		cont;$/;"	kind:member	struct:trace_parser	access:public
trace_parser::idx	trace/trace.h	/^	unsigned	idx;$/;"	kind:member	struct:trace_parser	access:public
trace_parser::size	trace/trace.h	/^	unsigned	size;$/;"	kind:member	struct:trace_parser	access:public
trace_parser_clear	trace/trace.h	/^static inline void trace_parser_clear(struct trace_parser *parser)$/;"	kind:function	signature:(struct trace_parser *parser)
trace_parser_cont	trace/trace.h	/^static inline bool trace_parser_cont(struct trace_parser *parser)$/;"	kind:function	signature:(struct trace_parser *parser)
trace_parser_get_init	trace/trace.h	/^extern int trace_parser_get_init(struct trace_parser *parser, int size);$/;"	kind:prototype	signature:(struct trace_parser *parser, int size)
trace_parser_loaded	trace/trace.h	/^static inline bool trace_parser_loaded(struct trace_parser *parser)$/;"	kind:function	signature:(struct trace_parser *parser)
trace_parser_put	trace/trace.h	/^extern void trace_parser_put(struct trace_parser *parser);$/;"	kind:prototype	signature:(struct trace_parser *parser)
trace_pid_list	trace/trace.h	/^struct trace_pid_list {$/;"	kind:struct
trace_pid_list::pid_max	trace/trace.h	/^	int				pid_max;$/;"	kind:member	struct:trace_pid_list	access:public
trace_pid_list::pids	trace/trace.h	/^	unsigned long			*pids;$/;"	kind:member	struct:trace_pid_list	access:public
trace_pid_next	trace/trace.h	/^void *trace_pid_next(struct trace_pid_list *pid_list, void *v, loff_t *pos);$/;"	kind:prototype	signature:(struct trace_pid_list *pid_list, void *v, loff_t *pos)
trace_pid_show	trace/trace.h	/^int trace_pid_show(struct seq_file *m, void *v);$/;"	kind:prototype	signature:(struct seq_file *m, void *v)
trace_pid_start	trace/trace.h	/^void *trace_pid_start(struct trace_pid_list *pid_list, loff_t *pos);$/;"	kind:prototype	signature:(struct trace_pid_list *pid_list, loff_t *pos)
trace_pid_write	trace/trace.h	/^int trace_pid_write(struct trace_pid_list *filtered_pids,$/;"	kind:prototype	signature:(struct trace_pid_list *filtered_pids, struct trace_pid_list **new_pid_list, const char __user *ubuf, size_t cnt)
trace_print_bprintk_msg_only	trace/trace_output.h	/^trace_print_bprintk_msg_only(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
trace_print_bputs_msg_only	trace/trace_output.h	/^trace_print_bputs_msg_only(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
trace_print_context	trace/trace_output.h	/^extern int trace_print_context(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
trace_print_graph_duration	trace/trace.h	/^trace_print_graph_duration(unsigned long long duration, struct trace_seq *s);$/;"	kind:prototype	signature:(unsigned long long duration, struct trace_seq *s)
trace_print_lat_context	trace/trace_output.h	/^extern int trace_print_lat_context(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
trace_print_lat_fmt	trace/trace_output.h	/^trace_print_lat_fmt(struct trace_seq *s, struct trace_entry *entry);$/;"	kind:prototype	signature:(struct trace_seq *s, struct trace_entry *entry)
trace_print_printk_msg_only	trace/trace_output.h	/^trace_print_printk_msg_only(struct trace_iterator *iter);$/;"	kind:prototype	signature:(struct trace_iterator *iter)
trace_printk_control	trace/trace.h	/^void trace_printk_control(bool enabled);$/;"	kind:prototype	signature:(bool enabled)
trace_printk_init_buffers	trace/trace.h	/^void trace_printk_init_buffers(void);$/;"	kind:prototype	signature:(void)
trace_printk_seq	trace/trace.h	/^void trace_printk_seq(struct trace_seq *s);$/;"	kind:prototype	signature:(struct trace_seq *s)
trace_printk_start_comm	trace/trace.h	/^void trace_printk_start_comm(void);$/;"	kind:prototype	signature:(void)
trace_probe	trace/trace_probe.h	/^struct trace_probe {$/;"	kind:struct
trace_probe::args	trace/trace_probe.h	/^	struct probe_arg		args[];$/;"	kind:member	struct:trace_probe	typeref:struct:trace_probe::probe_arg	access:public
trace_probe::event	trace/trace_probe.h	/^	struct trace_probe_event	*event;$/;"	kind:member	struct:trace_probe	typeref:struct:trace_probe::trace_probe_event	access:public
trace_probe::list	trace/trace_probe.h	/^	struct list_head		list;$/;"	kind:member	struct:trace_probe	typeref:struct:trace_probe::list_head	access:public
trace_probe::nr_args	trace/trace_probe.h	/^	unsigned int			nr_args;$/;"	kind:member	struct:trace_probe	access:public
trace_probe::size	trace/trace_probe.h	/^	ssize_t				size;	\/* trace entry size *\/$/;"	kind:member	struct:trace_probe	access:public
trace_probe_add_file	trace/trace_probe.h	/^int trace_probe_add_file(struct trace_probe *tp, struct trace_event_file *file);$/;"	kind:prototype	signature:(struct trace_probe *tp, struct trace_event_file *file)
trace_probe_append	trace/trace_probe.h	/^int trace_probe_append(struct trace_probe *tp, struct trace_probe *to);$/;"	kind:prototype	signature:(struct trace_probe *tp, struct trace_probe *to)
trace_probe_cleanup	trace/trace_probe.h	/^void trace_probe_cleanup(struct trace_probe *tp);$/;"	kind:prototype	signature:(struct trace_probe *tp)
trace_probe_clear_flag	trace/trace_probe.h	/^static inline void trace_probe_clear_flag(struct trace_probe *tp,$/;"	kind:function	signature:(struct trace_probe *tp, unsigned int flag)
trace_probe_compare_arg_type	trace/trace_probe.h	/^int trace_probe_compare_arg_type(struct trace_probe *a, struct trace_probe *b);$/;"	kind:prototype	signature:(struct trace_probe *a, struct trace_probe *b)
trace_probe_event	trace/trace_probe.h	/^struct trace_probe_event {$/;"	kind:struct
trace_probe_event::call	trace/trace_probe.h	/^	struct trace_event_call		call;$/;"	kind:member	struct:trace_probe_event	typeref:struct:trace_probe_event::trace_event_call	access:public
trace_probe_event::files	trace/trace_probe.h	/^	struct list_head 		files;$/;"	kind:member	struct:trace_probe_event	typeref:struct:trace_probe_event::list_head	access:public
trace_probe_event::flags	trace/trace_probe.h	/^	unsigned int			flags;	\/* For TP_FLAG_* *\/$/;"	kind:member	struct:trace_probe_event	access:public
trace_probe_event::probes	trace/trace_probe.h	/^	struct list_head		probes;$/;"	kind:member	struct:trace_probe_event	typeref:struct:trace_probe_event::list_head	access:public
trace_probe_event_call	trace/trace_probe.h	/^	trace_probe_event_call(struct trace_probe *tp)$/;"	kind:function	signature:(struct trace_probe *tp)
trace_probe_event_from_call	trace/trace_probe.h	/^trace_probe_event_from_call(struct trace_event_call *event_call)$/;"	kind:function	signature:(struct trace_event_call *event_call)
trace_probe_for_each_link	trace/trace_probe.h	339;"	kind:macro
trace_probe_for_each_link_rcu	trace/trace_probe.h	341;"	kind:macro
trace_probe_get_file_link	trace/trace_probe.h	/^struct event_file_link *trace_probe_get_file_link(struct trace_probe *tp,$/;"	kind:prototype	signature:(struct trace_probe *tp, struct trace_event_file *file)
trace_probe_group_name	trace/trace_probe.h	/^static inline const char *trace_probe_group_name(struct trace_probe *tp)$/;"	kind:function	signature:(struct trace_probe *tp)
trace_probe_has_sibling	trace/trace_probe.h	/^static inline bool trace_probe_has_sibling(struct trace_probe *tp)$/;"	kind:function	signature:(struct trace_probe *tp)
trace_probe_has_single_file	trace/trace_probe.h	/^static inline bool trace_probe_has_single_file(struct trace_probe *tp)$/;"	kind:function	signature:(struct trace_probe *tp)
trace_probe_init	trace/trace_probe.h	/^int trace_probe_init(struct trace_probe *tp, const char *event,$/;"	kind:prototype	signature:(struct trace_probe *tp, const char *event, const char *group)
trace_probe_is_enabled	trace/trace_probe.h	/^static inline bool trace_probe_is_enabled(struct trace_probe *tp)$/;"	kind:function	signature:(struct trace_probe *tp)
trace_probe_log	trace/trace_probe.h	/^struct trace_probe_log {$/;"	kind:struct
trace_probe_log::argc	trace/trace_probe.h	/^	int		argc;$/;"	kind:member	struct:trace_probe_log	access:public
trace_probe_log::argv	trace/trace_probe.h	/^	const char	**argv;$/;"	kind:member	struct:trace_probe_log	access:public
trace_probe_log::index	trace/trace_probe.h	/^	int		index;$/;"	kind:member	struct:trace_probe_log	access:public
trace_probe_log::subsystem	trace/trace_probe.h	/^	const char	*subsystem;$/;"	kind:member	struct:trace_probe_log	access:public
trace_probe_log_clear	trace/trace_probe.h	/^void trace_probe_log_clear(void);$/;"	kind:prototype	signature:(void)
trace_probe_log_err	trace/trace_probe.h	462;"	kind:macro
trace_probe_log_init	trace/trace_probe.h	/^void trace_probe_log_init(const char *subsystem, int argc, const char **argv);$/;"	kind:prototype	signature:(const char *subsystem, int argc, const char **argv)
trace_probe_log_set_index	trace/trace_probe.h	/^void trace_probe_log_set_index(int index);$/;"	kind:prototype	signature:(int index)
trace_probe_match_command_args	trace/trace_probe.h	/^bool trace_probe_match_command_args(struct trace_probe *tp,$/;"	kind:prototype	signature:(struct trace_probe *tp, int argc, const char **argv)
trace_probe_name	trace/trace_probe.h	/^static inline const char *trace_probe_name(struct trace_probe *tp)$/;"	kind:function	signature:(struct trace_probe *tp)
trace_probe_primary_from_call	trace/trace_probe.h	/^trace_probe_primary_from_call(struct trace_event_call *call)$/;"	kind:function	signature:(struct trace_event_call *call)
trace_probe_probe_list	trace/trace_probe.h	/^static inline struct list_head *trace_probe_probe_list(struct trace_probe *tp)$/;"	kind:function	signature:(struct trace_probe *tp)
trace_probe_register_event_call	trace/trace_probe.h	/^int trace_probe_register_event_call(struct trace_probe *tp);$/;"	kind:prototype	signature:(struct trace_probe *tp)
trace_probe_remove_file	trace/trace_probe.h	/^int trace_probe_remove_file(struct trace_probe *tp,$/;"	kind:prototype	signature:(struct trace_probe *tp, struct trace_event_file *file)
trace_probe_set_flag	trace/trace_probe.h	/^static inline void trace_probe_set_flag(struct trace_probe *tp,$/;"	kind:function	signature:(struct trace_probe *tp, unsigned int flag)
trace_probe_test_flag	trace/trace_probe.h	/^static inline bool trace_probe_test_flag(struct trace_probe *tp,$/;"	kind:function	signature:(struct trace_probe *tp, unsigned int flag)
trace_probe_unlink	trace/trace_probe.h	/^void trace_probe_unlink(struct trace_probe *tp);$/;"	kind:prototype	signature:(struct trace_probe *tp)
trace_probe_unregister_event_call	trace/trace_probe.h	/^static inline int trace_probe_unregister_event_call(struct trace_probe *tp)$/;"	kind:function	signature:(struct trace_probe *tp)
trace_recursion_clear	trace/trace.h	598;"	kind:macro
trace_recursion_depth	trace/trace.h	601;"	kind:macro
trace_recursion_set	trace/trace.h	597;"	kind:macro
trace_recursion_set_depth	trace/trace.h	603;"	kind:macro
trace_recursion_test	trace/trace.h	599;"	kind:macro
trace_run_command	trace/trace.h	/^extern int trace_run_command(const char *buf, int (*createfn)(int, char**));$/;"	kind:prototype	signature:(const char *buf, int (*createfn)(int, char**))
trace_selftest_startup_branch	trace/trace.h	/^extern int trace_selftest_startup_branch(struct tracer *trace,$/;"	kind:prototype	signature:(struct tracer *trace, struct trace_array *tr)
trace_selftest_startup_function	trace/trace.h	/^extern int trace_selftest_startup_function(struct tracer *trace,$/;"	kind:prototype	signature:(struct tracer *trace, struct trace_array *tr)
trace_selftest_startup_function_graph	trace/trace.h	/^extern int trace_selftest_startup_function_graph(struct tracer *trace,$/;"	kind:prototype	signature:(struct tracer *trace, struct trace_array *tr)
trace_selftest_startup_irqsoff	trace/trace.h	/^extern int trace_selftest_startup_irqsoff(struct tracer *trace,$/;"	kind:prototype	signature:(struct tracer *trace, struct trace_array *tr)
trace_selftest_startup_nop	trace/trace.h	/^extern int trace_selftest_startup_nop(struct tracer *trace,$/;"	kind:prototype	signature:(struct tracer *trace, struct trace_array *tr)
trace_selftest_startup_preemptirqsoff	trace/trace.h	/^extern int trace_selftest_startup_preemptirqsoff(struct tracer *trace,$/;"	kind:prototype	signature:(struct tracer *trace, struct trace_array *tr)
trace_selftest_startup_preemptoff	trace/trace.h	/^extern int trace_selftest_startup_preemptoff(struct tracer *trace,$/;"	kind:prototype	signature:(struct tracer *trace, struct trace_array *tr)
trace_selftest_startup_wakeup	trace/trace.h	/^extern int trace_selftest_startup_wakeup(struct tracer *trace,$/;"	kind:prototype	signature:(struct tracer *trace, struct trace_array *tr)
trace_subsystem_dir	trace/trace.h	/^struct trace_subsystem_dir {$/;"	kind:struct
trace_subsystem_dir::entry	trace/trace.h	/^	struct dentry			*entry;$/;"	kind:member	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::dentry	access:public
trace_subsystem_dir::list	trace/trace.h	/^	struct list_head		list;$/;"	kind:member	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::list_head	access:public
trace_subsystem_dir::nr_events	trace/trace.h	/^	int				nr_events;$/;"	kind:member	struct:trace_subsystem_dir	access:public
trace_subsystem_dir::ref_count	trace/trace.h	/^	int				ref_count;$/;"	kind:member	struct:trace_subsystem_dir	access:public
trace_subsystem_dir::subsystem	trace/trace.h	/^	struct event_subsystem		*subsystem;$/;"	kind:member	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::event_subsystem	access:public
trace_subsystem_dir::tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	kind:member	struct:trace_subsystem_dir	typeref:struct:trace_subsystem_dir::trace_array	access:public
trace_test_and_set_recursion	trace/trace.h	/^static __always_inline int trace_test_and_set_recursion(int start, int max)$/;"	kind:function	signature:(int start, int max)
trace_total_entries	trace/trace.h	/^unsigned long trace_total_entries(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
trace_total_entries_cpu	trace/trace.h	/^unsigned long trace_total_entries_cpu(struct trace_array *tr, int cpu);$/;"	kind:prototype	signature:(struct trace_array *tr, int cpu)
trace_type	trace/trace.h	/^enum trace_type {$/;"	kind:enum
trace_types_lock	trace/trace.h	/^extern struct mutex trace_types_lock;$/;"	kind:externvar
trace_vbprintk	trace/trace.h	/^trace_vbprintk(unsigned long ip, const char *fmt, va_list args);$/;"	kind:prototype	signature:(unsigned long ip, const char *fmt, va_list args)
trace_vprintk	trace/trace.h	/^trace_vprintk(unsigned long ip, const char *fmt, va_list args);$/;"	kind:prototype	signature:(unsigned long ip, const char *fmt, va_list args)
tracepoint_print_iter	trace/trace.h	/^extern struct trace_iterator *tracepoint_print_iter;$/;"	kind:externvar
traceprobe_define_arg_fields	trace/trace_probe.h	/^extern int traceprobe_define_arg_fields(struct trace_event_call *event_call,$/;"	kind:prototype	signature:(struct trace_event_call *event_call, size_t offset, struct trace_probe *tp)
traceprobe_free_probe_arg	trace/trace_probe.h	/^extern void traceprobe_free_probe_arg(struct probe_arg *arg);$/;"	kind:prototype	signature:(struct probe_arg *arg)
traceprobe_parse_event_name	trace/trace_probe.h	/^int traceprobe_parse_event_name(const char **pevent, const char **pgroup,$/;"	kind:prototype	signature:(const char **pevent, const char **pgroup, char *buf, int offset)
traceprobe_parse_probe_arg	trace/trace_probe.h	/^extern int traceprobe_parse_probe_arg(struct trace_probe *tp, int i,$/;"	kind:prototype	signature:(struct trace_probe *tp, int i, char *arg, unsigned int flags)
traceprobe_set_print_fmt	trace/trace_probe.h	/^extern int traceprobe_set_print_fmt(struct trace_probe *tp, bool is_return);$/;"	kind:prototype	signature:(struct trace_probe *tp, bool is_return)
traceprobe_split_symbol_offset	trace/trace_probe.h	/^extern int traceprobe_split_symbol_offset(char *symbol, long *offset);$/;"	kind:prototype	signature:(char *symbol, long *offset)
traceprobe_update_arg	trace/trace_probe.h	/^extern int traceprobe_update_arg(struct probe_arg *arg);$/;"	kind:prototype	signature:(struct probe_arg *arg)
tracer	trace/trace.h	/^	struct tracer			*tracer;$/;"	kind:member	struct:trace_options	typeref:struct:trace_options::tracer	access:public
tracer	trace/trace.h	/^struct tracer {$/;"	kind:struct
tracer	trace/trace.h	/^struct tracer;$/;"	kind:externvar
tracer::allow_instances	trace/trace.h	/^	bool			allow_instances;$/;"	kind:member	struct:tracer	access:public
tracer::close	trace/trace.h	/^	void			(*close)(struct trace_iterator *iter);$/;"	kind:member	struct:tracer	access:public
tracer::enabled	trace/trace.h	/^	int			enabled;$/;"	kind:member	struct:tracer	access:public
tracer::flag_changed	trace/trace.h	/^	int			(*flag_changed)(struct trace_array *tr,$/;"	kind:member	struct:tracer	access:public
tracer::flags	trace/trace.h	/^	struct tracer_flags	*flags;$/;"	kind:member	struct:tracer	typeref:struct:tracer::tracer_flags	access:public
tracer::init	trace/trace.h	/^	int			(*init)(struct trace_array *tr);$/;"	kind:member	struct:tracer	access:public
tracer::name	trace/trace.h	/^	const char		*name;$/;"	kind:member	struct:tracer	access:public
tracer::next	trace/trace.h	/^	struct tracer		*next;$/;"	kind:member	struct:tracer	typeref:struct:tracer::tracer	access:public
tracer::noboot	trace/trace.h	/^	bool			noboot;$/;"	kind:member	struct:tracer	access:public
tracer::open	trace/trace.h	/^	void			(*open)(struct trace_iterator *iter);$/;"	kind:member	struct:tracer	access:public
tracer::pipe_close	trace/trace.h	/^	void			(*pipe_close)(struct trace_iterator *iter);$/;"	kind:member	struct:tracer	access:public
tracer::pipe_open	trace/trace.h	/^	void			(*pipe_open)(struct trace_iterator *iter);$/;"	kind:member	struct:tracer	access:public
tracer::print_header	trace/trace.h	/^	void			(*print_header)(struct seq_file *m);$/;"	kind:member	struct:tracer	access:public
tracer::print_line	trace/trace.h	/^	enum print_line_t	(*print_line)(struct trace_iterator *iter);$/;"	kind:member	struct:tracer	typeref:enum:tracer::print_line	access:public
tracer::print_max	trace/trace.h	/^	bool			print_max;$/;"	kind:member	struct:tracer	access:public
tracer::read	trace/trace.h	/^	ssize_t			(*read)(struct trace_iterator *iter,$/;"	kind:member	struct:tracer	access:public
tracer::ref	trace/trace.h	/^	int			ref;$/;"	kind:member	struct:tracer	access:public
tracer::reset	trace/trace.h	/^	void			(*reset)(struct trace_array *tr);$/;"	kind:member	struct:tracer	access:public
tracer::selftest	trace/trace.h	/^	int			(*selftest)(struct tracer *trace,$/;"	kind:member	struct:tracer	access:public
tracer::set_flag	trace/trace.h	/^	int			(*set_flag)(struct trace_array *tr,$/;"	kind:member	struct:tracer	access:public
tracer::splice_read	trace/trace.h	/^	ssize_t			(*splice_read)(struct trace_iterator *iter,$/;"	kind:member	struct:tracer	access:public
tracer::start	trace/trace.h	/^	void			(*start)(struct trace_array *tr);$/;"	kind:member	struct:tracer	access:public
tracer::stop	trace/trace.h	/^	void			(*stop)(struct trace_array *tr);$/;"	kind:member	struct:tracer	access:public
tracer::update_thresh	trace/trace.h	/^	int			(*update_thresh)(struct trace_array *tr);$/;"	kind:member	struct:tracer	access:public
tracer::use_max_tr	trace/trace.h	/^	bool			use_max_tr;$/;"	kind:member	struct:tracer	access:public
tracer_flags	trace/trace.h	/^struct tracer_flags {$/;"	kind:struct
tracer_flags::opts	trace/trace.h	/^	struct tracer_opt	*opts;$/;"	kind:member	struct:tracer_flags	typeref:struct:tracer_flags::tracer_opt	access:public
tracer_flags::trace	trace/trace.h	/^	struct tracer		*trace;$/;"	kind:member	struct:tracer_flags	typeref:struct:tracer_flags::tracer	access:public
tracer_flags::val	trace/trace.h	/^	u32			val;$/;"	kind:member	struct:tracer_flags	access:public
tracer_hardirqs_off	trace/trace.h	/^static inline void tracer_hardirqs_off(unsigned long a0, unsigned long a1) { }$/;"	kind:function	signature:(unsigned long a0, unsigned long a1)
tracer_hardirqs_off	trace/trace.h	/^void tracer_hardirqs_off(unsigned long a0, unsigned long a1);$/;"	kind:prototype	signature:(unsigned long a0, unsigned long a1)
tracer_hardirqs_on	trace/trace.h	/^static inline void tracer_hardirqs_on(unsigned long a0, unsigned long a1) { }$/;"	kind:function	signature:(unsigned long a0, unsigned long a1)
tracer_hardirqs_on	trace/trace.h	/^void tracer_hardirqs_on(unsigned long a0, unsigned long a1);$/;"	kind:prototype	signature:(unsigned long a0, unsigned long a1)
tracer_init	trace/trace.h	/^int tracer_init(struct tracer *t, struct trace_array *tr);$/;"	kind:prototype	signature:(struct tracer *t, struct trace_array *tr)
tracer_opt	trace/trace.h	/^struct tracer_opt {$/;"	kind:struct
tracer_opt::bit	trace/trace.h	/^	u32		bit; \/* Mask assigned in val field in tracer_flags *\/$/;"	kind:member	struct:tracer_opt	access:public
tracer_opt::name	trace/trace.h	/^	const char	*name; \/* Will appear on the trace_options file *\/$/;"	kind:member	struct:tracer_opt	access:public
tracer_preempt_off	trace/trace.h	/^static inline void tracer_preempt_off(unsigned long a0, unsigned long a1) { }$/;"	kind:function	signature:(unsigned long a0, unsigned long a1)
tracer_preempt_off	trace/trace.h	/^void tracer_preempt_off(unsigned long a0, unsigned long a1);$/;"	kind:prototype	signature:(unsigned long a0, unsigned long a1)
tracer_preempt_on	trace/trace.h	/^static inline void tracer_preempt_on(unsigned long a0, unsigned long a1) { }$/;"	kind:function	signature:(unsigned long a0, unsigned long a1)
tracer_preempt_on	trace/trace.h	/^void tracer_preempt_on(unsigned long a0, unsigned long a1);$/;"	kind:prototype	signature:(unsigned long a0, unsigned long a1)
tracer_stat	trace/trace_stat.h	/^struct tracer_stat {$/;"	kind:struct
tracer_stat::name	trace/trace_stat.h	/^	const char		*name;$/;"	kind:member	struct:tracer_stat	access:public
tracer_stat::stat_cmp	trace/trace_stat.h	/^	int			(*stat_cmp)(void *p1, void *p2);$/;"	kind:member	struct:tracer_stat	access:public
tracer_stat::stat_headers	trace/trace_stat.h	/^	int			(*stat_headers)(struct seq_file *s);$/;"	kind:member	struct:tracer_stat	access:public
tracer_stat::stat_next	trace/trace_stat.h	/^	void			*(*stat_next)(void *prev, int idx);$/;"	kind:member	struct:tracer_stat	access:public
tracer_stat::stat_release	trace/trace_stat.h	/^	void			(*stat_release)(void *stat);$/;"	kind:member	struct:tracer_stat	access:public
tracer_stat::stat_show	trace/trace_stat.h	/^	int			(*stat_show)(struct seq_file *s, void *p);$/;"	kind:member	struct:tracer_stat	access:public
tracer_stat::stat_start	trace/trace_stat.h	/^	void			*(*stat_start)(struct tracer_stat *trace);$/;"	kind:member	struct:tracer_stat	access:public
tracer_tracing_is_on	trace/trace.h	/^bool tracer_tracing_is_on(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
tracer_tracing_off	trace/trace.h	/^void tracer_tracing_off(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
tracer_tracing_on	trace/trace.h	/^void tracer_tracing_on(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
tracing_alloc_snapshot	trace/trace.h	/^extern int tracing_alloc_snapshot(void);$/;"	kind:prototype	signature:(void)
tracing_alloc_snapshot_instance	trace/trace.h	/^int tracing_alloc_snapshot_instance(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
tracing_alloc_snapshot_instance	trace/trace.h	/^static inline int tracing_alloc_snapshot_instance(struct trace_array *tr)$/;"	kind:function	signature:(struct trace_array *tr)
tracing_buffer_mask	trace/trace.h	/^extern cpumask_var_t __read_mostly tracing_buffer_mask;$/;"	kind:externvar
tracing_check_open_get_tr	trace/trace.h	/^extern int tracing_check_open_get_tr(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
tracing_cond_snapshot_data	trace/trace.h	/^extern void *tracing_cond_snapshot_data(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
tracing_cpumask	trace/trace.h	/^	cpumask_var_t		tracing_cpumask; \/* only trace on set CPUs *\/$/;"	kind:member	struct:trace_array	access:public
tracing_get_trace_entry	trace/trace.h	/^struct trace_entry *tracing_get_trace_entry(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, struct trace_array_cpu *data)
tracing_init_dentry	trace/trace.h	/^struct dentry *tracing_init_dentry(void);$/;"	kind:prototype	signature:(void)
tracing_is_disabled	trace/trace.h	/^bool tracing_is_disabled(void);$/;"	kind:prototype	signature:(void)
tracing_is_enabled	trace/trace.h	/^int tracing_is_enabled(void);$/;"	kind:prototype	signature:(void)
tracing_iter_reset	trace/trace.h	/^void tracing_iter_reset(struct trace_iterator *iter, int cpu);$/;"	kind:prototype	signature:(struct trace_iterator *iter, int cpu)
tracing_log_err	trace/trace.h	/^extern void tracing_log_err(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, const char *loc, const char *cmd, const char **errs, u8 type, u8 pos)
tracing_lseek	trace/trace.h	/^loff_t tracing_lseek(struct file *file, loff_t offset, int whence);$/;"	kind:prototype	signature:(struct file *file, loff_t offset, int whence)
tracing_map	trace/tracing_map.h	/^struct tracing_map {$/;"	kind:struct
tracing_map::drops	trace/tracing_map.h	/^	atomic64_t			drops;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::elts	trace/tracing_map.h	/^	struct tracing_map_array	*elts;$/;"	kind:member	struct:tracing_map	typeref:struct:tracing_map::tracing_map_array	access:public
tracing_map::fields	trace/tracing_map.h	/^	struct tracing_map_field	fields[TRACING_MAP_FIELDS_MAX];$/;"	kind:member	struct:tracing_map	typeref:struct:tracing_map::tracing_map_field	access:public
tracing_map::hits	trace/tracing_map.h	/^	atomic64_t			hits;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::key_idx	trace/tracing_map.h	/^	int				key_idx[TRACING_MAP_KEYS_MAX];$/;"	kind:member	struct:tracing_map	access:public
tracing_map::key_size	trace/tracing_map.h	/^	unsigned int			key_size;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::map	trace/tracing_map.h	/^	struct tracing_map_array	*map;$/;"	kind:member	struct:tracing_map	typeref:struct:tracing_map::tracing_map_array	access:public
tracing_map::map_bits	trace/tracing_map.h	/^	unsigned int			map_bits;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::map_size	trace/tracing_map.h	/^	unsigned int			map_size;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::max_elts	trace/tracing_map.h	/^	unsigned int			max_elts;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::n_fields	trace/tracing_map.h	/^	unsigned int			n_fields;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::n_keys	trace/tracing_map.h	/^	unsigned int			n_keys;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::n_vars	trace/tracing_map.h	/^	unsigned int			n_vars;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::next_elt	trace/tracing_map.h	/^	atomic_t			next_elt;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::ops	trace/tracing_map.h	/^	const struct tracing_map_ops	*ops;$/;"	kind:member	struct:tracing_map	typeref:struct:tracing_map::tracing_map_ops	access:public
tracing_map::private_data	trace/tracing_map.h	/^	void				*private_data;$/;"	kind:member	struct:tracing_map	access:public
tracing_map::sort_key	trace/tracing_map.h	/^	struct tracing_map_sort_key	sort_key;$/;"	kind:member	struct:tracing_map	typeref:struct:tracing_map::tracing_map_sort_key	access:public
tracing_map_add_key_field	trace/tracing_map.h	/^extern int tracing_map_add_key_field(struct tracing_map *map,$/;"	kind:prototype	signature:(struct tracing_map *map, unsigned int offset, tracing_map_cmp_fn_t cmp_fn)
tracing_map_add_sum_field	trace/tracing_map.h	/^extern int tracing_map_add_sum_field(struct tracing_map *map);$/;"	kind:prototype	signature:(struct tracing_map *map)
tracing_map_add_var	trace/tracing_map.h	/^extern int tracing_map_add_var(struct tracing_map *map);$/;"	kind:prototype	signature:(struct tracing_map *map)
tracing_map_array	trace/tracing_map.h	/^struct tracing_map_array {$/;"	kind:struct
tracing_map_array::entries_per_page	trace/tracing_map.h	/^	unsigned int entries_per_page;$/;"	kind:member	struct:tracing_map_array	access:public
tracing_map_array::entry_mask	trace/tracing_map.h	/^	unsigned int entry_mask;$/;"	kind:member	struct:tracing_map_array	access:public
tracing_map_array::entry_shift	trace/tracing_map.h	/^	unsigned int entry_shift;$/;"	kind:member	struct:tracing_map_array	access:public
tracing_map_array::entry_size_shift	trace/tracing_map.h	/^	unsigned int entry_size_shift;$/;"	kind:member	struct:tracing_map_array	access:public
tracing_map_array::n_pages	trace/tracing_map.h	/^	unsigned int n_pages;$/;"	kind:member	struct:tracing_map_array	access:public
tracing_map_array::pages	trace/tracing_map.h	/^	void **pages;$/;"	kind:member	struct:tracing_map_array	access:public
tracing_map_clear	trace/tracing_map.h	/^extern void tracing_map_clear(struct tracing_map *map);$/;"	kind:prototype	signature:(struct tracing_map *map)
tracing_map_cmp_fn_t	trace/tracing_map.h	/^typedef int (*tracing_map_cmp_fn_t) (void *val_a, void *val_b);$/;"	kind:typedef
tracing_map_cmp_none	trace/tracing_map.h	/^extern int tracing_map_cmp_none(void *val_a, void *val_b);$/;"	kind:prototype	signature:(void *val_a, void *val_b)
tracing_map_cmp_num	trace/tracing_map.h	/^extern tracing_map_cmp_fn_t tracing_map_cmp_num(int field_size,$/;"	kind:prototype	signature:(int field_size, int field_is_signed)
tracing_map_cmp_string	trace/tracing_map.h	/^extern int tracing_map_cmp_string(void *val_a, void *val_b);$/;"	kind:prototype	signature:(void *val_a, void *val_b)
tracing_map_create	trace/tracing_map.h	/^tracing_map_create(unsigned int map_bits,$/;"	kind:prototype	signature:(unsigned int map_bits, unsigned int key_size, const struct tracing_map_ops *ops, void *private_data)
tracing_map_destroy	trace/tracing_map.h	/^extern void tracing_map_destroy(struct tracing_map *map);$/;"	kind:prototype	signature:(struct tracing_map *map)
tracing_map_destroy_sort_entries	trace/tracing_map.h	/^tracing_map_destroy_sort_entries(struct tracing_map_sort_entry **entries,$/;"	kind:prototype	signature:(struct tracing_map_sort_entry **entries, unsigned int n_entries)
tracing_map_elt	trace/tracing_map.h	/^struct tracing_map_elt {$/;"	kind:struct
tracing_map_elt::fields	trace/tracing_map.h	/^	struct tracing_map_field	*fields;$/;"	kind:member	struct:tracing_map_elt	typeref:struct:tracing_map_elt::tracing_map_field	access:public
tracing_map_elt::key	trace/tracing_map.h	/^	void				*key;$/;"	kind:member	struct:tracing_map_elt	access:public
tracing_map_elt::map	trace/tracing_map.h	/^	struct tracing_map		*map;$/;"	kind:member	struct:tracing_map_elt	typeref:struct:tracing_map_elt::tracing_map	access:public
tracing_map_elt::private_data	trace/tracing_map.h	/^	void				*private_data;$/;"	kind:member	struct:tracing_map_elt	access:public
tracing_map_elt::var_set	trace/tracing_map.h	/^	bool				*var_set;$/;"	kind:member	struct:tracing_map_elt	access:public
tracing_map_elt::vars	trace/tracing_map.h	/^	atomic64_t			*vars;$/;"	kind:member	struct:tracing_map_elt	access:public
tracing_map_entry	trace/tracing_map.h	/^struct tracing_map_entry {$/;"	kind:struct
tracing_map_entry::key	trace/tracing_map.h	/^	u32				key;$/;"	kind:member	struct:tracing_map_entry	access:public
tracing_map_entry::val	trace/tracing_map.h	/^	struct tracing_map_elt		*val;$/;"	kind:member	struct:tracing_map_entry	typeref:struct:tracing_map_entry::tracing_map_elt	access:public
tracing_map_field	trace/tracing_map.h	/^struct tracing_map_field {$/;"	kind:struct
tracing_map_field::__anon22::offset	trace/tracing_map.h	/^		unsigned int			offset;$/;"	kind:member	union:tracing_map_field::__anon22	access:public
tracing_map_field::__anon22::sum	trace/tracing_map.h	/^		atomic64_t			sum;$/;"	kind:member	union:tracing_map_field::__anon22	access:public
tracing_map_field::cmp_fn	trace/tracing_map.h	/^	tracing_map_cmp_fn_t		cmp_fn;$/;"	kind:member	struct:tracing_map_field	access:public
tracing_map_init	trace/tracing_map.h	/^extern int tracing_map_init(struct tracing_map *map);$/;"	kind:prototype	signature:(struct tracing_map *map)
tracing_map_insert	trace/tracing_map.h	/^tracing_map_insert(struct tracing_map *map, void *key);$/;"	kind:prototype	signature:(struct tracing_map *map, void *key)
tracing_map_lookup	trace/tracing_map.h	/^tracing_map_lookup(struct tracing_map *map, void *key);$/;"	kind:prototype	signature:(struct tracing_map *map, void *key)
tracing_map_ops	trace/tracing_map.h	/^struct tracing_map_ops {$/;"	kind:struct
tracing_map_ops::elt_alloc	trace/tracing_map.h	/^	int			(*elt_alloc)(struct tracing_map_elt *elt);$/;"	kind:member	struct:tracing_map_ops	access:public
tracing_map_ops::elt_clear	trace/tracing_map.h	/^	void			(*elt_clear)(struct tracing_map_elt *elt);$/;"	kind:member	struct:tracing_map_ops	access:public
tracing_map_ops::elt_free	trace/tracing_map.h	/^	void			(*elt_free)(struct tracing_map_elt *elt);$/;"	kind:member	struct:tracing_map_ops	access:public
tracing_map_ops::elt_init	trace/tracing_map.h	/^	void			(*elt_init)(struct tracing_map_elt *elt);$/;"	kind:member	struct:tracing_map_ops	access:public
tracing_map_read_sum	trace/tracing_map.h	/^extern u64 tracing_map_read_sum(struct tracing_map_elt *elt, unsigned int i);$/;"	kind:prototype	signature:(struct tracing_map_elt *elt, unsigned int i)
tracing_map_read_var	trace/tracing_map.h	/^extern u64 tracing_map_read_var(struct tracing_map_elt *elt, unsigned int i);$/;"	kind:prototype	signature:(struct tracing_map_elt *elt, unsigned int i)
tracing_map_read_var_once	trace/tracing_map.h	/^extern u64 tracing_map_read_var_once(struct tracing_map_elt *elt, unsigned int i);$/;"	kind:prototype	signature:(struct tracing_map_elt *elt, unsigned int i)
tracing_map_set_field_descr	trace/tracing_map.h	/^extern void tracing_map_set_field_descr(struct tracing_map *map,$/;"	kind:prototype	signature:(struct tracing_map *map, unsigned int i, unsigned int key_offset, tracing_map_cmp_fn_t cmp_fn)
tracing_map_set_var	trace/tracing_map.h	/^extern void tracing_map_set_var(struct tracing_map_elt *elt,$/;"	kind:prototype	signature:(struct tracing_map_elt *elt, unsigned int i, u64 n)
tracing_map_sort_entries	trace/tracing_map.h	/^tracing_map_sort_entries(struct tracing_map *map,$/;"	kind:prototype	signature:(struct tracing_map *map, struct tracing_map_sort_key *sort_keys, unsigned int n_sort_keys, struct tracing_map_sort_entry ***sort_entries)
tracing_map_sort_entry	trace/tracing_map.h	/^struct tracing_map_sort_entry {$/;"	kind:struct
tracing_map_sort_entry::dup	trace/tracing_map.h	/^	bool				dup;$/;"	kind:member	struct:tracing_map_sort_entry	access:public
tracing_map_sort_entry::elt	trace/tracing_map.h	/^	struct tracing_map_elt		*elt;$/;"	kind:member	struct:tracing_map_sort_entry	typeref:struct:tracing_map_sort_entry::tracing_map_elt	access:public
tracing_map_sort_entry::elt_copied	trace/tracing_map.h	/^	bool				elt_copied;$/;"	kind:member	struct:tracing_map_sort_entry	access:public
tracing_map_sort_entry::key	trace/tracing_map.h	/^	void				*key;$/;"	kind:member	struct:tracing_map_sort_entry	access:public
tracing_map_sort_key	trace/tracing_map.h	/^struct tracing_map_sort_key {$/;"	kind:struct
tracing_map_sort_key::descending	trace/tracing_map.h	/^	bool				descending;$/;"	kind:member	struct:tracing_map_sort_key	access:public
tracing_map_sort_key::field_idx	trace/tracing_map.h	/^	unsigned int			field_idx;$/;"	kind:member	struct:tracing_map_sort_key	access:public
tracing_map_update_sum	trace/tracing_map.h	/^extern void tracing_map_update_sum(struct tracing_map_elt *elt,$/;"	kind:prototype	signature:(struct tracing_map_elt *elt, unsigned int i, u64 n)
tracing_map_var_set	trace/tracing_map.h	/^extern bool tracing_map_var_set(struct tracing_map_elt *elt, unsigned int i);$/;"	kind:prototype	signature:(struct tracing_map_elt *elt, unsigned int i)
tracing_open_generic	trace/trace.h	/^int tracing_open_generic(struct inode *inode, struct file *filp);$/;"	kind:prototype	signature:(struct inode *inode, struct file *filp)
tracing_open_generic_tr	trace/trace.h	/^int tracing_open_generic_tr(struct inode *inode, struct file *filp);$/;"	kind:prototype	signature:(struct inode *inode, struct file *filp)
tracing_reset_all_online_cpus	trace/trace.h	/^void tracing_reset_all_online_cpus(void);$/;"	kind:prototype	signature:(void)
tracing_reset_current	trace/trace.h	/^void tracing_reset_current(int cpu);$/;"	kind:prototype	signature:(int cpu)
tracing_reset_online_cpus	trace/trace.h	/^void tracing_reset_online_cpus(struct trace_buffer *buf);$/;"	kind:prototype	signature:(struct trace_buffer *buf)
tracing_selftest_disabled	trace/trace.h	/^extern bool tracing_selftest_disabled;$/;"	kind:externvar
tracing_set_clock	trace/trace.h	/^extern int tracing_set_clock(struct trace_array *tr, const char *clockstr);$/;"	kind:prototype	signature:(struct trace_array *tr, const char *clockstr)
tracing_set_time_stamp_abs	trace/trace.h	/^extern int tracing_set_time_stamp_abs(struct trace_array *tr, bool abs);$/;"	kind:prototype	signature:(struct trace_array *tr, bool abs)
tracing_snapshot_cond	trace/trace.h	/^extern void tracing_snapshot_cond(struct trace_array *tr, void *cond_data);$/;"	kind:prototype	signature:(struct trace_array *tr, void *cond_data)
tracing_snapshot_cond_disable	trace/trace.h	/^extern int tracing_snapshot_cond_disable(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
tracing_snapshot_cond_enable	trace/trace.h	/^extern int tracing_snapshot_cond_enable(struct trace_array *tr, void *cond_data, cond_update_fn_t update);$/;"	kind:prototype	signature:(struct trace_array *tr, void *cond_data, cond_update_fn_t update)
tracing_snapshot_instance	trace/trace.h	/^static inline void tracing_snapshot_instance(struct trace_array *tr) { }$/;"	kind:function	signature:(struct trace_array *tr)
tracing_snapshot_instance	trace/trace.h	/^void tracing_snapshot_instance(struct trace_array *tr);$/;"	kind:prototype	signature:(struct trace_array *tr)
tracing_start_cmdline_record	trace/trace.h	/^void tracing_start_cmdline_record(void);$/;"	kind:prototype	signature:(void)
tracing_start_tgid_record	trace/trace.h	/^void tracing_start_tgid_record(void);$/;"	kind:prototype	signature:(void)
tracing_stop_cmdline_record	trace/trace.h	/^void tracing_stop_cmdline_record(void);$/;"	kind:prototype	signature:(void)
tracing_stop_tgid_record	trace/trace.h	/^void tracing_stop_tgid_record(void);$/;"	kind:prototype	signature:(void)
tracing_thresh	trace/trace.h	/^extern unsigned long tracing_thresh;$/;"	kind:externvar
tracing_update_buffers	trace/trace.h	/^int tracing_update_buffers(void);$/;"	kind:prototype	signature:(void)
tree_count	audit.h	/^	int tree_count;$/;"	kind:member	struct:audit_context	access:public
tree_entry	locking/rtmutex_common.h	/^	struct rb_node          tree_entry;$/;"	kind:member	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rb_node	access:public
trees	audit.h	/^	struct audit_tree_refs *trees, *first_trees;$/;"	kind:member	struct:audit_context	typeref:struct:audit_context::audit_tree_refs	access:public
trigger_data_free	trace/trace.h	/^extern void trigger_data_free(struct event_trigger_data *data);$/;"	kind:prototype	signature:(struct event_trigger_data *data)
trigger_load_balance	sched/sched.h	/^extern void trigger_load_balance(struct rq *rq);$/;"	kind:prototype	signature:(struct rq *rq)
trigger_type	trace/trace.h	/^	enum event_trigger_type	trigger_type;$/;"	kind:member	struct:event_command	typeref:enum:event_command::event_trigger_type	access:public
trylock_clear_pending	locking/qspinlock_paravirt.h	/^static __always_inline int trylock_clear_pending(struct qspinlock *lock)$/;"	kind:function	signature:(struct qspinlock *lock)
tset	cgroup/cgroup-internal.h	/^	struct cgroup_taskset	tset;$/;"	kind:member	struct:cgroup_mgctx	typeref:struct:cgroup_mgctx::cgroup_taskset	access:public
ttwu_count	sched/sched.h	/^	unsigned int		ttwu_count;$/;"	kind:member	struct:rq	access:public
ttwu_local	sched/sched.h	/^	unsigned int		ttwu_local;$/;"	kind:member	struct:rq	access:public
type	audit.h	/^	int type;$/;"	kind:member	struct:audit_context	access:public
type	audit.h	/^	unsigned char		type;		\/* record type *\/$/;"	kind:member	struct:audit_names	access:public
type	bpf/bpf_lru_list.h	/^	u8 type;$/;"	kind:member	struct:bpf_lru_node	access:public
type	trace/trace.h	/^	const char		*type;$/;"	kind:member	struct:ftrace_event_field	access:public
type	trace/trace_probe.h	/^	const struct fetch_type	*type;	\/* Type of this argument *\/$/;"	kind:member	struct:probe_arg	typeref:struct:probe_arg::fetch_type	access:public
u16	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(u16);$/;"	kind:variable
u32	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(u32);$/;"	kind:variable
u64	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(u64);$/;"	kind:variable
u8	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(u8);$/;"	kind:variable
uclamp	sched/sched.h	/^	struct uclamp_se	uclamp[UCLAMP_CNT];$/;"	kind:member	struct:task_group	typeref:struct:task_group::uclamp_se	access:public
uclamp_bucket	sched/sched.h	/^struct uclamp_bucket {$/;"	kind:struct
uclamp_bucket::tasks	sched/sched.h	/^	unsigned long tasks : BITS_PER_LONG - bits_per(SCHED_CAPACITY_SCALE);$/;"	kind:member	struct:uclamp_bucket	access:public
uclamp_bucket::value	sched/sched.h	/^	unsigned long value : bits_per(SCHED_CAPACITY_SCALE);$/;"	kind:member	struct:uclamp_bucket	access:public
uclamp_eff_value	sched/sched.h	/^unsigned int uclamp_eff_value(struct task_struct *p, enum uclamp_id clamp_id);$/;"	kind:prototype	signature:(struct task_struct *p, enum uclamp_id clamp_id)
uclamp_enabled	sched/sched.h	/^	int uclamp_enabled;$/;"	kind:member	struct:sched_class	access:public
uclamp_flags	sched/sched.h	/^	unsigned int		uclamp_flags;$/;"	kind:member	struct:rq	access:public
uclamp_pct	sched/sched.h	/^	unsigned int		uclamp_pct[UCLAMP_CNT];$/;"	kind:member	struct:task_group	access:public
uclamp_req	sched/sched.h	/^	struct uclamp_se	uclamp_req[UCLAMP_CNT];$/;"	kind:member	struct:task_group	typeref:struct:task_group::uclamp_se	access:public
uclamp_rq	sched/sched.h	/^struct uclamp_rq {$/;"	kind:struct
uclamp_rq::bucket	sched/sched.h	/^	struct uclamp_bucket bucket[UCLAMP_BUCKETS];$/;"	kind:member	struct:uclamp_rq	typeref:struct:uclamp_rq::uclamp_bucket	access:public
uclamp_rq::value	sched/sched.h	/^	unsigned int value;$/;"	kind:member	struct:uclamp_rq	access:public
uclamp_util	sched/sched.h	/^static inline unsigned int uclamp_util(struct rq *rq, unsigned int util)$/;"	kind:function	signature:(struct rq *rq, unsigned int util)
uclamp_util_with	sched/sched.h	/^static inline unsigned int uclamp_util_with(struct rq *rq, unsigned int util,$/;"	kind:function	signature:(struct rq *rq, unsigned int util, struct task_struct *p)
uclamp_util_with	sched/sched.h	/^unsigned int uclamp_util_with(struct rq *rq, unsigned int util,$/;"	kind:function	signature:(struct rq *rq, unsigned int util, struct task_struct *p)
uid	audit.h	/^			kuid_t			uid;$/;"	kind:member	struct:audit_context::__anon4::__anon6	access:public
uid	audit.h	/^	kuid_t			uid;$/;"	kind:member	struct:audit_names	access:public
uid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	kind:member	struct:audit_context	access:public
uid	trace/trace.h	/^	kuid_t			uid;$/;"	kind:member	struct:trace_array_cpu	access:public
unmask_irq	irq/internals.h	/^extern void unmask_irq(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
unmask_threaded_irq	irq/internals.h	/^extern void unmask_threaded_irq(struct irq_desc *desc);$/;"	kind:prototype	signature:(struct irq_desc *desc)
unpause_named_trigger	trace/trace.h	/^extern void unpause_named_trigger(struct event_trigger_data *data);$/;"	kind:prototype	signature:(struct event_trigger_data *data)
unreg	trace/trace.h	/^	void			(*unreg)(char *glob,$/;"	kind:member	struct:event_command	access:public
unreg_all	trace/trace.h	/^	void			(*unreg_all)(struct trace_event_file *file);$/;"	kind:member	struct:event_command	access:public
unregister_event_command	trace/trace.h	/^extern int unregister_event_command(struct event_command *cmd);$/;"	kind:prototype	signature:(struct event_command *cmd)
unregister_fair_sched_group	sched/sched.h	/^extern void unregister_fair_sched_group(struct task_group *tg);$/;"	kind:prototype	signature:(struct task_group *tg)
unregister_ftrace_command	trace/trace.h	/^int unregister_ftrace_command(struct ftrace_func_command *cmd);$/;"	kind:prototype	signature:(struct ftrace_func_command *cmd)
unregister_ftrace_command	trace/trace.h	/^static inline __init int unregister_ftrace_command(char *cmd_name)$/;"	kind:function	signature:(char *cmd_name)
unregister_ftrace_function_probe_func	trace/trace.h	/^unregister_ftrace_function_probe_func(char *glob, struct trace_array *tr,$/;"	kind:prototype	signature:(char *glob, struct trace_array *tr, struct ftrace_probe_ops *ops)
unregister_handler_proc	irq/internals.h	/^extern void unregister_handler_proc(unsigned int irq, struct irqaction *action);$/;"	kind:prototype	signature:(unsigned int irq, struct irqaction *action)
unregister_handler_proc	irq/internals.h	/^static inline void unregister_handler_proc(unsigned int irq,$/;"	kind:function	signature:(unsigned int irq, struct irqaction *action)
unregister_irq_proc	irq/internals.h	/^extern void unregister_irq_proc(unsigned int irq, struct irq_desc *desc);$/;"	kind:prototype	signature:(unsigned int irq, struct irq_desc *desc)
unregister_irq_proc	irq/internals.h	/^static inline void unregister_irq_proc(unsigned int irq, struct irq_desc *desc) { }$/;"	kind:function	signature:(unsigned int irq, struct irq_desc *desc)
unregister_sched_domain_sysctl	sched/sched.h	/^static inline void unregister_sched_domain_sysctl(void)$/;"	kind:function	signature:(void)
unregister_sched_domain_sysctl	sched/sched.h	/^void unregister_sched_domain_sysctl(void);$/;"	kind:prototype	signature:(void)
unregister_stat_tracer	trace/trace_stat.h	/^extern void unregister_stat_tracer(struct tracer_stat *trace);$/;"	kind:prototype	signature:(struct tracer_stat *trace)
unthrottle_cfs_rq	sched/sched.h	/^extern void unthrottle_cfs_rq(struct cfs_rq *cfs_rq);$/;"	kind:prototype	signature:(struct cfs_rq *cfs_rq)
update	trace/trace.h	/^	cond_update_fn_t		update;$/;"	kind:member	struct:cond_snapshot	access:public
update_cfs_rq_load_avg	sched/pelt.h	/^update_cfs_rq_load_avg(u64 now, struct cfs_rq *cfs_rq)$/;"	kind:function	signature:(u64 now, struct cfs_rq *cfs_rq)
update_cond_flag	trace/trace.h	/^extern void update_cond_flag(struct trace_event_file *file);$/;"	kind:prototype	signature:(struct trace_event_file *file)
update_curr	sched/sched.h	/^	void (*update_curr)(struct rq *rq);$/;"	kind:member	struct:sched_class	access:public
update_data_loc	trace/trace_probe.h	/^static nokprobe_inline u32 update_data_loc(u32 loc, int consumed)$/;"	kind:function	signature:(u32 loc, int consumed)
update_dl_rq_load_avg	sched/pelt.h	/^int update_dl_rq_load_avg(u64 now, struct rq *rq, int running);$/;"	kind:prototype	signature:(u64 now, struct rq *rq, int running)
update_dl_rq_load_avg	sched/pelt.h	/^update_dl_rq_load_avg(u64 now, struct rq *rq, int running)$/;"	kind:function	signature:(u64 now, struct rq *rq, int running)
update_function_graph_func	trace/ftrace_internal.h	/^static inline void update_function_graph_func(void) { }$/;"	kind:function	signature:(void)
update_function_graph_func	trace/ftrace_internal.h	/^void update_function_graph_func(void);$/;"	kind:prototype	signature:(void)
update_group_capacity	sched/sched.h	/^extern void update_group_capacity(struct sched_domain *sd, int cpu);$/;"	kind:prototype	signature:(struct sched_domain *sd, int cpu)
update_idle_core	sched/sched.h	/^static inline void update_idle_core(struct rq *rq) { }$/;"	kind:function	signature:(struct rq *rq)
update_idle_core	sched/sched.h	/^static inline void update_idle_core(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
update_idle_rq_clock_pelt	sched/pelt.h	/^static inline void update_idle_rq_clock_pelt(struct rq *rq)$/;"	kind:function	signature:(struct rq *rq)
update_idle_rq_clock_pelt	sched/pelt.h	/^update_idle_rq_clock_pelt(struct rq *rq) { }$/;"	kind:function	signature:(struct rq *rq)
update_irq_load_avg	sched/pelt.h	/^int update_irq_load_avg(struct rq *rq, u64 running);$/;"	kind:prototype	signature:(struct rq *rq, u64 running)
update_irq_load_avg	sched/pelt.h	/^update_irq_load_avg(struct rq *rq, u64 running)$/;"	kind:function	signature:(struct rq *rq, u64 running)
update_max_interval	sched/sched.h	/^extern void update_max_interval(void);$/;"	kind:prototype	signature:(void)
update_max_tr	trace/trace.h	/^void update_max_tr(struct trace_array *tr, struct task_struct *tsk, int cpu,$/;"	kind:prototype	signature:(struct trace_array *tr, struct task_struct *tsk, int cpu, void *cond_data)
update_max_tr_single	trace/trace.h	/^void update_max_tr_single(struct trace_array *tr,$/;"	kind:prototype	signature:(struct trace_array *tr, struct task_struct *tsk, int cpu)
update_rq_clock	sched/sched.h	/^extern void update_rq_clock(struct rq *rq);$/;"	kind:prototype	signature:(struct rq *rq)
update_rq_clock_pelt	sched/pelt.h	/^static inline void update_rq_clock_pelt(struct rq *rq, s64 delta)$/;"	kind:function	signature:(struct rq *rq, s64 delta)
update_rq_clock_pelt	sched/pelt.h	/^update_rq_clock_pelt(struct rq *rq, s64 delta) { }$/;"	kind:function	signature:(struct rq *rq, s64 delta)
update_rt_rq_load_avg	sched/pelt.h	/^int update_rt_rq_load_avg(u64 now, struct rq *rq, int running);$/;"	kind:prototype	signature:(u64 now, struct rq *rq, int running)
update_rt_rq_load_avg	sched/pelt.h	/^update_rt_rq_load_avg(u64 now, struct rq *rq, int running)$/;"	kind:function	signature:(u64 now, struct rq *rq, int running)
update_thresh	trace/trace.h	/^	int			(*update_thresh)(struct trace_array *tr);$/;"	kind:member	struct:tracer	access:public
update_wall_time	time/timekeeping.h	/^extern void update_wall_time(void);$/;"	kind:prototype	signature:(void)
use_max_tr	trace/trace.h	/^	bool			use_max_tr;$/;"	kind:member	struct:tracer	access:public
user_page	events/internal.h	/^	struct perf_event_mmap_page	*user_page;$/;"	kind:member	struct:ring_buffer	typeref:struct:ring_buffer::perf_event_mmap_page	access:public
util_avg	sched/sched.h	/^		unsigned long	util_avg;$/;"	kind:member	struct:cfs_rq::__anon28	access:public
uts	power/power.h	/^	struct new_utsname	uts;$/;"	kind:member	struct:swsusp_info	typeref:struct:swsusp_info::new_utsname	access:public
val	trace/trace.h	/^	u32			val;$/;"	kind:member	struct:tracer_flags	access:public
val	trace/trace.h	/^	u64 			val;$/;"	kind:member	struct:filter_pred	access:public
val	trace/tracing_map.h	/^	struct tracing_map_elt		*val;$/;"	kind:member	struct:tracing_map_entry	typeref:struct:tracing_map_entry::tracing_map_elt	access:public
valid_policy	sched/sched.h	/^static inline bool valid_policy(int policy)$/;"	kind:function	signature:(int policy)
value	audit.h	/^	char	*value;	\/* the cmdline field *\/$/;"	kind:member	struct:audit_proctitle	access:public
value	debug/kdb/kdb_private.h	/^		unsigned long value;	\/* Address of symbol *\/$/;"	kind:member	struct:__ksymtab	access:public
value	sched/sched.h	/^	unsigned int value;$/;"	kind:member	struct:uclamp_rq	access:public
value	sched/sched.h	/^	unsigned long value : bits_per(SCHED_CAPACITY_SCALE);$/;"	kind:member	struct:uclamp_bucket	access:public
values	irq/internals.h	/^	u64	values[IRQ_TIMINGS_SIZE];$/;"	kind:member	struct:irq_timings	access:public
var_set	trace/tracing_map.h	/^	bool				*var_set;$/;"	kind:member	struct:tracing_map_elt	access:public
vars	trace/tracing_map.h	/^	atomic64_t			*vars;$/;"	kind:member	struct:tracing_map_elt	access:public
vcpu_halted	locking/qspinlock_paravirt.h	/^	vcpu_halted,		\/* Used only in pv_wait_node *\/$/;"	kind:enumerator	enum:vcpu_state
vcpu_hashed	locking/qspinlock_paravirt.h	/^	vcpu_hashed,		\/* = pv_hash'ed + vcpu_halted *\/$/;"	kind:enumerator	enum:vcpu_state
vcpu_running	locking/qspinlock_paravirt.h	/^	vcpu_running = 0,$/;"	kind:enumerator	enum:vcpu_state
vcpu_state	locking/qspinlock_paravirt.h	/^enum vcpu_state {$/;"	kind:enum
vers	module-internal.h	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	kind:member	struct:load_info::__anon34	access:public
version_code	power/power.h	/^	u32			version_code;$/;"	kind:member	struct:swsusp_info	access:public
vprintk_default	printk/internal.h	/^__printf(1, 0) int vprintk_default(const char *fmt, va_list args);$/;"	kind:prototype	signature:(const char *fmt, va_list args)
vprintk_deferred	printk/internal.h	/^__printf(1, 0) int vprintk_deferred(const char *fmt, va_list args);$/;"	kind:prototype	signature:(const char *fmt, va_list args)
vprintk_func	printk/internal.h	/^__printf(1, 0) int vprintk_func(const char *fmt, va_list args) { return 0; }$/;"	kind:function	signature:(const char *fmt, va_list args)
vprintk_func	printk/internal.h	/^__printf(1, 0) int vprintk_func(const char *fmt, va_list args);$/;"	kind:prototype	signature:(const char *fmt, va_list args)
vprintk_store	printk/internal.h	/^int vprintk_store(int facility, int level,$/;"	kind:prototype	signature:(int facility, int level, const char *dict, size_t dictlen, const char *fmt, va_list args)
wait_blkd_tasks	rcu/tree.h	/^	bool	wait_blkd_tasks;\/* Necessary to wait for blocked tasks to *\/$/;"	kind:member	struct:rcu_node	access:public
wait_rcu_exp_gp	rcu/tree_exp.h	/^static void wait_rcu_exp_gp(struct work_struct *wp)$/;"	kind:function	signature:(struct work_struct *wp)
wake_list	sched/sched.h	/^	struct llist_head	wake_list;$/;"	kind:member	struct:rq	typeref:struct:rq::llist_head	access:public
wake_nocb_gp_defer	rcu/tree_plugin.h	/^static void wake_nocb_gp_defer(struct rcu_data *rdp, int waketype,$/;"	kind:function	signature:(struct rcu_data *rdp, int waketype, const char *reason)
wakeup	events/internal.h	/^	local_t				wakeup;		\/* wakeup stamp      *\/$/;"	kind:member	struct:ring_buffer	access:public
walk_tg_tree	sched/sched.h	/^static inline int walk_tg_tree(tg_visitor down, tg_visitor up, void *data)$/;"	kind:function	signature:(tg_visitor down, tg_visitor up, void *data)
walk_tg_tree_from	sched/sched.h	/^extern int walk_tg_tree_from(struct task_group *from,$/;"	kind:prototype	signature:(struct task_group *from, tg_visitor down, tg_visitor up, void *data)
watermark	events/internal.h	/^	long				watermark;	\/* wakeup watermark  *\/$/;"	kind:member	struct:ring_buffer	access:public
while_for_each_ftrace_op	trace/ftrace_internal.h	23;"	kind:macro
work	events/internal.h	/^	struct work_struct		work;$/;"	kind:member	struct:ring_buffer	typeref:struct:ring_buffer::work_struct	access:public
worker	workqueue_internal.h	/^struct worker {$/;"	kind:struct
worker::__anon27::entry	workqueue_internal.h	/^		struct list_head	entry;	\/* L: while idle *\/$/;"	kind:member	union:worker::__anon27	typeref:struct:worker::__anon27::list_head	access:public
worker::__anon27::hentry	workqueue_internal.h	/^		struct hlist_node	hentry;	\/* L: while busy *\/$/;"	kind:member	union:worker::__anon27	typeref:struct:worker::__anon27::hlist_node	access:public
worker::current_func	workqueue_internal.h	/^	work_func_t		current_func;	\/* L: current_work's fn *\/$/;"	kind:member	struct:worker	access:public
worker::current_pwq	workqueue_internal.h	/^	struct pool_workqueue	*current_pwq; \/* L: current_work's pwq *\/$/;"	kind:member	struct:worker	typeref:struct:worker::pool_workqueue	access:public
worker::current_work	workqueue_internal.h	/^	struct work_struct	*current_work;	\/* L: work being processed *\/$/;"	kind:member	struct:worker	typeref:struct:worker::work_struct	access:public
worker::desc	workqueue_internal.h	/^	char			desc[WORKER_DESC_LEN];$/;"	kind:member	struct:worker	access:public
worker::flags	workqueue_internal.h	/^	unsigned int		flags;		\/* X: flags *\/$/;"	kind:member	struct:worker	access:public
worker::id	workqueue_internal.h	/^	int			id;		\/* I: worker id *\/$/;"	kind:member	struct:worker	access:public
worker::last_active	workqueue_internal.h	/^	unsigned long		last_active;	\/* L: last active timestamp *\/$/;"	kind:member	struct:worker	access:public
worker::last_func	workqueue_internal.h	/^	work_func_t		last_func;$/;"	kind:member	struct:worker	access:public
worker::node	workqueue_internal.h	/^	struct list_head	node;		\/* A: anchored at pool->workers *\/$/;"	kind:member	struct:worker	typeref:struct:worker::list_head	access:public
worker::pool	workqueue_internal.h	/^	struct worker_pool	*pool;		\/* A: the associated pool *\/$/;"	kind:member	struct:worker	typeref:struct:worker::worker_pool	access:public
worker::rescue_wq	workqueue_internal.h	/^	struct workqueue_struct	*rescue_wq;	\/* I: the workqueue to rescue *\/$/;"	kind:member	struct:worker	typeref:struct:worker::workqueue_struct	access:public
worker::scheduled	workqueue_internal.h	/^	struct list_head	scheduled;	\/* L: scheduled works *\/$/;"	kind:member	struct:worker	typeref:struct:worker::list_head	access:public
worker::sleeping	workqueue_internal.h	/^	int			sleeping;	\/* None *\/$/;"	kind:member	struct:worker	access:public
worker::task	workqueue_internal.h	/^	struct task_struct	*task;		\/* I: worker task *\/$/;"	kind:member	struct:worker	typeref:struct:worker::task_struct	access:public
worker_pool	workqueue_internal.h	/^struct worker_pool;$/;"	kind:externvar
wq_worker_last_func	workqueue_internal.h	/^work_func_t wq_worker_last_func(struct task_struct *task);$/;"	kind:prototype	signature:(struct task_struct *task)
wq_worker_running	workqueue_internal.h	/^void wq_worker_running(struct task_struct *task);$/;"	kind:prototype	signature:(struct task_struct *task)
wq_worker_sleeping	workqueue_internal.h	/^void wq_worker_sleeping(struct task_struct *task);$/;"	kind:prototype	signature:(struct task_struct *task)
x16	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(x16);$/;"	kind:variable
x32	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(x32);$/;"	kind:variable
x64	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(x64);$/;"	kind:variable
x8	trace/trace_probe.h	/^DECLARE_BASIC_PRINT_TYPE_FUNC(x8);$/;"	kind:variable
yield_task	sched/sched.h	/^	void (*yield_task)   (struct rq *rq);$/;"	kind:member	struct:sched_class	access:public
yield_to_task	sched/sched.h	/^	bool (*yield_to_task)(struct rq *rq, struct task_struct *p, bool preempt);$/;"	kind:member	struct:sched_class	access:public
yld_count	sched/sched.h	/^	unsigned int		yld_count;$/;"	kind:member	struct:rq	access:public
zero_cpu_stall_ticks	rcu/tree.h	/^static void zero_cpu_stall_ticks(struct rcu_data *rdp);$/;"	kind:prototype	signature:(struct rcu_data *rdp)
zero_cpu_stall_ticks	rcu/tree_stall.h	/^static void zero_cpu_stall_ticks(struct rcu_data *rdp)$/;"	kind:function	signature:(struct rcu_data *rdp)
